openapi: 3.0.3
info:
  version: 0.2.0
  title: Extreme NOS API
  description: >-
    Extreme NOS API allows XIQ to manage and provision Switch Engine(EXOS) and
    Fabric Engine(VOSS).
  termsOfService: 'https://www.extremenetworks.com/company/legal/terms-of-use/'
  contact:
    name: Extreme Networks Support
    url: 'http://www.extremenetworks.com/support'
    email: support@extremenetworks.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: '{scheme}://{device_management_ip}:{port}/{base_path}'
    variables:
      scheme:
        default: http
        enum:
          - http
          - https
        description: Use https for Secure communication
      device_management_ip:
        default: localhost
        description: Device management IP address
      port:
        default: '8080'
        description: The port number on which the API server is exposed.
      base_path:
        default: rest/openapi
        description: The API server Base URL
  - url: '{scheme}://{device_management_ip}/{base_path}'
    variables:
      scheme:
        default: http
        enum:
          - http
          - https
        description: Use https for Secure communication
      device_management_ip:
        default: localhost
        description: Device management IP address
      base_path:
        default: rest/openapi
        description: The Device API server Base URL
security: []
tags:
  - name: Authentication Management
    description: Operations related to Authentication configuration and retrieval
  - name: Auto-sense Management
    description: Operations related to auto-sense configuration and retrieval
  - name: Capabilities Management
    description: Operations related to device level configuration and state
  - name: CDP Management
    description: Operations related to CDP configuration and retrieval
  - name: Certificates Management
    description: >-
      Operations related to SSL/TLS key and certificates management. This is
      specific to Switch Engine.
  - name: CFM Operations
    description: Operations related to L2 ping/traceroute commands
  - name: Device Management
    description: Operations related to device level configuration and retrieval
  - name: DHCP Relay Management
    description: Operations related to DHCP Relay configuration and retrieval.
  - name: DHCP Snoop Management
    description: Operations related to DHCP Snoop configuration and retrieval
  - name: DNS Management
    description: Operations related to DNS configuration and retrieval
  - name: ELRP Management
    description: Operations related to ELRP configuration and retrieval
  - name: Ethernet Interface Management
    description: Operations related to Ethernet Interface configuration and retrieval
  - name: Fabric Attach Management
    description: Operations related to Fabric Attach configuration and retrieval
  - name: Forwarding Management
    description: >-
      Operations related to device forwarding settings configuration and
      retrieval.
  - name: IGMP Management
    description: Operations related to IGMP configuration and retrieval
  - name: Instant MLAG Management
    description: >-
      Operations related to Instant Multi-switch Link Aggregation configuration
      and retrieval
  - name: Instant Port Management
    description: Operations related to instant-port configuration and retrieval
  - name: LAG Management
    description: Operations related to LAG configuration and retrieval.
  - name: LLDP Management
    description: Operations related to LLDP configuration and retrieval
  - name: MAC Locking Management
    description: Operations related to MAC-locking configuration and retrieval
  - name: Management Interface
    description: Operations related to the OOB management interface
  - name: MLAG Management
    description: >-
      Operations related to Multi-switch Link Aggregation configuration and
      retrieval
  - name: Node Alias Management
    description: Operations related to the Node alias Management
  - name: NTP Management
    description: Operations related to NTP configuration and retrieval
  - name: OSPF Management
    description: Operations related to OSPF configuration and retrieval
  - name: POE Power Management
    description: >-
      Operations related to device power and port power configuration and
      retrieval
  - name: Policy Management
    description: Operations related to policy configuration and retrieval
  - name: QOS Management
    description: Operations related to QOS configuration and state.
  - name: RADIUS management
    description: Operations related to RADIUS server settings configuration and retrieval
  - name: RF Neighbor Management
    description: Operations related to RF Neighbor configuration and retrieval
  - name: SLPP Management
    description: Operations related to SLPP configuration and retrieval
  - name: SNMP Management
    description: Operations related to SNMP configuration and retrieval
  - name: SNTP Management
    description: Operations related to SNTP configuration and retrieval
  - name: SPBM Cfm Global Settings
    description: >-
      Operations related to CFM SPBM global settings configuration and
      retrieval.
  - name: SPBM Global Settings
    description: Operations related to SPBM global settings configuration and retrieval
  - name: SPBM Isis Circuit Management
    description: Operations related to ISIS retrieval
  - name: SPBM Isis Global Settings
    description: >-
      Operations related to SPBM ISIS global settings configuration and
      retrieval
  - name: SPBM Isis State Info
    description: Operations related to SPBM ISIS state info
  - name: SPBM Layer2 Isid Management
    description: Operations related to ISID configuration and retrieval
  - name: SPBM Layer3 Accept Policy Management
    description: Operations related to L3 accept policy configuration and retrieval
  - name: SPBM Layer3 VSN Management
    description: Operations related to SPBM L3VSN configuration and retrieval
  - name: SPBM Redistribute Management
    description: Operations related to SPBM redistribute configuration and retrieval
  - name: Stacking Management
    description: Operations related to stacking configuration and retrieval
  - name: Storm Control Management
    description: Operations related to storm-control configuration and retrieval
  - name: STP Management
    description: Operations related to STP configuration and retrieval
  - name: Syslog Management
    description: Operations related to syslog configuration and retrieval
  - name: System Services Management
    description: Operations related to system-services configuration and retrieval
  - name: ThreadManager
    description: Thread actions and get operations for bulk data retrieval.
  - name: Timezone Management
    description: Operations related to timezone configuration and retrieval
  - name: User Account Management
    description: Operations related to user account configuration and retrieval
  - name: VLAN Management
    description: Operations related to VLAN configuration and retrieval
  - name: VRF Management
    description: Operations related to VRF configuration and retrieval
  - name: VRRP Management
    description: Operations related to VRRP configuration and retrieval
  - name: CoreFileEventsManager
    description: Core File Events and State changes
  - name: DhcpSnoopEventsManager
    description: DHCP Snooping event
  - name: EthernetInterfaceStatsManager
    description: Ethernet Interface Stats
  - name: EthernetInterfaceEventsManager
    description: Ethernet Interface Events and State changes
  - name: IotStatsManager
    description: IoT Stats
  - name: IotEventsManager
    description: IoT Events and State Changes
  - name: IsisEventsManager
    description: ISIS Events and State changes
  - name: IsisStatsManager
    description: ISIS Stats
  - name: LagEventsManager
    description: LAG Events
  - name: LldpStatsManager
    description: LLDP Stats
  - name: LldpEventsManager
    description: LLDP Events and State changes
  - name: NodeAliasEventsManager
    description: Node Alias Events and State changes
  - name: OspfEventsManager
    description: Ospf events
  - name: ConfigurationManager
    description: Global configuration
  - name: PlatformStatsManager
    description: Platform Stats
  - name: PlatformEventsManager
    description: Platform Events and State changes
  - name: RouteProtectionEventsManager
    description: Route events
  - name: SlppEventsManager
    description: SLPP and SLPPGuard Events
  - name: MlagEventsManager
    description: MLAG Events
  - name: WirelessStatsManager
    description: Wireless Stats
  - name: WirelessEventsManager
    description: Wireless Events and State changes
paths:
  /v0/configuration/authentication:
    get:
      tags:
        - Authentication Management
      summary: Get the Authentication device and port settings
      description: This operation retrieves the Authentication device and port settings.
      operationId: getAuthenticationConfiguration
      parameters: []
      responses:
        '200':
          description: The Authentication settings for the device and its ports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationAllSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Authentication Management
      summary: Update the Authentication device level settings
      description: >-
        This operation is used to change the Authentication device level
        settings.
      operationId: updateAuthenticationDeviceConfiguration
      parameters: []
      requestBody:
        description: An AuthenticationDeviceSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDeviceSettings'
      responses:
        '204':
          description: Authentication device settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/authentication/uplink-ports:
    put:
      summary: Replace dynamic VLAN uplink-port list
      description: |
        This operation replaces the list of ports added as uplink-ports
        for dynamic VLAN's. An empty list in the request clears the
        list of uplink-ports.
      x-nos: switch-engine
      tags:
        - Authentication Management
      operationId: replaceUplinkPortList
      requestBody:
        description: The new list of ports to be used as dynamic VLAN uplink-ports
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortList'
      responses:
        '204':
          description: Authentication uplink-port list successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/authentication/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Authentication Management
      summary: Get Authentication settings for the specified port
      description: >-
        This operation retrieves the Authentication settings for the specified
        port.
      operationId: getPortAuthenticationSettings
      responses:
        '200':
          description: The Authentication settings for the specified port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationPerPortSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Authentication Management
      summary: Update the Authentication device level settings
      description: >-
        This operation is used to change the Authentication device level
        settings.
      operationId: updateAuthenticationPortConfiguration
      requestBody:
        description: An AuthenticationPerPortSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPerPortSettings'
      responses:
        '204':
          description: Authentication port settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/authentication:
    get:
      tags:
        - Authentication Management
      summary: Get the Authentication state information.
      description: This operation retrieves the AuthenticationStateObject.
      operationId: getPortAuthenticationStateSettings
      responses:
        '200':
          description: The AuthenticationStateObject.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/authentication/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Authentication Management
      summary: Get Authentication state for the specified port
      description: >-
        This operation retrieves the Authentication state for the specified
        port.
      operationId: getPortAuthenticationState
      responses:
        '200':
          description: The Authentication state for the specified port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationStatePerPort'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/authentication/:clear':
    post:
      tags:
        - Authentication Management
      summary: Clear authentication session
      description: >
        This operation clears established authentication sessions.

        For Fabric Engine, 'agents' field should always be set.

        If 'all' is not set, 'ports' or 'policyRole' should be set. 

        If it is intended to clear all sessions from a port (no matter of the
        client's MAC address), 'macAddress' should not be set and only the
        targeted port/ports should be set.

        If only a specific session from a port is intended to be cleared,
        'macAddress' should be set to the appropriate value.

        If 'policyRole' is specified all of the sessions associated with the
        role are cleared (Switch Engine only).
      operationId: clearAuthSessions
      requestBody:
        description: The AuthenticationClearSession object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationClearSession'
      responses:
        '204':
          description: Authentication session cleared successfully.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/autosense:
    get:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Get auto-sense settings
      description: |
        This operation retrieves the auto-sense settings on the device.
      operationId: getAutoSenseSettings
      parameters: []
      responses:
        '200':
          description: AutoSenseSettings defined on the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoSenseSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Update global auto-sense settings
      description: |
        This operation updates the global auto-sense settings.
      operationId: updateGlobalAutoSenseSettings
      requestBody:
        description: Update with GlobalAutoSenseSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalAutoSenseSettings'
      responses:
        '204':
          description: Global Auto-sense settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/autosense/ports:
    get:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Get list of ports auto-sense settings
      description: |
        This operation retrieves the list of ports auto-sense settings on 
        the device. Each object returned is indexed by it's port name as 
        defined in the EthernetInterface object.
      operationId: getPortAutoSenseList
      parameters: []
      responses:
        '200':
          description: List of all PortsAutoSenseSettings defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortsAutoSenseSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/autosense/port/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Get auto-sense settings for a port.
      description: |
        This operation retrieves the auto-sense settings for a single port 
        specified in the path.
      operationId: getPortAutoSenseSettings
      responses:
        '200':
          description: The auto-sense settings for the specified port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortAutoSenseSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Update port auto-sense settings
      description: |
        This operation updates the auto-sense settings for a single port
        specified in the path.
      operationId: updatePortAutoSenseSettings
      requestBody:
        description: The name of the port to update its PortAutoSenseSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortAutoSenseSettings'
      responses:
        '204':
          description: Port Auto-sense settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/autosense/ports:
    get:
      x-nos: fabric-engine
      tags:
        - Auto-sense Management
      summary: Get list of ports auto-sense state information
      description: >
        This operation retrieves the list of ports auto-sense state information
        on 

        the device. Each object returned is indexed by it's port name as 

        defined in the EthernetInterface object.
      operationId: getPortAutoSenseStateList
      parameters: []
      responses:
        '200':
          description: List of all PortAutoSenseState defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortAutoSenseState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/capabilities:
    get:
      tags:
        - Capabilities Management
      summary: Get all capabilities of the device
      description: >
        This operation returns list of all capabilities of the device. 

        The displayed capabilities will be the following: supported endpoints
        per release and

        per platform capabilities, including VLAN, RADIUS, and PORTS.
      operationId: getSystemAllCapability
      parameters: []
      responses:
        '200':
          description: The capabilities object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAllCapabilities'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/capabilities/system:
    get:
      tags:
        - Capabilities Management
      summary: Get platform capabilities of the device
      description: |
        This operation returns list of capabilities of the device. 
        The displayed capabilities will be the following:
        platform capabilities, including VLAN, RADIUS, and PORTS.
      operationId: getSystemCapability
      parameters: []
      responses:
        '200':
          description: The SystemComponents object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/capabilities/urls:
    get:
      tags:
        - Capabilities Management
      summary: Get all supported urls of the device
      description: |
        This operation returns list of all supported urls of the device.
      operationId: getSystemUrls
      parameters: []
      responses:
        '200':
          description: The SystemUrls object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Urls'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/capabilities/system/ports:
    get:
      tags:
        - Capabilities Management
      summary: Get all ports and their capability.
      description: This operation returns list of all ports and their capability.
      operationId: getPortsCapability
      responses:
        '200':
          description: The PortsCapability object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsCapability'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/capabilities/system/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Capabilities Management
      summary: Get all capabilities on specific port.
      description: This operation returns list of all capabilities on specific port.
      operationId: getPortCapability
      responses:
        '200':
          description: The PortCapability object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortCapability'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/cdp/ports:
    get:
      tags:
        - CDP Management
      summary: Get CDP settings for all ports
      description: This operation retrieves CDP settings for all the ports.
      operationId: getCdpSettings
      parameters: []
      responses:
        '200':
          description: The CDP settings for all the ports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortCdp'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/cdp/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - CDP Management
      summary: Get CDP settings for the specified port
      description: This operation retrieves CDP settings for the specified port.
      operationId: getCdpPortSettings
      parameters: []
      responses:
        '200':
          description: The CDP settings for the specified port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortCdpSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - CDP Management
      summary: Replace Port CDP settings
      description: This operation is used to replace CDP settings for a port.
      operationId: replacePortCdpSettings
      requestBody:
        description: The PortCdpSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortCdpSettings'
      responses:
        '204':
          description: Port CDP setttings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/cdp:
    get:
      tags:
        - CDP Management
      summary: Get the CDP state information
      description: |
        This operation retrieves the CDP state information.
      operationId: getCdpState
      parameters: []
      responses:
        '200':
          description: The CdpState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdpState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/certificates/switch-cert:
    get:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Get the SSL/TLS certificate of the switch
      description: >
        Get the SSL/TLS certificate configured in the switch, along with
        presence and match status of key and certificate. This is specific to
        Switch Engine.
      operationId: getSslCertificate
      parameters: []
      responses:
        '200':
          description: The SSL/TLS certificate configured in the switch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertKeyStatus'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Replace SSL/TLS key and certificate in the switch
      description: >
        This operation replaces the SSL/TLS private key and certificate
        configured in the switch. 

        Use block scalar type for request body. Request body can contain single
        key followed by single certificate, both in PEM format. 

        This is specific to Switch Engine.
      operationId: replaceSslCertificateKey
      parameters: []
      requestBody:
        description: An SSL/TLS key and certificate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertKey'
      responses:
        '204':
          description: SSL/TLS key and certificate replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/certificates/trusted-ca:
    get:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Get the trusted CA certificates
      description: >
        Get all the trusted CA certificates configured in the switch. This is
        specific to Switch Engine.
      operationId: getTrustedCaCertificates
      parameters: []
      responses:
        '200':
          description: The trusted CA certificates configured in the switch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertsWithHash'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Replace the trusted CA certificates
      description: >
        This operation replaces the set of trusted CA certificates configured in
        the switch. 

        Use block scalar type for request body. Request body can contain
        multiple CA certificates each in PEM format. 

        This is specific to Switch Engine.
      operationId: replaceTrustedCaCertificates
      parameters: []
      requestBody:
        description: An Certs object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certs'
      responses:
        '204':
          description: Trusted CA certificates replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/certificates/ocsp-ca:
    get:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Get the OCSP CA certificates
      description: >
        Get all the OCSP CA certificates configured in the switch. This is
        specific to Switch Engine.
      operationId: getOcspCaCertificates
      parameters: []
      responses:
        '200':
          description: The OCSP CA certificates configured in the switch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertsWithHash'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      x-nos: switch-engine
      tags:
        - Certificates Management
      summary: Replace the OCSP CA certificates
      description: >
        This operation replaces the set of OCSP CA certificates configured in
        the switch. 

        Use block scalar type for request body. Request body can contain
        multiple CA certificates each in PEM format. 

        This is specific to Switch Engine.
      operationId: replaceOcspCaCertificates
      parameters: []
      requestBody:
        description: An Certs object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certs'
      responses:
        '204':
          description: OCSP CA certificates replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/l2-command/:transmit':
    post:
      tags:
        - CFM Operations
      summary: Generate a L2 ping/traceroute/tracemroute command
      description: >
        This operation generates a L2
        ping/traceroute/tracemroute/IpPing/IpTraceroute/lbm/ltm command
        depending on the L2Command attribute value.

        For Fabric Engine devices all values can be used, but ltm and lbm are
        not implemented at the moment. If tracetree command is intended to be
        issued, set L2Command to L2_TRACEROUTE value and use isid.

        For Switch Engine devices this field can be set only to lbm(loopback
        message = l2 ping) and ltm(linktrace message = l2 traceroute).
      operationId: createL2command
      parameters: []
      requestBody:
        description: The L2commandPost object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CfmL2CommandPost'
      responses:
        '200':
          description: L2 command successfully generated
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/CfmL2PingReplySettings'
                    - $ref: '#/components/schemas/CfmL2TraceReplySettings'
                    - $ref: '#/components/schemas/CfmL2McastTraceReplySettings'
                    - $ref: '#/components/schemas/CfmL2IpPingReplySettings'
                    - $ref: '#/components/schemas/CfmL2IpTraceReplySettings'
                    - $ref: '#/components/schemas/CfmLbmReply'
                    - $ref: '#/components/schemas/CfmLtmReply'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration:
    get:
      tags:
        - Device Management
      summary: Get the device level configuration
      description: |
        This operation retrieves the device level settings for the device.
        The DeviceConfigurationElement consists of all of the individual
        sub components supported on the device.
      operationId: getDeviceConfiguration
      parameters: []
      responses:
        '200':
          description: The entire root level configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfigurationElement'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/route-protection:
    get:
      x-nos: switch-engine
      tags:
        - Device Management
      summary: Get the route protection settings
      description: |
        This operation retrieves the route protection settings for the device.
      operationId: getRouteProtectionConfiguration
      parameters: []
      responses:
        '200':
          description: The route protection configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteProtectionSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: switch-engine
      tags:
        - Device Management
      summary: Update the route protection settings
      description: |
        This operation updates the route protection settings for the device.
      operationId: updateRouteProtectionConfiguration
      parameters: []
      requestBody:
        description: A RouteProtectionSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteProtectionSettings'
      responses:
        '204':
          description: Device's route protection configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/system/image-partition:
    get:
      tags:
        - Device Management
      summary: Get the system image-partition choice settings
      description: >
        This operation retrieves the system image-partition choice settings for
        the device.
      operationId: getSystemImagePartition
      parameters: []
      responses:
        '200':
          description: The system settings on this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemImageGetSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Device Management
      summary: Update the system image-partition choice settings.
      description: >
        This operation updates the system image-partition choice settings for
        the device. Please note that on Fabric Engine(VOSS) only primary image
        can be changed.
      operationId: updateSystemImagePartition
      parameters: []
      requestBody:
        description: A SystemImageUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemImageUpdateSettings'
      responses:
        '204':
          description: System image settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/system/images:
    get:
      x-nos: fabric-engine
      tags:
        - Device Management
      summary: Get the available images on device
      description: >
        This operation retrieves the list of available images on device. This
        operation is applicable only for Fabric Engine (VOSS).
      operationId: getSystemImages
      parameters: []
      responses:
        '200':
          description: The system available images on this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemImagesSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/system/save-config:
    get:
      tags:
        - Device Management
      summary: Get the system config-file choice settings
      description: |
        This operation retrieves the system config-file choice for the device.
      operationId: getSystemConfigFileChoice
      parameters: []
      responses:
        '200':
          description: The system config-file choice settings on this device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigFileChoiceSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Device Management
      summary: Update the system config-file choice settings
      description: |
        This operation updates the system config-file choice for the device.
      operationId: updateSystemConfigFileChoice
      parameters: []
      requestBody:
        description: A SystemConfigFileChoiceSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfigFileChoiceSettings'
      responses:
        '204':
          description: Device's config-file choice settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/system/core-files:
    get:
      tags:
        - Device Management
      summary: Get the list of available core files
      description: |
        This operation retrieves the list of core files on device.
      operationId: getCoreFilesList
      parameters: []
      responses:
        '200':
          description: The system available core files on this device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreFilesSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/system/core-files/{core_file_name}/slots/{slot}':
    parameters:
      - $ref: '#/components/parameters/core_file_name'
      - $ref: '#/components/parameters/slot'
    post:
      tags:
        - Device Management
      summary: Upload the specified core file
      description: >
        This operation uploads the specified core file to the URL specified in
        the payload.

        The request should be sent with an extra header, eg: {"Context-ID":
        "1234ABCD5678edfg"},

        and the context id can be used to check the status of the upload.
      operationId: uploadCoreFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreFileUploadSettings'
      responses:
        '200':
          description: The MD5 of the core file
          content:
            application/json:
              schema:
                type: string
                minLength: 32
                maxLength: 32
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - Device Management
      summary: Delete the specified core file
      description: This operation deletes the specified core file.
      operationId: deleteCoreFile
      responses:
        '204':
          description: The specified core file was deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/openapi:
    get:
      tags:
        - Device Management
      summary: Get the OpenAPI application information
      description: |
        This operation gathers information about the OpenAPI application
      operationId: getOpenapiState
      parameters: []
      responses:
        '200':
          description: Information about the OpenAPI application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenapiState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/system:
    get:
      tags:
        - Device Management
      summary: Get the system information for the device
      description: >
        This operation retrieves the system information for the device.

        On Fabric Engine, the chassis Serial Number is associated with the
        Serial Number of Card 1.
      operationId: getSystemState
      parameters: []
      responses:
        '200':
          description: The SystemState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/operation/system/cli:
    post:
      tags:
        - Device Management
      summary: Post a list of CLI commands for execution
      description: >
        This operation allows execution of any CLI command on NOS through NOS
        API
      operationId: executeCliCommands
      parameters:
        - $ref: '#/components/parameters/continue_on_failure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemCliCommandRequest'
      responses:
        '200':
          description: Response per CLI command executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemCliCommandExecution'
        '207':
          description: Multi-status execution of CLI commands
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemCliCommandExecution'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/operation/bulk:
    post:
      tags:
        - Device Management
      summary: Send multiple API requests in bulk
      description: |
        This operation allows sending multiple API operations in bulk
        to avoid the cummulative round trip times when sending them separately.
        This is implemented as a streaming API, meaning a response for a request
        will be returned as soon as it is available
      operationId: streamBulkApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkApiRequests'
      responses:
        '207':
          description: >-
            response code returned whether a request failed or all requests
            passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkApiReplies'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/request-api/{context_id}':
    parameters:
      - $ref: '#/components/parameters/context_id'
    get:
      tags:
        - Device Management
      summary: Inquire about the status of an ongoing request
      description: >
        The status API will return the progress of an ongoing request.

        The same context id must have been sent as a header { "Context-ID":
        "value" }

        with the original request to be able to retrieve with this API.

        Implementation wise this API will only return progress while the request
        is ongoing,

        this means that as soon the ongoing request is completed, this API will
        return context-id not found
      operationId: statusApi
      responses:
        '200':
          description: Status information for the specified ongoing request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusApiReply'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/reboot/:schedule':
    post:
      tags:
        - Device Management
      summary: Reboot the device
      description: |
        This operation reboots the device.
      operationId: executeRebootDevice
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootSettings'
      responses:
        '204':
          description: Reboot device successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/reboot/:cancel':
    post:
      tags:
        - Device Management
      summary: Cancel scheduled reboot
      description: |
        This operation cancels a scheduled reboot on device.
      operationId: executeCancelRebootDevice
      parameters: []
      responses:
        '204':
          description: Cancelled scheduled reboot successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/system/reboot:
    get:
      tags:
        - Device Management
      summary: Get the status of any outstanding reboot
      description: >
        This operation retrieves the status of any outstanding reboot of the
        device. This operation is applicable only for Switch Engine (EXOS).
      operationId: getRebootState
      parameters: []
      responses:
        '200':
          description: The RebootState for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemRebootState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/config/:save':
    post:
      tags:
        - Device Management
      summary: Save the config-file settings
      description: |
        This operation saves device's settings in a config-file.
      operationId: executeSaveConfigFile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemSaveConfigFile'
      responses:
        '204':
          description: Config-file saved successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/led-locator/:enable':
    post:
      x-nos: switch-engine
      tags:
        - Device Management
      summary: Enable LED device locator
      description: |
        This operation enables the device LED locator.
      operationId: enableLedDeviceLocator
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedLocatorSettings'
      responses:
        '204':
          description: LED device locator enabled successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/led-locator/:disable':
    post:
      x-nos: switch-engine
      tags:
        - Device Management
      summary: Disable LED device locator
      description: |
        This operation disables the device LED locator.
      operationId: disableLedDeviceLocator
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedLocatorDisableSettings'
      responses:
        '204':
          description: LED device locator disabled successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/auth-token/:generate':
    post:
      tags:
        - Device Management
      summary: Generate Auth Token
      description: |
        This operation is used to generate authentication token
      operationId: generateAuthToken
      requestBody:
        description: Generate Auth Token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenGenerate'
      responses:
        '200':
          description: AuthToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/auth-token/:enable':
    post:
      tags:
        - Device Management
      summary: Enforce Auth Token
      description: |
        This operation is used to enforce authentication token
      operationId: enforceAuthToken
      responses:
        '200':
          description: Authentication Enforcement Enabled
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/auth-token/:disable':
    post:
      tags:
        - Device Management
      summary: Disable Auth Token
      description: |
        This operation is used to disable authentication token
      operationId: disableAuthToken
      responses:
        '200':
          description: Authentication Enforcement disabled
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/ping/{host_type}/host/{host}/:transmit':
    parameters:
      - $ref: '#/components/parameters/host_type'
      - $ref: '#/components/parameters/general_host'
    post:
      tags:
        - Device Management
      summary: Send a ping to the given host.
      description: >
        This operation transmits the specified number of ping packets to the
        given host.
      operationId: executePingHost
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PingSettings'
      responses:
        '200':
          description: Ping sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponseCommandExecution'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/system/traceroute/{host_type}/host/{host}/:transmit':
    parameters:
      - $ref: '#/components/parameters/host_type'
      - $ref: '#/components/parameters/general_host'
    post:
      tags:
        - Device Management
      summary: Send a traceroute to the given host.
      description: |
        This operation transmits a traceroute for the given host.
      operationId: executeTracerouteHost
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracerouteSettings'
      responses:
        '200':
          description: Traceroute sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TracerouteResponseCommandExecution'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dhcp-relay/vr:
    get:
      tags:
        - DHCP Relay Management
      summary: Get the DHCP Relay settings for each VRF.
      description: |
        This operation retrives the DHCP Relay settings for each VRF.
        The response consists of the list of servers per VRF.
      operationId: getDhcpRelayVrfsSettings
      responses:
        '200':
          description: DHCP Relay settings for each VRF.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DhcpRelayVrfsSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/dhcp-relay/vr/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    put:
      tags:
        - DHCP Relay Management
      summary: Replace the DHCP Relay configuration on a VRF
      description: |
        This operation replaces the DHCP Relay settings on a VRF. The request
        body consists of a DhcpRelayVrfSettings object which includes the list
        of servers which will replace the existing list.
      operationId: replaceDhcpRelayVrfConfiguration
      requestBody:
        description: A DhcpRelayVrfSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRelayVrfSettings'
      responses:
        '204':
          description: DHCP Relay settings on VRF replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dhcp-relay/vlan:
    get:
      tags:
        - DHCP Relay Management
      summary: Get the DHCP Relay settings for each VLAN.
      description: |
        This operation retrieves the DHCP Relay settings for each VLAN.
        The response consists of the list of servers per VLAN. The list
        of servers is returned only for Switch Engine.
      operationId: getDhcpRelayVlansSettings
      responses:
        '200':
          description: DHCP Relay settings for each VLAN.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DhcpRelayVlansSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/dhcp-relay/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - DHCP Relay Management
      summary: Get the DHCP Relay settings for a specific VLAN.
      description: |
        This operation retrieves the DHCP Relay settings for a specific VLAN.
        The list of servers is returned only for Switch Engine.
      operationId: getDhcpRelayVlanSettings
      responses:
        '200':
          description: DHCP Relay settings for specfic VLAN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpRelayVlansSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - DHCP Relay Management
      summary: Replace the DHCP Relay configuration on a VLAN
      description: |
        This operation replaces the DHCP Relay settings on a VLAN. The request
        body consists of a DhcpRelayVlanSettings object which includes the list
        of servers which will replace the existing list.
      operationId: replaceDhcpRelayVlanConfiguration
      requestBody:
        description: A DhcpRelayVlanSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRelayVlanSettings'
      responses:
        '204':
          description: DHCP Relay settings on VLAN replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/dhcp-relay/vr:
    get:
      tags:
        - DHCP Relay Management
      summary: Get the DHCP Relay statistics for all VRFS.
      description: |
        This operation retrives the DHCP Relay statistics for all VRFs.
      operationId: getDhcpRelayVrfsStatistics
      responses:
        '200':
          description: A list of all VRFs with the DHCP Relay statistics.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DhcpRelayVrfsState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dhcp-snoop:
    get:
      tags:
        - DHCP Snoop Management
      summary: Get DHCP Snoop configuration
      description: |
        This operation retrieves the DHCP Snoop configuration information.
      operationId: getDhcpSnoopConfiguration
      responses:
        '200':
          description: The DHCP Snoop settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpSnoopSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dhcp-snoop/trusted-ports:
    put:
      tags:
        - DHCP Snoop Management
      summary: Replace DHCP Snoop trusted-ports configuration
      description: |
        This operation replaces the DHCP Snoop trusted-ports configuration.  
        The request body is a DhcpSnoopTrustedPortList object.
      operationId: replaceDhcpSnoopTrustedPortListConfiguration
      requestBody:
        description: The DhcpSnoopTrustedPortList object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpSnoopTrustedPortList'
      responses:
        '204':
          description: DHCP Snoop trusted-ports settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/dhcp-snoop/vlans/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    put:
      tags:
        - DHCP Snoop Management
      summary: Replace DHCP Snoop configuration on a VLAN
      description: |
        This operation replaces the DHCP Snoop configuration per VLAN interface.
        The request body is a DhcpSnoopVlan object.
      operationId: replaceDhcpSnoopVlanConfiguration
      requestBody:
        description: The DhcpSnoopVlan object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpSnoopVlan'
      responses:
        '204':
          description: DHCP Snoop settings per VLAN replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dhcp-snoop/dynamic-vlans:
    put:
      x-nos: switch-engine
      tags:
        - DHCP Snoop Management
      summary: Replace DHCP Snoop dynamic VLANs configuration
      description: |
        This operation replaces DHCP Snoop configuration for dynamic VLANs -
        Switch Engine (EXOS) only. The request body is a DhcpSnoopVlan object.
      operationId: replaceDhcpSnoopDynamicVlansConfiguration
      requestBody:
        description: The DhcpSnoopVlan object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpSnoopVlan'
      responses:
        '204':
          description: DHCP Snoop settings for dynamic VLANs replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/dhcp-snoop:
    get:
      tags:
        - DHCP Snoop Management
      summary: Get DHCP Snoop state
      description: |
        This operation retrieves the DHCP Snoop state information.
      operationId: getDhcpSnoopState
      responses:
        '200':
          description: The DHCP Snoop state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpSnoopState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dns:
    get:
      tags:
        - DNS Management
      summary: Get the DNS settings
      description: |
        Get the Domain Name System (DNS) settings for the device including the
        list of servers.
      operationId: getDnsConfiguration
      parameters: []
      responses:
        '200':
          description: The DNS settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - DNS Management
      summary: Replace the DNS configuration
      description: >
        This operation replaces the Domain Name System (DNS) settings 

        for the device.  The request body consists of a DnsSettings object which

        may optionally include a list of servers which will replace the existing
        list.
      operationId: replaceDnsConfiguration
      parameters: []
      requestBody:
        description: A DnsSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsSettings'
      responses:
        '204':
          description: DNS settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dns/server:
    post:
      tags:
        - DNS Management
      summary: Add a DNS server
      description: |
        This operation adds a server to the list of DNS servers on the device.
      operationId: addDnsServer
      parameters: []
      requestBody:
        description: >-
          A valid DNS server object consisting of the address type, address, and
          VR name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServer'
      responses:
        '204':
          description: DNS server added successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/dns/server/{address_type}/{address}/{vr_name}':
    delete:
      tags:
        - DNS Management
      summary: Remove a DNS server
      description: |
        This operation removes the DNS server specified in the path by its
        address type, address, and virtual-router name.
      operationId: deleteDnsServer
      parameters:
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/address_type'
        - $ref: '#/components/parameters/vr_name'
      responses:
        '204':
          description: DNS server deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/dns/domain:
    post:
      tags:
        - DNS Management
      summary: Add a DNS domain name
      description: >
        This operation adds a domain name to the list of DNS domains on the
        device.
      operationId: addDnsDomain
      parameters: []
      requestBody:
        description: A valid DNS domain name
        content:
          application/json:
            schema:
              type: string
      responses:
        '204':
          description: DNS domain added successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/dns/domain/{domain_name}':
    delete:
      tags:
        - DNS Management
      summary: Remove a DNS domain
      description: |
        This operation removes the DNS domain specified in the path by its
        name.
      operationId: deleteDnsDomain
      parameters:
        - $ref: '#/components/parameters/domain_name'
      responses:
        '204':
          description: DNS domain deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/elrp:
    get:
      x-nos: switch-engine
      tags:
        - ELRP Management
      summary: Get the ELRP system settings
      description: This operation retrieves the ELRP system settings.
      operationId: getElrpConfiguration
      parameters: []
      responses:
        '200':
          description: The ELRP settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElrpSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: switch-engine
      tags:
        - ELRP Management
      summary: Update the ELRP global settings
      description: This operation is used to update the ELRP global settings.
      operationId: updateElrpGlobalConfiguration
      parameters: []
      requestBody:
        description: The ELRP global settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElrpGlobalSettings'
      responses:
        '204':
          description: ELRP global setttings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/elrp/vlans/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    put:
      x-nos: switch-engine
      tags:
        - ELRP Management
      summary: Update the ELRP settings for a VLAN
      description: This operation is used to update the ELRP settings for a VLAN.
      operationId: updateElrpVlanConfiguration
      parameters: []
      requestBody:
        description: The ELRP settings for a specific VLAN
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElrpSpecificVlanSettings'
      responses:
        '204':
          description: ELRP global setttings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/elrp:
    get:
      x-nos: switch-engine
      tags:
        - ELRP Management
      summary: Get the ELRP state
      description: This operation retrieves the ELRP state.
      operationId: getElrpState
      parameters: []
      responses:
        '200':
          description: The ELRP state for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElrpState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/ports:
    get:
      tags:
        - Ethernet Interface Management
      summary: Get all ethernet interfaces settings.
      description: |
        This operation retrieves the settings of all ethernet interfaces.
      operationId: getEthernetInterfaceComponenetSettings
      responses:
        '200':
          description: Settings of all ethernet interfaces on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EthernetInterfaceComponentLevel'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - Ethernet Interface Management
      summary: Replace ethernet interfaces settings.
      description: |
        Set the admin state setting for a list of ethernet interfaces.
      operationId: replaceEthernetInterfacesSettings
      requestBody:
        description: The ethernet interface state to replace
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EthernetInterfaceAdminState'
      responses:
        '204':
          description: Ethernet Interface state successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Ethernet Interface Management
      summary: Get the ethernet interface settings.
      description: |
        This operation retrieves the settings on the ethernet interface. 
        The port number is required in the request body.
      operationId: getEthernetInterfaceSettings
      responses:
        '200':
          description: Settings of ethernet interface on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetInterface'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - Ethernet Interface Management
      summary: Replace the ethernet interface settings.
      description: |
        Replace the settings for the ethernet interface. Since the schema
        includes a list of auto negotiation settings, a partial update (patch)
        operation is not allowed. Instead a complete replacement is required
        to change any of the settings.
      operationId: replaceEthernetInterfaceSettings
      requestBody:
        description: The ethernet interface settings to replace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EthernetInterface'
      responses:
        '204':
          description: Ethernet Interface settings successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/ports:
    get:
      tags:
        - Ethernet Interface Management
      summary: Get all interfaces state settings.
      description: |
        This operation retrieves the settings of all  ethernet interfaces.
      operationId: getEthernetInterfacesStateSettings
      responses:
        '200':
          description: Settings of all interfaces on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EthernetInterfaceStateComponentLevel'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Ethernet Interface Management
      summary: Get the interface state settings.
      description: |
        This operation retrieves the settings on the ethernet interface
        for the specified port.
      operationId: getEthernetInterfaceStateSettings
      responses:
        '200':
          description: Settings of interface on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetInterfaceState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/fabric-attach:
    get:
      tags:
        - Fabric Attach Management
      summary: Get the fabric attach settings.
      description: |
        This operation retrieves the Fabric Attach settings.
      operationId: getFabricAttachSettings
      responses:
        '200':
          description: The fabric attach settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAttachAllSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - Fabric Attach Management
      summary: Replace the fabric attach settings for the device.
      description: >
        This operation replaces the DeviceFabricAttachSettings component
        attirbutes.
      operationId: replaceDeviceFabricAttachSettings
      parameters: []
      requestBody:
        description: A DeviceFabricAttachSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceFabricAttachSettings'
      responses:
        '204':
          description: The fabric attach settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/fabric-attach/assignment/vlanId/{vlanId}':
    patch:
      tags:
        - Fabric Attach Management
      summary: Configures fabric attach nsi <-> vlan assignment
      description: |
        This operation updates the fabric attach nsi <-> vlan assignment
      operationId: updateFabricAttachAssignment
      parameters:
        - description: vlan component of the nsi <-> VLAN assignment
          name: vlanId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 4095
      requestBody:
        description: >-
          NSI component of the nsi <-> vlan assignment. A value of 0 deletes NSI
          from vlan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FabricAttachNsi'
      responses:
        '204':
          description: The fabric attach nsi <-> vlan assignment updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/fabric-attach/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Fabric Attach Management
      summary: Get fabric attach settings for a port.
      description: >
        This operation retrieves the PortFabricAttachSettings object for a
        single port which is specified in the path by its port number.
      operationId: getPortFabricAttachSettingsByPort
      responses:
        '200':
          description: The port fabric attach settings for the specified port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortFabricAttachSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Fabric Attach Management
      summary: Update port fabric attach settings
      description: >
        This operation updates the settings for the PortFabricAttachSettings
        object single port

        which is specified in the path by its port number.
      operationId: updatePortFabricAttachSettings
      requestBody:
        description: The name of the port to update its PortFabricAttachSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortFabricAttachSettings'
      responses:
        '204':
          description: Port fabric attach settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/fabric-attach/ports:
    get:
      tags:
        - Fabric Attach Management
      summary: Get list of ports fabric attach settings
      description: >-
        This operation retrieves the list of ports fabric attach settings on the
        device.
      operationId: getPortFabricAttachSettingsList
      parameters: []
      responses:
        '200':
          description: List of all PortFabricAttachSettings defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortFabricAttachReadSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/fabric-attach:
    get:
      tags:
        - Fabric Attach Management
      summary: Get the fabric attach state information.
      description: |
        This operation retrieves the Fabric Attach state information.
      operationId: getFabricAttachState
      parameters: []
      responses:
        '200':
          description: The FabricAttachState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAttachState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/fabric-attach/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Fabric Attach Management
      summary: Get fabric attach state for a port.
      description: |
        This operation retrieves the Fabric Attach state information for a port.
      operationId: getPortFabricAttachState
      parameters: []
      responses:
        '200':
          description: The FabricAttachStateByPort object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAttachStateByPort'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/fabric-attach/assignment:
    get:
      tags:
        - Fabric Attach Management
      summary: Get the fabric attach assignment settings.
      description: >
        This operation retrieves a list of FabricAttachStateAssignmentSettings
        objects.
      operationId: getFabricAttachStateAssignmentSettings
      parameters: []
      responses:
        '200':
          description: >-
            List of all FabricAttachStateAssignmentSettings defined on the
            device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FabricAttachStateAssignmentSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/fabric-attach/assignment/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Fabric Attach Management
      summary: Get fabric attach assignments for a port.
      description: >
        List of all FabricAttachStateAssignmentSettingsByPort objects for a
        single port which is specified in the path by its port number.
      operationId: getListFabricAttachStateAssignmentSettingsByPort
      responses:
        '200':
          description: List of fabric attach assignments for the specified port.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/FabricAttachStateAssignmentSettingsByPort
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/fabric-attach/element:
    get:
      tags:
        - Fabric Attach Management
      summary: Get the fabric attach element settings.
      description: >
        This operation retrieves the PortFabricAttachStateElementSettings object
        for all ports.
      operationId: getFabricAttachStateElementSettings
      parameters: []
      responses:
        '200':
          description: >-
            List of all PortFabricAttachStateElementSettings defined on the
            device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortFabricAttachStateElementSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/fabric-attach/element/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - Fabric Attach Management
      summary: Get fabric attach element settings for a port.
      description: >
        This operation retrieves the PortFabricAttachStateElementSettings object
        for a single port which is specified in the path by its port number.
      operationId: getPortFabricAttachStateElementSettingsByPort
      responses:
        '200':
          description: The port fabric attach element settings for the specified port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricAttachStateElementSettingsByPort'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/forwarding:
    get:
      tags:
        - Forwarding Management
      summary: Get the Device Forwarding Settings
      description: This operation retrieves the Device Forwarding settings for the device.
      operationId: getDeviceForwardingConfiguration
      parameters: []
      responses:
        '200':
          description: The Forwarding settings for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceForwardingSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - Forwarding Management
      summary: Update the Device Forwarding Settings
      description: This operation is used to update the Device Forwarding Settings.
      operationId: updateDeviceForwardingConfiguration
      parameters: []
      requestBody:
        description: A DeviceForwardingSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceForwardingSettings'
      responses:
        '204':
          description: Device Forwarding Settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/forwarding/mac-fdb:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
      - $ref: '#/components/parameters/lag_id'
      - $ref: '#/components/parameters/port1'
      - $ref: '#/components/parameters/vlan_id1'
    get:
      tags:
        - Forwarding Management
      summary: Get VLAN based Layer 2 Forwarding Database
      description: |
        This operation retrieves the VLAN based Layer 2 Forwarding Database
        on the device.
        Query parameter start is optional and states the starting index
        for retrieval.
        Query parameter count is optional and states the number of items
        to be retrieved.
        Query parameter lag_id is optional, allows filtering the items 
        based on the LAG ID and applies to Fabric Engine only.
        Query parameter port is optional and allows filtering the items
        based on the port name.
        Query parameter vlan_id is optional and allows filtering the items
        based on the VLAN ID.
      operationId: getVlanMacFdbState
      responses:
        '200':
          description: The VlanMacFdbState object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VlanMacFdbState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/forwarding/mac-fdb/isids:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - Forwarding Management
      summary: Get ISID based Layer 2 Forwarding Database
      description: |
        This operation retrieves the ISID based Layer 2 Forwarding Database
        on the device. This endpoint is applicable to Fabric Engine only.
        Query parameter start is optional and states the starting index
        for retrieval.
        Query parameter count is optional and states the number of items
        to be retrieved.
      operationId: getIsidMacFdbState
      responses:
        '200':
          description: The IsidMacFdbState object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsidMacFdbState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/forwarding/ip-arp:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
      - $ref: '#/components/parameters/vr_name1'
    get:
      tags:
        - Forwarding Management
      summary: Get ARP entries
      description: |
        This operation retrieves ARP entries.
        Query parameter start is optional and states the starting index
        for retrieval.
        Query parameter count is optional and states the number of items
        to be retrieved.
        Query parameter vr_name is optional and allows filtering the items
        based on the VRF name.
      operationId: getArpList
      responses:
        '200':
          description: The list of ARPs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpArpStateAllVrfs'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/forwarding/ipv6-nd:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
      - $ref: '#/components/parameters/vr_name1'
    get:
      tags:
        - Forwarding Management
      summary: Get IPv6 Neighbors
      description: |
        This operation retrieves IPv6 Neighbor entries.
        Query parameter start is optional and states the starting index
        for retrieval.
        Query parameter count is optional and states the number of items
        to be retrieved.
        Query parameter vr_name is optional and allows filtering the items
        based on the VRF name.
      operationId: getIpv6NeighborList
      responses:
        '200':
          description: The list of IPv6 Neighbors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ipv6NDStateAllVrfs'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/igmp:
    get:
      tags:
        - IGMP Management
      summary: Get IGMP settings for the device
      description: |
        This operation retrieves the complete IGMP settings for the device.
        It contains the VR level and VLAN level settings. The vport list
        contains only the static vports.
      operationId: getIgmpSettings
      responses:
        '200':
          description: The IGMP settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgmpAllSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/igmp/vr/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    patch:
      tags:
        - IGMP Management
      summary: Update IGMP settings for a VR
      description: |
        This operation updates IGMP settings for the VR specified in the path.
        The request body is a IgmpVrConfigSettings object which contains
        configuration information for the VR. The operation is not supported 
        on Fabric Engine.
      operationId: updateIgmpVrSettings
      requestBody:
        description: The IgmpVrConfigSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgmpVrConfigSettings'
      responses:
        '204':
          description: IGMP settings updated successfully for the VR
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/igmp/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - IGMP Management
      summary: Get IGMP settings for a VLAN
      description: |
        This operation retrieves IGMP settings for the VLAN specified in the
        path. The response includes the the list of static vports.
      operationId: getIgmpVlanSettings
      responses:
        '200':
          description: The IGMP settings for the VLAN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgmpVlanConfigSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - IGMP Management
      summary: Update IGMP settings for a VLAN
      description: |
        This operation updates IGMP settings for the VLAN specified in the
        path. The request body is a VlanIgmpBaseSettings object which
        contains base configuration information for the VLAN.
      operationId: updateIgmpVlanSettings
      requestBody:
        description: The IgmpVlanBaseSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgmpVlanBaseSettings'
      responses:
        '204':
          description: IGMP settings updated successfully for the VLAN
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/igmp/vlan/{vlan_id}/vports':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    put:
      tags:
        - IGMP Management
      summary: Replace IGMP vports for a VLAN
      description: >
        This operation replaces the IGMP vports for the VLAN specified in

        the path. The request body consists of IgmpVportSettingsList array.

        On Fabric Engine, only static multicast group vport members are
        available 

        using this operation. Vports which are excluded, or blocked, from the 

        multicast group are not configurable through this operation.
      operationId: replaceIgmpVportsSettings
      requestBody:
        description: The IgmpVportSettingsList array
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgmpVportSettingsList'
      responses:
        '204':
          description: IGMP vports for the specified VLAN replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/instant-mlag/peers:
    get:
      x-nos: WIP
      tags:
        - Instant MLAG Management
      summary: Get the list of instant MLAG peers
      description: >
        This operation retrieves the list of instant MLAG peers configured on
        the device.

        Each list entry consists of identifying basic information for each
        instant MLAG peer.
      operationId: getInstantMlagPeers
      parameters: []
      responses:
        '200':
          description: List of all instant MLAG peers configured on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantMlagSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: WIP
      tags:
        - Instant MLAG Management
      summary: Create an instant MLAG peer
      description: This operation creates an instant MLAG peer on the device.
      operationId: createInstantMlagPeer
      parameters: []
      requestBody:
        description: The InstantMlagConfig object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantMlagConfig'
      responses:
        '204':
          description: Instant MLAG peer successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-mlag/peers/seed-type/{seed_type}/seed-value/{seed_value}':
    parameters:
      - $ref: '#/components/parameters/seed_type'
      - $ref: '#/components/parameters/seed_value'
    delete:
      x-nos: WIP
      tags:
        - Instant MLAG Management
      summary: Delete an instant MLAG peer
      description: >-
        This operation deletes an instant MLAG peer with the specified seed on
        the device.
      operationId: deleteInstantMlagPeer
      responses:
        '204':
          description: Instant MLAG peer successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/instant-port:
    get:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Get the instant-port settings
      description: |
        This operation retrieves the instant-port settings
        for the device.  This consists of the learning VLAN, the
        contents of installed instant-port profiles, and the assigned ports
        for each profile.
      operationId: getInstantPortDetailSettings
      responses:
        '200':
          description: The instant-port settings for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortProfileGlobal'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update instant-port global configuration.
      description: |
        This operation updates the global instant-port configuration. Currently
        this consists of the learning VLAN.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: updateInstantPortGlobalConfiguration
      requestBody:
        description: |
          "The global settings associated with the instant-port feature
           which currently consists of the learning VLAN."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortProfileGlobalSettings'
      responses:
        '204':
          description: Port profile global configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/instant-port/profiles:
    post:
      summary: Create the port profile
      description: |
        This operation creates instant-port profile with
        the profile name defined in the request body. If a profile
        with the name specified in the body exists the implementation
        must return an error.  A maximum of 20 devices are allowed per
        profile and a maximum of 8 actions are allowed per device.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: createPortProfile
      requestBody:
        description: The PortProfileCreate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortProfileCreate'
      responses:
        '204':
          description: Instant port profile successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}':
    parameters:
      - $ref: '#/components/parameters/profile_name'
    get:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Get the instant port profile
      description: |
        This operation retrieves the contents of the instant-port
        profile specified in the path.
      operationId: getInstantPortProfile
      responses:
        '200':
          description: The contents of the instant-port profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortProfileGet'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Delete the instant-port profile
      description: >-
        This operation deletes the ports attached to profile and the
        instant-port profile from the device.
      operationId: removeInstantPortProfile
      responses:
        '204':
          description: Instant port profile successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/devices':
    parameters:
      - $ref: '#/components/parameters/profile_name'
    post:
      summary: Create the device on an instant port profile
      description: |
        This operation creates a new device within the specified
        instant-port profile.  The request contains the match and
        action information as well as the name and index of the new
        device.  The index specifies the location within the profile
        to add the new device.  If no index is specified in the request,
        the new device is appended to the list of devices present in the
        profile. The user can specify an index between 0 and one less then
        the maximum number of devices per profile (19).  However, the NOS
        will set the index so all the indices are consecutive. An index
        number greater than or equal to the current number of devices in
        the profile will be treated as an append.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: createNewDeviceInProfile
      requestBody:
        description: The DeviceTypeWithIndex object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeWithIndex'
      responses:
        '204':
          description: Instant port profile device successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/devices/{device_name}':
    parameters:
      - $ref: '#/components/parameters/profile_name'
      - $ref: '#/components/parameters/device_name'
    put:
      summary: Replace a device in an instant port profile
      description: |
        This operation replaces the specified device in the
        specified instant port profile.  The name and index
        of the device are unchanged by this operation.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: replaceProfileDevice
      requestBody:
        description: The new instant port device object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypeNoName'
      responses:
        '204':
          description: Instant port profile device successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Delete a device from an instant port profile
      description: >-
        This operation deletes the specified device from the specified instant
        port profile.
      operationId: removeProfileDevice
      responses:
        '204':
          description: Device successfully removed from instant port profile.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/devices/{device_name}/actions':
    parameters:
      - $ref: '#/components/parameters/profile_name'
      - $ref: '#/components/parameters/device_name'
    post:
      summary: Create a new action in a device
      description: |
        This operation creates a new action within the specified
        device on an instant-port profile.  The request contains the action
        type and information specific to that type.  Actions are internally
        assigned an index which can be retrieved by the GET operation. The index
        is required to identify the action for the DELETE and PUT operations.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: createNewActionInDevice
      requestBody:
        description: The DeviceActionWithIndex object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAction'
      responses:
        '204':
          description: Instant port profile device action successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/devices/{device_name}/actions/{action_index}':
    parameters:
      - $ref: '#/components/parameters/profile_name'
      - $ref: '#/components/parameters/device_name'
      - $ref: '#/components/parameters/action_index'
    put:
      x-nos: switch-engine
      summary: Replace an action within a device
      description: |
        This operation replaces the specified action in the
        specified device of an instant port profile.  The index
        of the action is unchanged by this operation.
      tags:
        - Instant Port Management
      operationId: replaceDeviceAction
      requestBody:
        description: The new instant port device action object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAction'
      responses:
        '204':
          description: Instant port profile device action successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Delete an action from a device
      description: >-
        This operation deletes the specified action from the device of the
        specified instant port profile.
      operationId: removeDeviceAction
      responses:
        '204':
          description: Device action successfully removed from instant port profile.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/secure-port':
    parameters:
      - $ref: '#/components/parameters/profile_name'
    put:
      summary: Replace profile authentication settings.
      description: |
        This operation replaces the list of authentication protocols
        associated with the instant-port profile specified in the path.
        An empty list of protocols indicates this profile is no
        longer used for authentication.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: replaceProfileAuthenticationProtocols
      requestBody:
        description: The new list of authentication protocols to be assigned to the profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantPortAuthProtocols'
      responses:
        '204':
          description: Instant port profile successfully created or updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/instant-port/profiles/{profile_name}/ports':
    parameters:
      - $ref: '#/components/parameters/profile_name'
    put:
      summary: Replace profile port list
      description: |
        This operation replaces the list of ports assigned to the
        instant-port profile provided in the path.
      x-nos: switch-engine
      tags:
        - Instant Port Management
      operationId: replaceProfilePortList
      requestBody:
        description: The new list of ports to be assigned to the profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortList'
      responses:
        '204':
          description: Instant port profile successfully created or updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/instant-port/profiles:
    get:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Get Instant-Port state for a switch by profile
      description: |
        This operation retrieves the instant-port state information for
        the entire switch.  This includes the profile state for all 
        profiles on the switch.
      operationId: getInstantPortStateByProfile
      parameters: []
      responses:
        '200':
          description: The instant-port state information by profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantPortSwitchStateByProfile'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/instant-port/ports:
    get:
      x-nos: switch-engine
      tags:
        - Instant Port Management
      summary: Get Instant-Port state for a switch by port
      description: |
        This operation retrieves the instant-port state information for
        the entire switch.  This includes the port state for all ports
        on the switch which have been assigned to an instant-port profile.
      operationId: getInstantPortStateByPort
      parameters: []
      responses:
        '200':
          description: The instant-port state information by port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantPortSwitchStateByPort'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/lag:
    get:
      tags:
        - LAG Management
      summary: Get all LAGs settings.
      description: |
        This operation retrieves the list of LAGs configured on the device.
        Each list entry consists of identifying basic information for each LAG.
      operationId: getLagAllSettings
      parameters: []
      responses:
        '200':
          description: List of all LAGs configured on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LagConfigs'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - LAG Management
      summary: Create a LAG
      description: >-
        This operation creates a LAG on the device with the specified name and
        id.
      operationId: createLag
      parameters: []
      requestBody:
        description: The LagCreateConfig object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagCreateConfigs'
      responses:
        '204':
          description: LAG successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/lag/{lag_id}':
    parameters:
      - $ref: '#/components/parameters/lag_id1'
    get:
      tags:
        - LAG Management
      summary: Get the LAG config by id.
      description: >
        This operation retrieves the information for the LAG config settings 

        specified by lagId. The response consists of the LAG identifying 

        information (lagId, name, memberPorts, lagLoadBalanceAlgo, mode,
        lacpKey, 

        loadBalanceAlgorithm).
      operationId: getLagConfigById
      responses:
        '200':
          description: The object LagConfigs for the specified LAG id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagConfigs'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - LAG Management
      summary: Update LAG config by id.
      description: |
        Update the configuration for the LAG by it's id
        specified in the path.
      operationId: updateLagConfigById
      requestBody:
        description: The LagUpdateConfigs of the LAG to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagUpdateConfigs'
      responses:
        '204':
          description: LAG config settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - LAG Management
      summary: Delete LAG config by id
      description: This operation deletes the LAG config specified by its id.
      operationId: deleteLagConfigById
      responses:
        '204':
          description: LAG deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/lag/{lag_id}/memberPorts':
    parameters:
      - $ref: '#/components/parameters/lag_id1'
    post:
      tags:
        - LAG Management
      summary: Add port members to a LAG id.
      description: Add LAG port members.
      operationId: addPortMembersToLagId
      requestBody:
        description: The port members to add to a LAG
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagMembers'
      responses:
        '204':
          description: LAG port members added successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/lag/{lag_id}/memberPorts/{port}':
    parameters:
      - $ref: '#/components/parameters/lag_id1'
      - $ref: '#/components/parameters/port'
    delete:
      tags:
        - LAG Management
      summary: Delete LAG port member.
      description: This operation deletes the LAG port member specified by its id.
      operationId: deleteLagPortMemberById
      responses:
        '204':
          description: LAG port member deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/lag:
    get:
      tags:
        - LAG Management
      summary: Get LAG state
      description: |
        This operation retrieves LAG state information for
        the entire switch.
      operationId: getLagState
      parameters: []
      responses:
        '200':
          description: The LAG operational state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagStateAll'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/lag/{lag_id}':
    parameters:
      - $ref: '#/components/parameters/lag_id1'
    get:
      tags:
        - LAG Management
      summary: Get LAG state for specified LAG id
      description: |
        This operation retrieves LAG id state information.
      operationId: getLagStatePerId
      responses:
        '200':
          description: The LAG operational state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagStatePerId'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/lldp:
    get:
      tags:
        - LLDP Management
      summary: Get the LLDP system settings
      description: This operation retrieves the LLDP system settings.
      operationId: getLldpConfiguration
      parameters: []
      responses:
        '200':
          description: The LLDP settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpAllSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - LLDP Management
      summary: Update the LLDP settings
      description: This operation is used to change the values of the LLDP system settings.
      operationId: updateLldpConfiguration
      parameters: []
      requestBody:
        description: An LldpSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LldpSettings'
      responses:
        '204':
          description: LLDP settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/lldp/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - LLDP Management
      summary: Get the LLDP settings for a port
      description: |
        This operation retrieves the LLDP settings for a port.
      operationId: getPortLldpSettings
      responses:
        '200':
          description: The PortLldpConfigSettings object for the specified port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortLldpSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - LLDP Management
      summary: Replace port LLDP settings
      description: |
        This operation replaces port LLDP settings for the port 
        specified in the path.
      operationId: replacePortLldpSettings
      requestBody:
        description: The PortLldpConfigSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortLldpConfigSettings'
      responses:
        '204':
          description: The port LLDP setttings successfully replaced
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/lldp/ports/{port}/med-policy':
    parameters:
      - $ref: '#/components/parameters/port'
    put:
      tags:
        - LLDP Management
      summary: Replace MED network policy advertisement settings
      description: |
        This operation replaces MED (Media Endpoint Discovery) network policy 
        advertisement settings for the port specified in the path.
      operationId: replacePortLldpMedPolicySettings
      requestBody:
        description: The PortLldpMedPolicySettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortLldpMedPolicySettings'
      responses:
        '204':
          description: The port LLDP MED network policy setttings successfully replaced
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/lldp:
    get:
      tags:
        - LLDP Management
      summary: Get the LLDP state information
      description: |
        This operation retrieves the LLDP state information.
      operationId: getLldpState
      parameters: []
      responses:
        '200':
          description: The LldpState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/lldp/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - LLDP Management
      summary: Get the LLDP state information per port
      description: >
        This operation retrieves the LLDP state information for the specified
        port.
      operationId: getLldpStatePerPort
      responses:
        '200':
          description: The LldpState object per port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpStatePerPort'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/mac-locking:
    get:
      x-nos: switch-engine
      tags:
        - MAC Locking Management
      summary: Get the MAC-locking settings
      description: |
        This operation retrieves the MAC-locking component level settings
        for the device.
      operationId: getMacLockingCompleteSettings
      responses:
        '200':
          description: The MAC-locking settings for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MacLockingCompleteSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update MAC-locking global configuration.
      description: |
        This operation updates the global MAC-locking configuration settings.
      x-nos: switch-engine
      tags:
        - MAC Locking Management
      operationId: updateMacLockingGlobalConfiguration
      requestBody:
        description: |
          "The global settings associated with the MAC-locking feature."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MacLockingGlobalSettings'
      responses:
        '204':
          description: MAC-locking global configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/mac-locking/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    patch:
      x-nos: switch-engine
      tags:
        - MAC Locking Management
      summary: Update the MAC-locking settings on this port.
      description: |
        Update the MAC-locking settings on this port.
      operationId: updateMacLockingPortSettings
      requestBody:
        description: The MAC-locking settings to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MacLockingPortSettings'
      responses:
        '204':
          description: MAC-locking port settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/mac-locking:
    get:
      x-nos: switch-engine
      tags:
        - MAC Locking Management
      summary: Get the MAC-locking state
      description: |
        This operation retrieves the MAC-locking state for all
        ports on the the device.
      operationId: getMacLockingState
      responses:
        '200':
          description: The MAC-locking state for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MacLockingState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/mgmt-interface:
    get:
      tags:
        - Management Interface
      summary: Get the management interface settings
      description: >
        This operation gets the management interface settings including the

        list of IP addresses and network masks configured on the interface. 
        This

        information applies to the out of band port management interface.
      operationId: getMgmtInterfaceConfiguration
      parameters: []
      responses:
        '200':
          description: The management interface settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MgmtInterfaceSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - Management Interface
      summary: Replace the management interface settings
      description: |
        This operation replaces the management interface settings including the
        list of IPv4 or IPv6 addresses and associated network mask lengths.
      operationId: replaceMgmtInterfaceConfiguration
      parameters: []
      requestBody:
        description: A mgmtInterfaceSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MgmtInterfaceSettings'
      responses:
        '204':
          description: Management interface settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/mlag/peers:
    get:
      tags:
        - MLAG Management
      summary: Get the list of MLAG peers configured
      description: >
        This operation retrieves the list of MLAG peers configured on the
        device.

        Each list entry consists of attributes identifying basic information for
        each MLAG peer.
      operationId: getMlagPeers
      parameters: []
      responses:
        '200':
          description: List of all MLAG peers configured on the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagPeerSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - MLAG Management
      summary: Create a MLAG peer
      description: >-
        This operation creates a MLAG peer with the specified identifier on the
        device - Switch Engine (EXOS) only
      operationId: createMlagPeer
      parameters: []
      requestBody:
        description: The MlagPeerConfig object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MlagPeerConfigCreateObject'
      responses:
        '204':
          description: MLAG peer successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/mlag/peers/{peer_id}':
    parameters:
      - $ref: '#/components/parameters/peer_id'
    patch:
      tags:
        - MLAG Management
      summary: Update a MLAG peer
      description: >-
        This operation updates a MLAG peer with the specified identifier on the
        device.
      operationId: updateMlagPeer
      requestBody:
        description: The MlagPeerUpdate object to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MlagPeerUpdate'
      responses:
        '204':
          description: MLAG peer successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - MLAG Management
      summary: Delete a MLAG peer
      description: >-
        This operation deletes a MLAG peer with the specified identifier on the
        device.
      operationId: deleteMlagPeer
      responses:
        '204':
          description: MLAG peer successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/mlag/peers/{peer_id}/ports':
    parameters:
      - $ref: '#/components/parameters/peer_id'
    get:
      tags:
        - MLAG Management
      summary: Get the list of MLAG ports configured
      description: >
        This operation retrieves the list of MLAG ports configured for the
        specified MLAG peer.

        Each list entry consists of attributes identifying basic information for
        each MLAG port.
      operationId: getMlagPorts
      responses:
        '200':
          description: List of all MLAG ports configured for MLAG peer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagPortSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - MLAG Management
      summary: Configure or replace MLAG port list
      description: >
        This operation configures or replaces MLAG port list for the specified
        MLAG peer.

        If the requestBody is not provided, all the ports configured for the
        MLAG peer are removed.
      operationId: replaceMlagPorts
      requestBody:
        description: The MlagPortSettings object to configure or replace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MlagPortSettings'
      responses:
        '204':
          description: MLAG port list successfully configured or replaced
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/mlag/rsmlt:
    get:
      x-nos: fabric-engine
      tags:
        - MLAG Management
      summary: Get RSMLT state information.
      description: >
        This operation retrieves the information for all RSMLT instances on all
        VLANs.
      operationId: getMlagRsmltConfig
      responses:
        '200':
          description: The MlagRsmltSettings object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagRsmltSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/mlag/rsmlt/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    patch:
      x-nos: fabric-engine
      tags:
        - MLAG Management
      summary: Update RSMLT instance
      description: |
        This operation updates a RSMLT instance on the VLAN.
      operationId: updateMlagRsmltInstanceOnVlan
      requestBody:
        description: A MlagRsmltInstanceSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MlagRsmltInstanceSettings'
      responses:
        '204':
          description: RSMLT instance updated on VLAN successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - MLAG Management
      summary: Get RSMLT configuration for the specified VLAN
      description: >
        This operation retrieves the RSMLT configuration information for the
        specified VLAN.
      operationId: getMlagRsmltConfigurationPerVlan
      responses:
        '200':
          description: The RSMLT settings for specified VLAN
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MlagRsmltInstanceSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/mlag/peers:
    get:
      tags:
        - MLAG Management
      summary: Get the list of MLAG peers and their state
      description: >
        This operation retrieves the list of MLAG peers with their state
        information.

        Each list entry consists of attributes identifying state information for
        each MLAG peer.

        peerIpAddress, localIpAddress and localVlanId are configurable on Fabric
        Engine (VOSS), but are shown here for consistency reasons.
      operationId: getMlagPeersState
      parameters: []
      responses:
        '200':
          description: List of all MLAG peers and their state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagPeerStateList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/mlag/peers/{peer_id}/ports':
    parameters:
      - $ref: '#/components/parameters/peer_id'
    get:
      tags:
        - MLAG Management
      summary: Get the list of MLAG ports and their state
      description: >
        This operation retrieves the list of MLAG ports with their state
        information.

        Each list entry consists of attributes identifying state information for
        each MLAG port.
      operationId: getMlagPortsState
      responses:
        '200':
          description: List of all MLAG ports and their state for the MLAG peer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagPortStateList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/mlag/rsmlt:
    get:
      tags:
        - MLAG Management
      summary: Get RSMLT state information.
      description: |
        This operation retrieves the state information for all RSMLT instances 
        on all VLANs.
      operationId: getMlagRsmltState
      responses:
        '200':
          description: The MlagRsmltState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagRsmltState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/node-alias:
    get:
      tags:
        - Node Alias Management
      summary: Get node alias settings
      description: |
        This operation gets node alias configuration.
      operationId: getNodeAliasConfiguration
      parameters: []
      responses:
        '200':
          description: The node alias settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeAliasSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/node-alias/protocols:
    patch:
      tags:
        - Node Alias Management
      summary: Update node alias settings
      description: |
        This operation updates node alias settings (protocols, enabled).
      operationId: updateNodeAliasSettings
      requestBody:
        description: The node alias settings
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NodeAliasUpdateSettings'
      responses:
        '204':
          description: Node alias setttings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/node-alias/ports:
    put:
      tags:
        - Node Alias Management
      summary: Replace node alias port settings
      description: |
        This operation replaces node alias ports configuration. If a port 
        it is not present in the request body, the default values will be set 
        for that port.
      operationId: replaceNodeAliasPortSettings
      requestBody:
        description: The node alias port settings to replace
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NodeAliasSettingsPerPort'
      responses:
        '204':
          description: Node alias port settings successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/node-alias:
    get:
      tags:
        - Node Alias Management
      summary: Get node alias state settings.
      description: |
        This operation retrieves node alias state global and 
        per port settings.
      operationId: getNodeAliasStateSettings
      responses:
        '200':
          description: State settings of node alias on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeAliasStateSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/node-alias/database:
    parameters:
      - $ref: '#/components/parameters/port2'
      - $ref: '#/components/parameters/mac_address'
      - $ref: '#/components/parameters/node_alias_protocol'
    get:
      tags:
        - Node Alias Management
      summary: Get node alias database.
      description: >
        This operation retrieves the database with all aliases discovered by 

        inspecting packets from end system. Each entry contains information 

        on port, MAC address, time last learned, VLAN ID, protocol and source
        IP 

        address. Output can be filtered by query parameters. Query parameter 

        port is optional and filters the database entries based on port number.

        Query paramater mac_address is optional and filters the database
        entries 

        based on the MAC address. Query paramater protocol is optional and 

        filters the entries in the database based on the protocol type.

        The query parameters can be mixed to obtain filters MAC + port, MAC +
        protocol, 

        protocol + port:
      operationId: getNodeAliasPortDatabase
      responses:
        '200':
          description: Node alias database on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NodeAliasDatabase'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/node-alias/database/:clear':
    post:
      tags:
        - Node Alias Management
      summary: Clear node alias database
      description: |
        This operation clears the node alias database. The request body 
        can also be set to a port list and the database entries will be 
        cleared based on ports number.
      operationId: clearNodeAliasDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeAliasDatabaseClear'
      responses:
        '204':
          description: Node alias database successfully cleared
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/ntp:
    get:
      tags:
        - NTP Management
      summary: Get the NTP settings
      description: >
        Get the Network Time Protocol (NTP) settings for the device including
        the 

        list of servers.
      operationId: getNtpConfiguration
      parameters: []
      responses:
        '200':
          description: The Network Time Protocol (NTP) settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NtpSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ntp/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    put:
      tags:
        - NTP Management
      summary: Replace NTP configuration for the VR specified
      description: >
        This operation replaces the Network Time Protocol (NTP) settings

        for the virtual router.  The request body consists of an NtpSettingsByVr
        object which

        may optionally include a list of servers which will replace the existing
        list.
      operationId: replaceNtpConfigurationByVr
      parameters: []
      requestBody:
        description: An NtpSettingsByVr object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NtpSettingsByVr'
      responses:
        '204':
          description: NTP settings replaced successfully for the specified VR
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/ospf:
    get:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Get OSPF configuration across all VR's and VLAN's.
      description: |
        This operation retrieves the global configuration information for 
        each OSPF instance across all VR's and interface configuration
        information for each OSPF enabled VLAN on the device.
      operationId: getOspfAllVrs
      parameters: []
      responses:
        '200':
          description: The OSPF settings for the entire device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfComponentLevelSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Add OSPF to a VR
      description: |
        This operation adds the OSPF protocol to a VR and optionally configures
        global settings associated with the new OSPF process.  If the process
        already exists, this operation results in an error.
      operationId: addOspfToVr
      parameters: []
      requestBody:
        description: An OspfUpdateSettingsWithVr object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfUpdateSettingsWithVr'
      responses:
        '204':
          description: OSPF protocol added to VR successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ospf/vr/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    get:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Get per VR OSPF configuration
      description: |
        This operation retrieves the configuration information for 
        the OSPF instance running on the VR specified in the path.
        This information includes the OSPF area and redistribution 
        lists for the instance.
      operationId: getOspfByVr
      parameters: []
      responses:
        '200':
          description: The OSPF global settings for the VR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfGetSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update per VR OSPF configuration
      description: |
        This operation updates the OSPF configuration for the VR 
        specified in the path. The request body consists of an 
        OspfUpdateSettings object. The OSPF area and redistribution 
        lists can not be modified by this operation. Separate endpoints 
        and operations are provided for that purpose.
      x-nos: switch-engine
      tags:
        - OSPF Management
      operationId: updateOspfByVr
      requestBody:
        description: The OspfUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfUpdateSettings'
      responses:
        '204':
          description: OSPF configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Delete OSPF from a VR
      description: |
        This operation deletes the OSPF instance from the specified VR. For
        Switch Engine, the OSPF process always exists on the default VR and
        can not be deleted. This operation does not set the administrative
        state of the protocol to down. This is done through a separate
        operation.
      operationId: deleteOspfFromVr
      responses:
        '204':
          description: OSPF protocol successfully deleted from VR
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ospf/vr/{vr_name}/area/{area_id}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/area_id'
    put:
      summary: Create or update OSPF area
      description: |
        This operation creates or updates the the OSPF area 
        specified in the path by its area ID and the associated VR.
        The request body consists of an OspfAreaUpdateSettings object.
      x-nos: switch-engine
      tags:
        - OSPF Management
      operationId: updateOspfAreaById
      requestBody:
        description: The OspfAreaUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfAreaUpdateSettings'
      responses:
        '204':
          description: OSPF area configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Delete the OSPF area
      description: >
        This operation deletes the area from the OSPF instance running on the
        specified VR.
      operationId: deleteOspfAreaById
      responses:
        '204':
          description: OSPF area successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ospf/vr/{vr_name}/redistribute/{protocol}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/protocol'
    put:
      summary: Create or update OSPF redistribution
      description: |
        This operation creates or updates the redistribution entry
        specified by the source protocol and VR name. The create
        and update operations are combined into this single operation.
        Currently the only updateable setting is the enable property
        which only applies to Fabric Engine. Modification of any other
        parameters implies a complete replacement of the entry.
      x-nos: switch-engine
      tags:
        - OSPF Management
      operationId: createOrUpdateOspfRedistribution
      requestBody:
        description: The OspfRedistributeUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfRedistributeSettings'
      responses:
        '204':
          description: OSPF redistribution entry updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Delete the OSPF redistribution entry
      description: |
        This operation deletes the OSPF redistribution entry specified by its
        source protocol from the OSPF instance running on the specified VR.
      operationId: deleteOspfRedistribution
      responses:
        '204':
          description: OSPF redistribution entry deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/ospf/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Get per VLAN OSPF configuration
      description: |
        This operation retrieves the OSPF configuration information associated
        with the VLAN interface specified in the path.
      operationId: getOspfByVlan
      parameters: []
      responses:
        '200':
          description: The OSPF settings associated with the VLAN interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfInterfaceSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update per VLAN OSPF configuration
      description: |
        This operation updates the OSPF configuration associated with the VLAN
        interface specified in the path.
      x-nos: switch-engine
      tags:
        - OSPF Management
      operationId: updateOspfByVlan
      requestBody:
        description: The OspfInterfaceSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfInterfaceSettings'
      responses:
        '204':
          description: OSPF VLAN interface configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/ospf:
    get:
      x-nos: switch-engine
      tags:
        - OSPF Management
      summary: Get OSPF state for all interfaces on all VRF's
      description: |
        This operation retrieves the state information for 
        each OSPF interface on each VRF.
      operationId: getOspfInterfacesStateAllVrs
      parameters: []
      responses:
        '200':
          description: The OSPF state information for each interface on each VR.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfStateVrList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/poe-power:
    get:
      tags:
        - POE Power Management
      summary: Get power settings for the device.
      description: |
        This operation retrieves the DevicePowerSettings object for a device.
      operationId: getDevicePowerSettings
      responses:
        '200':
          description: The device power settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePowerSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - POE Power Management
      summary: Replace the device power settings.
      description: |
        This operation replaces the DevicePowerSettings component attirbutes.
      operationId: replaceDevicePowerSettings
      parameters: []
      requestBody:
        description: An DevicePowerSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePowerSettings'
      responses:
        '204':
          description: The device power settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/poe-power/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - POE Power Management
      summary: Get power settings for a port.
      description: >
        This operation retrieves the PortPowerSettings object for a single port
        which is specified in the path by its port number.
      operationId: getPortPowerSettingsByPort
      responses:
        '200':
          description: The port power settings for the specified port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortPowerSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - POE Power Management
      summary: Update port power settings
      description: >
        This operation updates the settings for the PortPowerSettings object
        single port

        which is specified in the path by its port number.
      operationId: updatePortPowerSettings
      requestBody:
        description: The name of the port to update its PortPowerSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortPowerSettings'
      responses:
        '204':
          description: Port Power settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/poe-power/ports:
    get:
      tags:
        - POE Power Management
      summary: Get list of ports power settings
      description: This operation retrieves the list of ports power settings on the device.
      operationId: getPortPowerSettingsList
      parameters: []
      responses:
        '200':
          description: List of all PortPowerSettings defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortPowerReadSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/poe-power/ports:
    get:
      tags:
        - POE Power Management
      summary: Get list of ports power state
      description: This operation retrieves the list of ports power state on the device.
      operationId: getPortPowerStateList
      parameters: []
      responses:
        '200':
          description: List of all PortPowerState defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortPowerStateListComponent'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/poe-power/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - POE Power Management
      summary: Get port power state
      description: This operation retrieves the port power state.
      operationId: getPortPowerState
      parameters: []
      responses:
        '200':
          description: PortPowerState defined on the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortPowerState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy component level settings
      description: |
        This operation retrieves the settings for the
        entire policy component. This consists of global,
        capabilities, roles, HTTP redirect settings, and
        access-lists.
      operationId: getPolicyComponentSettings
      responses:
        '200':
          description: The policy component level settings for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyComponentSettings'
  /v0/configuration/policy/global:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy global settings
      description: |
        This operation retrieves the global policy settings
        for the device. These settings include the action to
        take if asked to apply an invalid policy and the RFC-3580
        conflict response.
      operationId: getPolicyGlobalSettings
      responses:
        '200':
          description: The policy global settings for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGlobalSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update the policy global configuration.
      description: |
        This operation updates the global policy configuration. Currently
        this consists of the invalid policy action and the RFC-3580 conflict
        response.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: updatePolicyGlobalConfiguration
      requestBody:
        description: |
          "The global settings associated with the policy feature."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyGlobalSettings'
      responses:
        '204':
          description: Policy global configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/roles:
    post:
      summary: Create the policy role
      description: |
        This operation creates role with it's index defined
        in the request body. The role index is required on creation
        and must be unique on the device. The role is also referred to as
        a policy profile.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: createPolicyRole
      requestBody:
        description: The PolicyRoleCreate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRoleCreateObject'
      responses:
        '204':
          description: Policy role successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get all policy roles
      description: |
        This operation retrieves all of the policy roles.
      operationId: getAllPolicyRoles
      responses:
        '200':
          description: A list of policy role objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRoleList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/roles/{role_id}':
    parameters:
      - $ref: '#/components/parameters/role_id'
    patch:
      summary: Update the settings of a policy role.
      description: |
        This operation updates the settings of the policy
        role specified by it's index in the path. Any settings
        not specified in the request object will be unchanged.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: updatePolicyRole
      requestBody:
        description: The PolicyRoleUpdate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRoleUpdateObject'
      responses:
        '204':
          description: Policy role settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Delete a policy role
      description: This operation deletes the specified policy role from the device.
      operationId: removePolicyRole
      responses:
        '204':
          description: Policy role successfully removed from the device.
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy role
      description: |
        This operation retrieves the policy role specified in the path
        by it's role ID.
      operationId: getPolicyRole
      responses:
        '200':
          description: The contents of the policy role object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRoleGetObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/role-mapping/ports:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy port role mappings
      description: |
        This operation retrieves the policy port role mappings for the device.
      operationId: getPolicyPortRoleMappings
      responses:
        '200':
          description: The of policy port role mappings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyPortRoleMappingList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      summary: Create the policy port role mapping
      description: |
        This operation creates a port based role mapping entry
        which associates a policy role with a port.  The port name
        is the index for the mapping entry.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: createPolicyPortRoleMapping
      requestBody:
        description: The PolicyPortRoleMappingCreate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyPortRoleMappingCreate'
      responses:
        '204':
          description: Policy port role mapping successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/role-mapping/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    delete:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Delete a policy port role mapping entry
      description: >-
        This operation deletes the role mapping for the port specified in the
        path.
      operationId: removePolicyPortRoleMapping
      responses:
        '204':
          description: Policy port role mapping successfully removed.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/role-mapping/macs:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the list of policy port role mapping
      description: |
        This operation retrieves the list of mac policy role mappings.
      operationId: getPolicyMacRoleMappings
      responses:
        '200':
          description: The list of mac policy role mappings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMacRoleMappingList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      summary: Create the policy mac role mapping
      description: |
        This operation creates a mac based role mapping entry
        which associates a policy role with a mac address and port.
        The mac address may optionally specify a mask length.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: createPolicyMacRoleMapping
      requestBody:
        description: The PolicyMacRoleMappingCreate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyMacRoleMappingCreate'
      responses:
        '204':
          description: Policy mac role mapping successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/role-mapping/macs/{mac_address}/mask/{mac_mask_len}/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/mac_address1'
      - $ref: '#/components/parameters/mac_mask_length'
      - $ref: '#/components/parameters/port'
    delete:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Delete a policy mac role mapping entry
      description: >-
        This operation deletes the role mapping for the mac address, mask length
        and port specified in the path.
      operationId: removePolicyMacRoleMapping
      responses:
        '204':
          description: Policy mac role mapping successfully removed.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/http:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get policy web redirect server entries and sockets
      description: >
        This operation retrieves the list of policy web redirect entries
        configured

        on the device and the configured sockets.
      operationId: getAllPolicyWebRedirectConfiguration
      responses:
        '200':
          description: The contents of all policy web redirect groups and server entries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyHttpGet'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/http/sockets:
    put:
      summary: Replace HTTP redirect socket list
      description: |
        This operation replaces the list of listening socket
        port numbers associated with the policy HTTP redirect
        functionality.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: replacePolicyHttpSocketList
      requestBody:
        description: The new list of listening socket ports
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyHttpSocketList'
      responses:
        '204':
          description: Policy HTTP redirect socket list successfully created or updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/http/groups:
    post:
      summary: Create the policy web redirect entry
      description: |
        This operation creates a policy captive portal web redirect
        entry. Each entry can be referenced from a policy role. Each
        entry can have up to two redirect servers configured on it.
        This operation creates and configures a single server within
        the specified group.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: createPolicyWebRedirect
      requestBody:
        description: The PolicyHttpGroupCreate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyHttpGroupCreate'
      responses:
        '204':
          description: Policy web redirect entry successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/http/groups/{group_id}/servers/{server_id}':
    parameters:
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/server_id'
    put:
      summary: Replace policy web redirect group server settings
      description: |
        This operation replaces the settings of the policy
        web redirect group and server specified in the path. Each
        group can have up to two servers specified for redirection. This
        operation will replace the settings for a given server.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: replacePolicyWebRedirect
      requestBody:
        description: The PolicyHttpGroupUpdate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyHttpGroupUpdate'
      responses:
        '204':
          description: Policy web redirect settings successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Delete a policy web redirect group server entry
      description: |
        This operation deletes the specified policy web redirect server entry
        within a group.
      operationId: removePolicyWebRedirect
      responses:
        '204':
          description: Policy web redirect entry successfully removed from the device.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/access-lists:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy access-list configuration.
      description: |
        This operation retrieves the entire policy access-list configuration
        for the device.
      operationId: getPolicyAclConfiguration
      responses:
        '200':
          description: The list of policy access-lists configured on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/access-lists/{acl_name}':
    parameters:
      - $ref: '#/components/parameters/acl_name'
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get a single policy access-list configuration
      description: |
        This operation retrieves the contents of the policy access-list
        specified in the path.
      operationId: getSpecifiedPolicyAcl
      responses:
        '200':
          description: The contents of the policy access-list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclEntryList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      summary: Create or replace a policy access-list
      description: |
        This operation creates the access-list specified in the path parameter
        if it does not already exist. The entries for the new access-list are
        provided in the request body. If the access-list already exists, its 
        entries are replaced with the entries provided in the request body.
        If the request body contains an empty list of entries, the existing
        access-list and all of its entries are deleted.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: replacePolicyAclEntries
      requestBody:
        description: The new list of policy access-list entries
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclEntryList'
      responses:
        '204':
          description: Policy ACL entries successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/policy/application:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get the policy app-signature configuration.
      description: >
        This operation retrieves the policy application signature configuration.

        This consists of any custom display names created within a group and
        their

        associated signature patterns.
      operationId: getPolicyAppSigConfig
      responses:
        '200':
          description: >-
            The list of application signature group, display names, and
            patterns.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSigCustomLists'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/policy/application/group/{group_type}/custom/{custom_name}':
    parameters:
      - $ref: '#/components/parameters/group_type'
      - $ref: '#/components/parameters/custom_name'
    put:
      summary: Create or replace a custom application signature
      description: >
        This operation creates or replaces a custom application signature
        display

        name and pattern list for the group provided in the path parameter.

        If the custom display name specified in the path already exists,

        this operation replaces its pattern list with that provided in the
        request.

        Otherwise the display name is created with the provided pattern list.
      x-nos: switch-engine
      tags:
        - Policy Management
      operationId: createCustomAppSignature
      requestBody:
        description: The application signature pattern list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPatternList'
      responses:
        '204':
          description: Policy Application Signature pattern list created or replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Delete a custom display name
      description: >
        This operation deletes the specified policy application signature

        custom display name provided in the path parameter from the specified
        group.
      operationId: removePolicyAppCustomName
      responses:
        '204':
          description: Policy Application signature custom name deleted from the device.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/policy:
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get policy state.
      description: |
        This operation retrieves the policy state related parameters.
      operationId: getPolicyStateParams
      parameters: []
      responses:
        '200':
          description: The policy state related parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyStateParameters'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/policy/access-lists/{acl_name}/counters':
    parameters:
      - $ref: '#/components/parameters/acl_name'
    get:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Get policy access-list per entry match counter.
      description: >
        This operation retrieves the list of access-list entry names associated
        with

        the specified access-list and number of packet matches for each entry.
      operationId: getPolicyAclCounters
      parameters: []
      responses:
        '200':
          description: The policy access-list counters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclCounterList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/policy/access-lists/counters/:clear':
    post:
      x-nos: switch-engine
      tags:
        - Policy Management
      summary: Clear policy access-list counters
      description: >
        This operation immediately clears the counters for all policy
        access-lists. 

        The packet counters (number of matches) are provided on a per
        access-list entry

        basis.  However, only a single clear operation for all entries is
        currently provided.
      operationId: clearAclCounters
      responses:
        '204':
          description: Access List counters cleared successfully.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/qos/ports:
    get:
      tags:
        - QOS Management
      summary: Get list of port QOS state
      description: This operation retrieves the list of ports QOS state on the device.
      operationId: getPortQosStateList
      parameters: []
      responses:
        '200':
          description: List of all PortQosState defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortQosStateListComponent'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/qos/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - QOS Management
      summary: Get port QOS state
      description: This operation retrieves the port QOS state.
      operationId: getPortQosState
      parameters: []
      responses:
        '200':
          description: PortQosState defined on the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortQosState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/radius:
    get:
      tags:
        - RADIUS management
      summary: Get RADIUS global settings and servers list.
      description: >-
        This operation retrieves RADIUS global settings configuration and the
        list of RADIUS servers configured on the device.
      operationId: getRadiusGlobalSettings
      parameters: []
      responses:
        '200':
          description: RADIUS global settings and servers list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusGlobalAndServersList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - RADIUS management
      summary: Update RADIUS global settings.
      description: This operation updates RADIUS global settings.
      operationId: updateRadiusGlobalSettings
      requestBody:
        description: The RadiusGlobalSettings object to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusGlobalSettings'
      responses:
        '204':
          description: RADIUS global setting successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/radius:
    get:
      tags:
        - RADIUS management
      summary: Get RADIUS global state information
      description: This operation retrieves RADIUS global state information.
      operationId: getRadiusState
      parameters: []
      responses:
        '200':
          description: RADIUS global state info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/radius/secure-profile:
    get:
      x-nos: fabric-engine
      tags:
        - RADIUS management
      summary: Get the list of RADIUS secure profiles
      description: >
        This operation retrieves the list of certificate profiles configured to
        be used for Secure RADIUS.

        Each list entry consists of identyfing information for each security
        profile, such as the root and 

        subject certificates installed for every profile, as well as the private
        key.

        It is supported only for Fabric Engine devices.
      operationId: getRadiusSecureProfileList
      parameters: []
      responses:
        '200':
          description: List of all RADIUS secure profiles configured on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RadiusSecureProfileGet'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - RADIUS management
      summary: Create a RADIUS secure profile
      description: |
        This operation creates a RADIUS secure profile.
        It is supported only for Fabric Engine devices.
      operationId: createRadiusSecureProfile
      parameters: []
      requestBody:
        description: The RadiusSecureProfile object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusSecureProfile'
      responses:
        '204':
          description: RADIUS secure profile successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/radius/secure-profile/{secure_profile_name}':
    parameters:
      - $ref: '#/components/parameters/secure_profile'
    get:
      x-nos: fabric-engine
      tags:
        - RADIUS management
      summary: Get the RADIUS secure profile by name.
      description: >
        This operation retrieves the information for the RADIUS secure profile
        specified by name. 

        The response consists of identyfing information about the root and
        subject certificates installed 

        for the specified secure profile, as well as the private key.

        It is supported only for Fabric Engine devices.
      operationId: getRadiusSecureProfileByName
      responses:
        '200':
          description: The RadiusSecureProfile object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusSecureProfileGet'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - RADIUS management
      summary: Update RADIUS secure profile by name.
      description: >
        This operation updates RADIUS secure profile settings for the profile
        specified by name.

        It is supported only for Fabric Engine devices.
      operationId: updateRadiusSecureProfileByName
      requestBody:
        description: >-
          The RadiusSecureProfileUpdateSettingsByName object of the specified
          secure profile name to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusSecureProfileUpdateSettingsByName'
      responses:
        '204':
          description: RADIUS secure profile successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - RADIUS management
      summary: Delete RADIUS secure profile by name
      description: |
        This operation deletes the secure profile specified by the name.
        It is supported only for Fabric Engine devices.
      operationId: deleteRadiusSecureProfileByName
      responses:
        '204':
          description: RADIUS secure profile successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/radius/dynamic-server/host-type/{host_type}/host/{host}':
    parameters:
      - $ref: '#/components/parameters/host_type'
      - $ref: '#/components/parameters/host'
      - $ref: '#/components/parameters/index'
      - $ref: '#/components/parameters/vr_name2'
    patch:
      tags:
        - RADIUS management
      summary: Update RADIUS dyn-auth client by IP address.
      description: >
        This operation updates RADIUS dynamic authorization settings for the
        client specified by the IP address.

        For Fabric Engine devices, query params should not be set.

        For Switch Engine devices, query params are required.
      operationId: updateRadiusDynamicServerByAddr
      requestBody:
        description: The DynAuthServerUpdate object of the specified IP address to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynAuthServerUpdate'
      responses:
        '204':
          description: RADIUS dynamic authorization client successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - RADIUS management
      summary: Delete RADIUS dyn-auth client by IP address
      description: >
        This operation deletes the RADIUS dynamic authorization client specified
        by the IP address.

        For Fabric Engine devices, query params should not be set.

        For Switch Engine devices, query params are required.
      operationId: deleteRadiusDynamicServerClientByAddr
      responses:
        '204':
          description: RADIUS dynamic authorization client successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/radius/server:
    post:
      tags:
        - RADIUS management
      summary: Create RADIUS server host.
      description: |
        This operation adds a RADIUS server host. 
        Server address can be set to an hostname only for Switch Engine devices.
      operationId: createRadiusServerHost
      parameters: []
      requestBody:
        description: The RadiusServerHost object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusServerHost'
      responses:
        '204':
          description: RADIUS server host successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/radius/server/server-mode/{server_mode}/host-type/{host_type}/host/{host}/used-by/{used_by}':
    parameters:
      - $ref: '#/components/parameters/server_mode'
      - $ref: '#/components/parameters/host_type'
      - $ref: '#/components/parameters/host'
      - $ref: '#/components/parameters/used_by'
      - $ref: '#/components/parameters/index'
      - $ref: '#/components/parameters/vr_name2'
      - $ref: '#/components/parameters/primary'
      - $ref: '#/components/parameters/secondary'
    delete:
      tags:
        - RADIUS management
      summary: Remove a RADIUS server host
      description: >
        This operation removes the RADIUS server host server specified in the
        path by its

        address type, address, and used-by attribute, for Fabric Engine devices.

        For Switch Engine devices, query param vr_name will be required. Also
        one of primary, secondary, index needs to be set.
      operationId: deleteRadiusServerHost
      responses:
        '204':
          description: RADIUS server host deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/rf-neigbhor:
    get:
      x-nos: wireless
      tags:
        - RF Neighbor Management
      summary: Get the RF Neighbor state information
      description: |
        This operation retrieves the RF Neighbor state information.
      operationId: getRfNeighborState
      parameters: []
      responses:
        '200':
          description: The RF Neighbor State object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfNeighborState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/slpp:
    get:
      tags:
        - SLPP Management
      summary: Get the SLPP state
      description: This operation retrieves the SLPP state.
      operationId: getSlppState
      parameters: []
      responses:
        '200':
          description: The SLPP state for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlppState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/snmp:
    get:
      tags:
        - SNMP Management
      summary: Get the SNMP settings
      description: |
        This operation retrieves the SNMP related settings for the device.
      operationId: getSnmpConfiguration
      parameters: []
      responses:
        '200':
          description: The SNMP settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpGetSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - SNMP Management
      summary: Update the SNMP common settings
      description: |
        This operation updates the SNMP common settings for the device.
        These settings consist of the system name, location, and contact.
      operationId: updateSnmpCommonSettings
      parameters: []
      requestBody:
        description: An SnmpCommonSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpCommonSettings'
      responses:
        '204':
          description: The SNMP common settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/snmp/v1v2:
    put:
      tags:
        - SNMP Management
      summary: Replace the SNMP version 1 and 2 configuration
      description: |
        This operation replaces the SNMP version 1 and 2 settings.
      operationId: replaceSnmpV1V2Configuration
      parameters: []
      requestBody:
        description: An SnmpV1V2Set object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpV1V2Set'
      responses:
        '204':
          description: The SNMP version 1 and 2 settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/snmp/v3:
    put:
      tags:
        - SNMP Management
      summary: Replace the SNMP version 3 configuration
      description: |
        This operation replaces the SNMP version 3 settings.
      operationId: replaceSnmpV3Configuration
      parameters: []
      requestBody:
        description: An SnmpV3Set object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpV3Set'
      responses:
        '204':
          description: The SNMP version 3 settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/sntp:
    get:
      x-nos: switch-engine
      tags:
        - SNTP Management
      summary: Get the SNTP settings
      description: >
        Get the Simple Network Time Protocol (SNTP) settings for the device
        including the 

        list of servers.
      operationId: getSntpConfiguration
      parameters: []
      responses:
        '200':
          description: The Simple Network Time Protocol (SNTP) settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SntpSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      x-nos: switch-engine
      tags:
        - SNTP Management
      summary: Replace SNTP configuration for the device
      description: >
        This operation replaces the Simple Network Time Protocol (SNTP) settings

        for the device.  The request body consists of an SntpSettings object
        which

        may optionally include a list of servers which will replace the existing
        list.
      operationId: replaceSntpConfiguration
      parameters: []
      requestBody:
        description: An SntpSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SntpSettings'
      responses:
        '204':
          description: SNTP settings replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/cfm:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Cfm Global Settings
      summary: Get CFM Global Settings for SPBM VLANs.
      description: |
        This operation retrieves the CFM global settings for SPBM VLANs.
      operationId: getSpbmCfmGlobalSettings
      responses:
        '200':
          description: The SpbmCfmGlobal object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpbmCfmGlobal'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Cfm Global Settings
      summary: Update CFM Global Settings for SPBM VLANs.
      description: |
        This operation updates the CFM global settings for SPBM VLANs.
      operationId: updateSpbmCfmGlobalSettings
      parameters: []
      requestBody:
        description: The SpbmCfmGlobal object to modify.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpbmCfmGlobal'
      responses:
        '204':
          description: CFM global settings for SPBM VLANs successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Global Settings
      summary: Get SPBM global settings
      description: |
        This operation retrieves the SPBM global settings on the device.
      operationId: getSpbmGlobalSettings
      responses:
        '200':
          description: The SpbmGlobalSettings object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpbmGlobalSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Global Settings
      summary: Update SPBM global settings.
      description: >
        This operation updates SPBM global settings. If nicknameServerPrefix is
        set to 0.0.0.0 

        in payload, it will default the value to A.00.00. Enabled attribute
        cannot be set in the 

        same time with nicknameServerEnabled, nicknameServerPrefix as these two
        need a 

        SPBM instance created and a SPBM nickname set before.
      operationId: updateSpbmGlobalSettings
      parameters: []
      requestBody:
        description: The SpbmGlobalSettings object to modify.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpbmGlobalSettings'
      responses:
        '204':
          description: SPBM global settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/isis/lag:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit config all LAGs
      description: >
        This operation retrieves the ISIS circuit information for all LAGs.

        The response consists of the information in IsisCircuitSettingsLagList
        object.
      operationId: getIsisCircAllLag
      responses:
        '200':
          description: The object IsisCircuitSettingsLagList for all LAGs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitSettingsLagList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Create ISIS circuit for the LAG ID
      description: |
        Create the ISIS circuit for the LAG ID.
      operationId: createIsisCircByLagId
      requestBody:
        description: The object IsisCircuitLagCreateObject for the specified LAG ID.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisCircuitLagCreateObject'
      responses:
        '204':
          description: ISIS circuit for the LAG ID successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/lag/{lag_id}':
    parameters:
      - $ref: '#/components/parameters/lag_id2'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit configuration for the LAG ID
      description: >
        This operation retrieves the ISIS circuit information for the LAG ID.

        The response consists of the information in IsisCircuitSettingsList
        object.
      operationId: getIsisCircByLagId
      responses:
        '200':
          description: The object IsisCircuitSettingsList for the LAG ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitSettingsList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/lag/{lag_id}/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/lag_id2'
      - $ref: '#/components/parameters/isis_area_type'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Update ISIS circuit configuration for the LAG ID
      description: |
        Update the ISIS circuit configuration for the LAG ID.
      operationId: updateIsisCircByLagId
      requestBody:
        description: The object IsisCircuitAllObject for the specified LAG ID.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisCircuitAllObject'
      responses:
        '204':
          description: ISIS circuit settings for the LAG ID successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Delete ISIS circuit for LAG ID
      description: |
        Delete the ISIS circuit for the LAG ID.
        SPBM instance is also removed.
      operationId: deleteIsisCircByLagId
      responses:
        '204':
          description: ISIS circuit for the LAG ID successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/isis/logical-ifs:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get all ISIS logical interfaces configuration
      description: >
        This operation retrieves the entire ISIS logical interfaces
        configuration, 

        including ISIS circuit information.

        The response consists of the information in IsisLogicalIfSettingsAllList
        object.
      operationId: getIsisLogicalIfsAll
      responses:
        '200':
          description: The object IsisLogicalIfSettingsAllList for all logical interfaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisLogicalIfSettingsAllList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Create ISIS logical interface
      description: |
        Create the ISIS logical interface and configure the ISIS circuit for it.
      operationId: createIsisLogicalIf
      requestBody:
        description: The object IsisLogicalIfCreateObject.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisLogicalIfCreateObject'
      responses:
        '204':
          description: ISIS logical interface successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/logical-ifs/{isis_logical_if_id}':
    parameters:
      - $ref: '#/components/parameters/isis_logical_if_id'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS logical interface ID configuration
      description: >
        This operation retrieves the ISIS logical interface configuration,
        including circuit information.

        The response consists of the information in IsisLogicalIfSettingsList
        object.
      operationId: getIsisLogicalIfById
      responses:
        '200':
          description: The object IsisLogicalIfSettingsList for the logical interface.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisLogicalIfSettingsList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Update logical interface configuration
      description: |
        Update the ISIS logical interface configuration, including ISIS circuit.
      operationId: updateIsisLogicalIfById
      requestBody:
        description: >-
          The object IsisLogicalIfUpdateObject for the specified logical
          interface.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisLogicalIfUpdateObject'
      responses:
        '204':
          description: ISIS logical interface successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Delete ISIS logical interface by ID
      description: |
        Delete the ISIS logical interface by ID.
      operationId: deleteIsisLogicalIfById
      responses:
        '204':
          description: ISIS logical interface successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/logical-ifs/{isis_logical_if_id}/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/isis_logical_if_id'
      - $ref: '#/components/parameters/isis_area_type'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Delete ISIS circuit on logical interface
      description: |
        Delete the ISIS circuit on logical interface by ID.
      operationId: deleteIsisCircuitLogicalIfById
      responses:
        '204':
          description: ISIS circuit on logical interface successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/isis/ports:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit config all ports
      description: >
        This operation retrieves the ISIS circuit information for all ports.

        The response consists of the information in IsisCircuitSettingsPortList
        object.
      operationId: getIsisCircAllPorts
      responses:
        '200':
          description: The object IsisCircuitSettingsPortList for all ports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitSettingsPortList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Create ISIS circuit for the port
      description: |
        Create the ISIS circuit for the port.
      operationId: createIsisCircByPort
      requestBody:
        description: The object IsisCircuitPortCreateObject for the specified port.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisCircuitPortCreateObject'
      responses:
        '204':
          description: ISIS circuit for the port successfully created.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit configuration for the port
      description: >
        This operation retrieves the ISIS circuit information for the port.

        The response consists of the information in IsisCircuitSettingsList
        object.
      operationId: getIsisCircByPort
      responses:
        '200':
          description: The object IsisCircuitSettingsList for the port.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitSettingsList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/ports/{port}/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/port'
      - $ref: '#/components/parameters/isis_area_type'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Update ISIS circuit configuration for the port
      description: |
        Update the ISIS circuit configuration for the port.
      operationId: updateIsisCircByPort
      requestBody:
        description: The object IsisCircuitAllObject for the specified port.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisCircuitAllObject'
      responses:
        '204':
          description: ISIS circuit settings for the port successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Delete ISIS circuit for port
      description: |
        Delete the ISIS circuit for the port.
        SPBM instance is also removed.
      operationId: deleteIsisCircByPort
      responses:
        '204':
          description: ISIS circuit for the port successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/adjacencies:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS adjacencies
      description: |
        This operation retrieves the ISIS adjacencies.
      operationId: getIsisAdjacenciesState
      responses:
        '200':
          description: A list of IsisAdjacenciesStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisAdjacenciesStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/spbm/isis/adjacencies/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/isis_area_type'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS adjacencies per ISIS area type
      description: |
        This operation retrieves the ISIS adjacencies per ISIS area type.
      operationId: getIsisAdjacenciesStatePerArea
      responses:
        '200':
          description: A list of IsisAdjacenciesStateObjectPerArea.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisAdjacenciesStateObjectPerArea'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/lag:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit state on LAGs
      description: >
        This operation retrieves the ISIS circuit state information for all
        LAGs.

        The response consists of the information in IsisCircuitStateLagList
        object.
      operationId: getIsisCircStateAllLag
      responses:
        '200':
          description: The object IsisCircuitStateLagList for all LAGs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitStateLagList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/logical-ifs:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get all ISIS logical interfaces state
      description: >
        This operation retrieves the entire ISIS logical interfaces state, 

        including ISIS circuit state information.

        The response consists of the information in IsisLogicalIfStateList
        object.
      operationId: getIsisLogicalIfsStateAll
      responses:
        '200':
          description: The object IsisLogicalIfStateList for all logical interfaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisLogicalIfStateList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/ports:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Circuit Management
      summary: Get ISIS circuit state on ports
      description: >
        This operation retrieves the ISIS circuit state information for all
        ports.

        The response consists of the information in IsisCircuitStatePortList
        object.
      operationId: getIsisCircStateAllPorts
      responses:
        '200':
          description: The object IsisCircuitStatePortList for all ports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisCircuitStatePortList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/isis:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Get ISIS global settings
      description: |
        This operation retrieves a list of ISIS global settings and
        settings of the SPBM instance configured per each ISIS area 
        type: home and remote area. The area type is present in the 
        payload and based on that, the attributes for each type is 
        different. For devices which do not support multi-area, response 
        will not include remote area and in the home area will not include
        areaName, areaVNodeNickname, areaVNodeSysId and areaVNodeSysName.
      operationId: getIsisGlobalAndSpbmSettings
      parameters: []
      responses:
        '200':
          description: The IsisGlobalAndSpbmSettingsPerArea object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisGlobalAndSpbmSettingsPerArea'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/isis_area_type'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Create a SPBM instance per area
      description: >
        This operation creates a SPBM instance and settings on specified area
        can be configured.

        For Fabric Engine there can be just one SPBM instance created with any
        id number in 

        the available range. The primaryVlan attribute makes sense only if there
        are 2 vlans set

        else will be set to 0. The instance can only be created in home area. To
        configure 

        remote settings for SPBM instance, PATCH request should be used. The
        area parameter

        must be the same with the areaType in the payload.
      operationId: createSpbmInstancePerArea
      requestBody:
        description: The SpbmInstanceSettingsPerArea object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpbmInstanceSettingsPerArea'
      responses:
        '204':
          description: SPBM instance successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Update ISIS global settings per area
      description: |
        This operation updates ISIS global settings for the ISIS area type 
        specified. Based on the area type, attributes are different. The 
        area parameter must be the same with the areaType in the payload.
      operationId: updateIsisGlobalSettingsPerArea
      requestBody:
        description: The IsisGlobalSettingsPerArea object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisGlobalSettingsPerArea'
      responses:
        '204':
          description: ISIS global settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/{spbm_id}':
    parameters:
      - $ref: '#/components/parameters/spbm_id'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Get SPBM instance settings
      description: >
        This operation retrieves a list of SPBM instance settings per each ISIS
        area type.

        If the device supports multi-area, the response will include remote area
        and 

        for this area, only attributes nodeNickName and areaType are available.
      operationId: getIsisSpbmSettingsPerArea
      responses:
        '200':
          description: The SpbmInstanceUpdateSettingsPerArea object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpbmInstanceUpdateSettingsPerArea'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/{spbm_id}/areas/{isis_area_type}':
    parameters:
      - $ref: '#/components/parameters/spbm_id'
      - $ref: '#/components/parameters/isis_area_type'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Update SPBM instance settings per area
      description: |
        This operation updates settings for a SPBM instance for the ISIS area 
        type specified. Based on the area type, attributes are different. The 
        area parameter must be the same with the areaType in the payload.
      operationId: updateSpbmInstanceSettingsPerArea
      requestBody:
        description: The SpbmInstanceUpdateSettingsPerArea object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpbmInstanceUpdateSettingsPerArea'
      responses:
        '204':
          description: SPBM instance settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Delete SPBM instance per area
      description: >
        Delete SPBM instance. For Fabric Engine this request is available only
        on home area.

        The area parameter must be the same with the areaType in the payload.
      operationId: deleteSpbmInstance
      responses:
        '204':
          description: SPBM instance successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/isis/{spbm_id}/areas/{isis_area_type}/vlans':
    parameters:
      - $ref: '#/components/parameters/spbm_id'
      - $ref: '#/components/parameters/isis_area_type'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Replace SPBM instance vlans settings
      description: |
        This operation replaces vlans and primary vlan settings for 
        a SPBM instance for the ISIS area. There can only be 2 vlans
        configured. If there is only a vlan, the primary vlan would 
        be set to 0. If primary vlan is not in the payload, would be
        set to 0. For the moment, these two settings are available 
        only in home area.
      operationId: replaceSpbmInstanceVlanSettings
      requestBody:
        description: The SpbmInstanceVlansSettings object to replace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpbmInstanceVlansSettings'
      responses:
        '204':
          description: SPBM instance settings successfully replaced
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis Global Settings
      summary: Get ISIS global state
      description: |
        This operation retrieves SPBM ISIS state information for multi-area
        devices.
      operationId: getIsisSpbmState
      parameters: []
      responses:
        '200':
          description: The IsisSpbmState object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisSpbmState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/multicast-fib:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis State Info
      summary: Get ISIS IP Multicast-FIB entries
      description: >
        This operation retrieves the ISIS IP Multicast-FIB entries.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.
      operationId: getIsisMcastFibState
      responses:
        '200':
          description: A list of IsisMcastFibStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisMcastFibStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/lsp:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis State Info
      summary: Get ISIS LSP
      description: >
        This operation retrieves the ISIS LSP entries.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.
      operationId: getIsisLspState
      responses:
        '200':
          description: A list of IsisLspStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisLspStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/ip-mcast-routes:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis State Info
      summary: Get ISIS ISID Multicast IP Routes
      description: >
        This operation retrieves the ISIS ISID Multicast IP Routes entries.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.
      operationId: getIsisMcastRoutesState
      responses:
        '200':
          description: A list of IsisIpIsidMcastRoutesStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisIpIsidMcastRoutesStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/inter-isid/unicast-fib:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis State Info
      summary: Get ISIS IP Inter-Isid Unicast-FIB entries
      description: >
        This operation retrieves the ISIS IP Inter-Isid Unicast-FIB entries.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.
      operationId: getIsisIpInterIsidUnicastFibState
      responses:
        '200':
          description: A list of IsisIpInterIsidUnicastFibStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisIpInterIsidUnicastFibStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/isis/unicast-fib:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Isis State Info
      summary: Get ISIS IP Unicast-FIB entries
      description: >
        This operation retrieves the ISIS IP Unicast-FIB entries.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.
      operationId: getIsisUcastFibState
      responses:
        '200':
          description: A list of IsisUcastFibStateObject.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisUcastFibStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l2/isid:
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Create an ISID.
      description: |
        This operation creates an ISID of type CVLAN, TUNI or SUNI.
        The maximum value to create a instance is 15999999.
      operationId: createIsid
      parameters: []
      requestBody:
        description: The IsidCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsidCreateObject'
      responses:
        '204':
          description: ISID successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get all ISIDs configuration
      description: >
        This operation retrieves all ISID configuration information on the
        device.
      operationId: getAllIsid
      responses:
        '200':
          description: The IsidList object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsidList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}':
    parameters:
      - $ref: '#/components/parameters/isid'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update ISID properties
      description: |
        This operation allows the change for ISID name.
      operationId: updateIsidSettings
      requestBody:
        description: The IsidUpdateSettings object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsidUpdateSettings'
      responses:
        '204':
          description: ISID settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get ISID properties
      description: >
        This operation retrieves configuration for the specified ID on the
        device.
      operationId: getIsid
      responses:
        '200':
          description: The IsidGetObject object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsidGetObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l2/isid/cvlan:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get CVLAN configuration
      description: |
        This operation retrieves the CVLAN configuration on the device.
      operationId: getCvlan
      responses:
        '200':
          description: The CvlanGetObject object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CvlanGetObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/cvlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/isid'
      - $ref: '#/components/parameters/vlan_id'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Delete a CVLAN instance
      description: |
        This operation deletes a CVLAN instance for the specified VLAN.
      operationId: deleteCvlanInstance
      responses:
        '204':
          description: CVLAN instance successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l2/isid/suni:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get SUNI configuration
      description: |
        This operation retrieves all SUNI configuration on the device.
      operationId: getSuni
      responses:
        '200':
          description: The SuniGetObject settings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuniGetObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/suni':
    parameters:
      - $ref: '#/components/parameters/isid'
    post:
      tags:
        - SPBM Layer2 Isid Management
      summary: Add a SUNI mapping
      description: |
        This operation updates SUNI instance by associating port list 
        or/and LAG ids and a Cvid to the specified ISID.
      x-nos: fabric-engine
      operationId: addInterfaceToSuni
      requestBody:
        description: The SuniCreateInterfacesObject object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuniCreateInterfacesObject'
      responses:
        '204':
          description: SUNI mapping added successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Delete a SUNI instance
      description: |
        This operation deletes a SUNI instance for the specified ISID.
      operationId: deleteSuniInstance
      responses:
        '204':
          description: SUNI instance successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get SUNI configuration for specified ISID
      description: |
        This operation retrieves SUNI configuration for a specified ISID 
        on the device.
      operationId: getSuniIsid
      responses:
        '200':
          description: The SuniGetObjectPerIsid settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuniGetObjectPerIsid'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isis/{isid}/suni/cvid/{cvid}':
    parameters:
      - $ref: '#/components/parameters/isid'
      - $ref: '#/components/parameters/cvid'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update SUNI bpdu for the specified ISID
      description: >
        This operation updates bpdu status for a specified Switched UNI
        instance.

        Bpdu can be enabled only for cvid 4096 (untagged-traffic).
      operationId: updateBpduSuni
      parameters: []
      requestBody:
        description: A SuniBpdu object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuniBpduObject'
      responses:
        '204':
          description: SUNI bpdu updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/suni/cvid/{cvid}/ports':
    parameters:
      - $ref: '#/components/parameters/isid'
      - $ref: '#/components/parameters/cvid'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update a SUNI interface
      description: >
        This operation updates the list of port interfaces for the specified
        SUNI ISID id.
      operationId: updateSuniInterfacePorts
      requestBody:
        description: The port member list to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortMembers'
      responses:
        '204':
          description: SUNI interfaces successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/suni/cvid/{cvid}/lag':
    parameters:
      - $ref: '#/components/parameters/isid'
      - $ref: '#/components/parameters/cvid'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update a SUNI interface
      description: >
        This operation updates the list of LAG interfaces for the specified SUNI
        ISID id.
      operationId: updateSuniInterfaceLag
      requestBody:
        description: The LAG list to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagIds'
      responses:
        '204':
          description: SUNI interfaces successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l2/isid/tuni:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get TUNI configuration
      description: >
        This operation retrieves all the TUNI configuration information on the
        device.
      operationId: getTuni
      responses:
        '200':
          description: The TuniGetObject settings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TuniGetObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/tuni':
    parameters:
      - $ref: '#/components/parameters/isid'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Delete a TUNI instance
      description: |
        This operation deletes a TUNI instance for the specified ISID.
      operationId: deleteTuniInstance
      responses:
        '204':
          description: TUNI instance successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get TUNI configuration for specified ISID
      description: >
        This operation retrieves all the TUNI configuration for specified ISID
        on the device.
      operationId: getTuniIsid
      responses:
        '200':
          description: The TuniGetObjectPerIsid settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TuniGetObjectPerIsid'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/tuni/ports':
    parameters:
      - $ref: '#/components/parameters/isid'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update a TUNI interface
      description: >
        This operation updates the list of port interfaces for the specified
        TUNI ISID id.
      operationId: updateTuniInterfacePorts
      requestBody:
        description: The port member list to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortMembers'
      responses:
        '204':
          description: TUNI interfaces successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/isid/{isid}/tuni/lag':
    parameters:
      - $ref: '#/components/parameters/isid'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Update a TUNI interface
      description: >
        This operation updates the list of LAG interfaces for the specified TUNI
        ISID id.
      operationId: updateTuniInterfaceLag
      requestBody:
        description: The LAG list to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagIds'
      responses:
        '204':
          description: TUNI interfaces successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/l2/isid/{isid}/action/:apply':
    parameters:
      - $ref: '#/components/parameters/isid'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Apply ISID action.
      description: |
        This operation is used to apply ISID action.
      operationId: applyIsidAction
      requestBody:
        description: The IsidAction object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsidAction'
      responses:
        '204':
          description: ISIS action applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/spbm/l2/isid/suni:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get SUNI state configuration
      description: |
        This operation retrieves all SUNI state configuration on the device.
      operationId: getSuniState
      responses:
        '200':
          description: The SuniStateObjectPerIsid settings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuniStateObjectPerIsid'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/spbm/l2/isid/{isid}/suni':
    parameters:
      - $ref: '#/components/parameters/isid'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer2 Isid Management
      summary: Get SUNI state configuration for specified ISID
      description: >
        This operation retrieves all SUNI state configuration on the device for
        the specified SUNI ISID.
      operationId: getSuniStatePerSuni
      responses:
        '200':
          description: The SuniStateObject settings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuniStateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l3/accept-policy:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Get ISIS accept policies information
      description: >
        This operation retrieves all accept policies configuration on the
        device.
      operationId: getIsisAcceptPolicies
      parameters: []
      responses:
        '200':
          description: The IsisAcceptPoliciesWithIsidDestination object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisAcceptPoliciesWithIsidDestination'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Create an ISIS accept policy.
      description: >
        This operation creates an ISIS accept policy used to apply to routes
        from all Backbone Edge Bridges(BEB). 

        Accept policies apply to incoming traffic and determine whether to add
        the route to the routing table.

        ISIS accept policies can be configured with a route policy or a backbone
        route policy or a combination of

        both, to determine which routes the ISIS accept policy applies to.
      operationId: createIsisAcceptPolicy
      requestBody:
        description: The IsisAcceptPolicyCreateObject object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptPolicyCreateObject'
      responses:
        '204':
          description: ISIS accept policy successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Get ISIS accept policies for the specified ISID
      description: >
        This operation retrieves the IPv4/IPv6 accept policies configuration on
        the device for

        the specified ISID.
      operationId: getIsisAcceptPoliciesPerIsidAndAddressType
      responses:
        '200':
          description: The IsisAcceptPolicies object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisAcceptPolicies'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/l3/accept-policy/isid/{isid_destination}/:apply':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Apply ISIS accept policies on specified ISID.
      description: >
        This operation is used to apply all IPv4/IPv6 accept filters (including 

        default filters) on specified ISID. This operation cannot be seen in a
        GET request.
      operationId: applyIsisAcceptPoliciesPerIsid
      requestBody:
        description: The IsisAcceptApply object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptApply'
      responses:
        '204':
          description: ISIS accept filter applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/default':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update settings of ISIS default filter.
      description: >
        This operation updates route map and backbone route map of default
        filter

        on the specified Layer 3 VSN.
      operationId: updateIsisAcceptDefaultFilterSettings
      requestBody:
        description: The IsisAcceptDefaultPolicy object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptDefaultPolicy'
      responses:
        '204':
          description: ISIS accept default filter settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/nickname/{nickname}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/nickname'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update ISIS filter based on SPBM nickname.
      description: |
        This operation updates settings of an ISIS filter based on SPBM nickname
        on the specified VRF.
      operationId: updateIsisAcceptNickname
      requestBody:
        description: The IsisAcceptNicknamePolicyUpdateSettings object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
      responses:
        '204':
          description: ISIS accept nickname filter settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Delete ISIS filter based on SPBM nickname.
      description: |
        Delete ISIS filter based on SPBM nickname.
      operationId: deleteIsisAcceptNicknamePolicy
      responses:
        '204':
          description: ISIS accept filter successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/nickname/{nickname}/filter-isid/{filter_isid}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/nickname'
      - $ref: '#/components/parameters/filter_isid'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update SPBM nickname and ISID ISIS filter.
      description: |
        This operation updates settings of an ISIS filter based on SPBM nickname
        and ISID on the specified VRF.
      operationId: updateIsisAcceptNicknameIsid
      requestBody:
        description: The IsisAcceptNicknamePolicyUpdateSettings object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
      responses:
        '204':
          description: ISIS accept nickname and ISID filter settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Delete SPBM nickname and ISID ISIS filter.
      description: |
        Delete ISIS filter based on SPBM nickname and ISID.
      operationId: deleteIsisAcceptNicknameIsidPolicy
      responses:
        '204':
          description: ISIS accept filter successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/nickname/{nickname}/filter-isid-list/{filter_isid_list}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/nickname'
      - $ref: '#/components/parameters/filter_isid_list'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update SPBM nickname and ISID list ISIS filter.
      description: |
        This operation updates settings of an ISIS filter based on SPBM nickname
        and ISID list on the specified VRF.
      operationId: updateIsisAcceptNicknameIsidList
      requestBody:
        description: The IsisAcceptNicknamePolicyUpdateSettings object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
      responses:
        '204':
          description: >-
            ISIS accept nickname and ISID list filter settings successfully
            updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Delete SPBM nickname and ISID list ISIS filter.
      description: |
        Delete ISIS filter based on SPBM nickname and ISID list.
      operationId: deleteIsisAcceptNicknameIsidListPolicy
      responses:
        '204':
          description: ISIS accept filter successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/filter-isid/{filter_isid}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/filter_isid'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update ISIS filter based on ISID.
      description: >
        This operation updates settings of an ISIS filter based on ISID
        instance.
      operationId: updateIsisAcceptPolicyIsidByIsid
      requestBody:
        description: The IsisAcceptIsidUpdateSettings object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptIsidPolicyUpdateSettings'
      responses:
        '204':
          description: ISIS accept ISID filter settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Delete ISIS filter based on an ISID.
      description: |
        Delete ISIS filter based on ISID.
      operationId: deleteIsisAcceptIsidPolicy
      responses:
        '204':
          description: ISIS accept filter successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3/accept-policy/isid/{isid_destination}/address-type/{address_type}/filter-isid-list/{filter_isid_list}':
    parameters:
      - $ref: '#/components/parameters/isid_destination'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/filter_isid_list'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Update ISIS filter based on ISID list name.
      description: >
        This operation updates settings of an ISIS list filter based on ISID
        list name

        on the specified VRF.
      operationId: updateIsisAcceptIsidByIsidList
      requestBody:
        description: The IsisAcceptIsidListPolicyUpdateSettings object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisAcceptIsidListPolicyUpdateSettings'
      responses:
        '204':
          description: ISIS accept ISID list filter settings successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 Accept Policy Management
      summary: Delete ISIS filter based on ISID list name.
      description: |
        Delete ISIS filter based on ISID list name.
      operationId: deleteIsisAcceptIsidListPolicy
      responses:
        '204':
          description: ISIS accept filter successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l3vsn/vrf:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Get L3VSN configuration
      description: |
        This operation retrieves the L3VSN configuration information for each
        VRF on the device. This is Fabric Engine specific.
      operationId: getL3Vsn
      parameters: []
      responses:
        '200':
          description: The L3VSN settings for each VRF.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/L3Vsn'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3vsn/vrf/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Create a L3VSN instance for the specified VRF.
      description: >-
        This operation creates a IPv4/IPv6 IPVPN node for the specified VRF. The
        type of the IPVPN node is required for creation. VpnEnabled attribute
        cannot be set if I-SID number is not present in the payload. The maximum
        value used for creation is 15999999. This is Fabric Engine specific.
      operationId: createL3VsnInstance
      requestBody:
        description: The L3VsnCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3VsnCreateObject'
      responses:
        '204':
          description: L3VSN instance successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Get L3VSN configuration for the specified VRF
      description: |
        This operation retrieves the L3VSN configuration for the
        specified VRF. This is Fabric Engine specific.
      operationId: getL3VsnPerVrf
      responses:
        '200':
          description: The L3VSN settings for the specified VRF.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3VsnSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3vsn/vrf/{vr_name}/ipvpn-type/{ipvpn_type}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/ipvpn_type'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Update L3VSN settings for the specified VRF.
      description: >
        This operation updates settings for a IPv4/IPv6 L3VSN node on the
        specified VRF id.

        To enable a VPN node, I-SID must be also added. This is Fabric Engine
        specific.
      operationId: updateL3VsnVpnStatus
      requestBody:
        description: The L3VsnSettings object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3VsnUpdateSettings'
      responses:
        '204':
          description: L3VSN settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Delete a L3VSN instance for the specified VRF.
      description: >
        This operation deletes a IPv4/IPv6 L3VSN instance for the specified VRF
        id.

        This is Fabric Engine specific.
      operationId: deleteL3VsnInstance
      responses:
        '204':
          description: L3VSN instance successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3vsn/vrf/{vr_name}/filter-isid-list':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Create an ISIS ISID list for the specified VRF.
      description: |
        This operation creates an ISIS ISID list for the specified VRF.
      operationId: createIsisIsidList
      requestBody:
        description: The IsisListNameCreateObject object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsidListCreateObject'
      responses:
        '204':
          description: ISID list successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Get ISIS ISID lists for the specified VRF
      description: >
        This operation retrieves ISIS ISID lists name and the ISID ids in each
        list.
      operationId: getIsisIsidLists
      responses:
        '200':
          description: The IsisAcceptPoliciesWithVrName object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsidListCreateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3vsn/vrf/{vr_name}/filter-isid-list/{filter_isid_list}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/filter_isid_list'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Delete ISIS ISID list.
      description: |
        Delete ISIS ISID list.
      operationId: deleteIsisIsidList
      responses:
        '204':
          description: ISIS ISID list successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l3vsn/vrf/{vr_name}/filter-isid-list/{filter_isid_list}/isids':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/filter_isid_list'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Layer3 VSN Management
      summary: Update ISID ids in the ISID list for VRF.
      description: >
        This operation updates ISID ids in the specified ISID list for the
        specified VRF.
      operationId: updateIsisIsidList
      requestBody:
        description: Update ISID ids in the ISID list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IsidNonObject'
      responses:
        '204':
          description: ISIS ISID list successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/l2/multiarea/multicast-snoop:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L2 multi-area redistribution.
      description: >
        This operation retrieves L2 multi-area multicast snooping redistribution
        configuration for each

        type of redistribution. This is available only on multi-area devices.
      operationId: getIsisL2MultiAreaMulticastSnoopRedistribution
      responses:
        '200':
          description: The IsisL2MultiAreaMulticastSnoopRedist object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopRedist'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Create an ISIS L2 multi-area redistribution.
      description: >
        This operation creates a multi-area L2 multicast snooping redistribution
        for an

        ISID/ISID list specified in the payload. If the direction is not
        specified in the 

        payload, the redistribution will apply to both directions. The enable
        attribute 

        is needed for enabling the redistribution. Optionally, a route map can
        be specified 

        to govern the redistribution. This operation is available only on
        multi-area devices.
      operationId: createIsisL2MultiAreaMulticastSnoopRedistribution
      requestBody:
        description: The IsisL2MultiAreaMulticastSnoopRedistCreateObject object to create
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IsisL2MultiAreaMulticastSnoopRedistCreateObject
      responses:
        '204':
          description: >-
            ISIS L2 multi-area multicast snooping redistribution successfully
            created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/l2/multiarea/multicast-snoop/{multicast_snoop_type}/direction/{direction}':
    parameters:
      - $ref: '#/components/parameters/multicast_snoop_type'
      - $ref: '#/components/parameters/direction'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS L2 multi-area redistribution.
      description: >
        This operation updates settings of an ISIS L2 multi-area multicast
        snooping redistribution for the 

        specified redistribution type and direction. This is available only on
        multi-area devices.
      operationId: updateIsisL2MultiAreaMulticastSnoopRedistribution
      requestBody:
        description: The IsisL2MultiAreaMulticastSnoopRedistUpdateObject object to modify
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IsisL2MultiAreaMulticastSnoopRedistUpdateObject
      responses:
        '204':
          description: >-
            ISIS L2 multi-area multicast snooping redistribution settings
            successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Delete ISIS L2 multi-area redistribution.
      description: >
        Delete the specified ISIS L2 multi-area multicast snooping
        redistribution.

        This operation is available only on multi-area devices.
      operationId: deleteIsisL2MultiAreaMulticastSnoopRedistribution
      responses:
        '204':
          description: >-
            ISIS L2 multi-area multicast snooping redistribution successfully
            deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/l2/multiarea/multicast-snoop/direction/{direction}/:apply':
    parameters:
      - $ref: '#/components/parameters/direction'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS L2 multi-area redistribution.
      description: >
        This operation is used to apply L2 multi-area multicast snooping
        redistribution.

        This is available only on multi-area devices.
      operationId: applyIsisL2MultiAreaMulticastSnoopingRedist
      responses:
        '204':
          description: >-
            ISIS L2 multi-area multicast snooping redistribution applied
            succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/l2/multiarea/isid:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L2 multi-area ISID redistribution.
      description: >
        This operation retrieves L2 multi-area ISID redistribution
        configuration.

        This is available only on multi-area devices.
      operationId: getIsisL2MultiAreaIsidRedistribution
      responses:
        '200':
          description: The IsisL2MultiAreaIsidRedistObject object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisL2MultiAreaIsidRedistObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS L2 multi-area redistribution.
      description: >
        This operation updates settings of an ISIS L2 multi-area ISID
        redistribution.

        This is available only on multi-area devices.
      operationId: updateIsisL2MultiAreaIsidRedistribution
      requestBody:
        description: The IsisL2MultiAreaIsidRedistCObject object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL2MultiAreaIsidRedistObject'
      responses:
        '204':
          description: ISIS L2 multi-area ISID redistribution settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/l2/multiarea/isid/:apply':
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS L2 multi-area ISID redistribution.
      description: |
        This operation is used to apply L2 multi-area ISID redistribution.
        This is available only on multi-area devices.
      operationId: applyIsisL2MultiAreaIsidRedist
      parameters: []
      responses:
        '204':
          description: ISIS L2 multi-area ISID redistribution applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/l3/multiarea:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L3 multi-area redistribution.
      description: |
        This operation retrieves L3 redistribution configuration for each
        type of redistribution for all ISID instances. This is available 
        only on multi-area devices.
      operationId: getIsisL3MultiAreaRedistribution
      responses:
        '200':
          description: The IsisL3MultiAreaRedist object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisL3MultiAreaRedist'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/l3/multiarea/isid/{isid_source}':
    parameters:
      - $ref: '#/components/parameters/isid_source'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L3 multi-area redistribution.
      description: |
        This operation retrieves L3 redistribution configuration for each
        type of redistribution. This is available only on multi-area devices.
      operationId: getIsisL3MultiAreaRedistributionPerIsid
      responses:
        '200':
          description: The IsisL3MultiAreaRedistPerIsid object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisL3MultiAreaRedistPerIsid'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Create an ISIS L3 multi-area redistribution.
      description: >
        This operation creates a multi-area L3 multi-area redistribution of type
        specified 

        in the payload for a L3VSN. If the direction is not specified in the
        payload, the 

        redistribution will apply to both directions. The enable attribute is
        needed for 

        enabling the redistribution. Optionally, a route map can be specified to
        govern 

        the redistribution. This is available only on multi-area devices.
      operationId: createIsisL3MultiAreaRedistribution
      requestBody:
        description: The IsisL3MultiAreaRedistCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL3MultiAreaRedistCreateObject'
      responses:
        '204':
          description: ISIS L3 multi-area redistribution successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/l3/multiarea/isid/{isid_source}/type/{type}/direction/{direction}':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/type'
      - $ref: '#/components/parameters/direction'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS L3 multi-area redistribution.
      description: >
        This operation updates settings of an ISIS L3 multi-area redistribution
        for the specified

        ISID, redistribution type and direction. This is available only on
        multi-area devices.
      operationId: updateIsisL3MultiAreaRedistribution
      requestBody:
        description: The IsisL3MultiAreaRedistUpdateObject object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL3MultiAreaRedistUpdateObject'
      responses:
        '204':
          description: ISIS L3 multi-area redistribution settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Delete ISIS L3 multi-area redistribution.
      description: >
        Delete ISIS L3 multi-area redistribution based on redistribute type on
        the specified ISID.

        This is available only on multi-area devices.
      operationId: deleteIsisL3MultiAreaRedistribution
      responses:
        '204':
          description: ISIS L3 multi-area redistribution successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/l3/multiarea/isid/{isid_source}/type/{type}/direction/{direction}/:apply':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/type'
      - $ref: '#/components/parameters/direction'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS L3 multi-area redistribution per ISID.
      description: >
        This operation is used to apply per ISID the specified type L3
        multi-area redistribution

        on direction. This is available only on multi-area devices.
      operationId: applyIsisL3MultiAreaRedistPerIsid
      responses:
        '204':
          description: ISIS L3 multi-area redistribution applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/l3:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L3 redistribution.
      description: >
        This operation retrieves L3 IPv4/IPv6 redistribution configuration for
        each

        type of redistribution.
      operationId: getIsisL3Redistribution
      responses:
        '200':
          description: The IsisL3Redist object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisL3Redist'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/l3/isid/{isid_source}/address-type/{address_type}':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/address_type'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L3 redistribution per ISID.
      description: >
        This operation retrieves L3 redistribution configuration for specified
        IPv4/IPv6 and ISID.
      operationId: getIsisL3RedistributionPerIsidAndAddress
      responses:
        '200':
          description: The IsisL3RedistCreateObject object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisL3RedistCreateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Create an ISIS L3 redistribution.
      description: >
        This operation identifies IPv4/IPv6 routes on the local switch to be
        announced into the SPBM network. 

        The enable attribute is needed for enabling the redistribution.

        Optionally, a route policy can be specified to filter redistributed
        routes or configure subnets 

        which indicates that all the subnets which need to be advertised
        individually.
      operationId: createIsisL3Redistribution
      requestBody:
        description: The IsisL3RedistCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL3RedistCreateObject'
      responses:
        '204':
          description: ISIS L3 redistribution successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/l3/isid/{isid_source}/address-type/{address_type}/protocol/{protocol}':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/protocol1'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS L3 redistribution attributes.
      description: >
        This operation updates settings of an ISIS L3 IPv4/IPv6 redistribution
        for the specified

        ISID.
      operationId: updateIsisL3Redistribution
      requestBody:
        description: The IsisL3RedistUpdateObject object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL3RedistUpdateObject'
      responses:
        '204':
          description: ISIS L3 redistribution settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Delete ISIS L3 redistribution.
      description: >
        Delete ISIS L3 redistribution based on protocol type on the specified
        ISID.
      operationId: deleteIsisL3Redistribution
      responses:
        '204':
          description: ISIS L3 redistribution successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/l3/isid/{isid_source}/address-type/{address_type}/:apply':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/address_type'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS L3 redistribution on specified ISID.
      description: >
        This operation is used to apply IPv4 or IPv6 routes based on the address
        type, learned from other protocols, announced

        into the SPBM network.
      operationId: applyIsisL3RedistPerIsid
      responses:
        '204':
          description: ISIS L3 redistribution applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/l3/isid/{isid_source}/address-type/{address_type}/protocol/{protocol}/:apply':
    parameters:
      - $ref: '#/components/parameters/isid_source'
      - $ref: '#/components/parameters/address_type'
      - $ref: '#/components/parameters/protocol1'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS L3 redistribution on ISID and protocol.
      description: >
        This operation is used to apply IPv4 or IPv6 routes based on the address
        type, learned from specified protocol,

        into the SPBM network.
      operationId: applyIsisL3RedistPerIsidAndProtocol
      responses:
        '204':
          description: ISIS L3 redistribution applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/multiarea/static-isid:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS static ISID list redistribution.
      description: >
        This operation retrieves multi-area static ISID routed multicast
        redistribution configuration.

        This is available only on multi-area devices.
      operationId: getIsisStaticIsidRedistribution
      parameters: []
      responses:
        '200':
          description: The IsisStaticIsidRedist object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisStaticIsidRedist'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Create an ISIS static-isid redistribution.
      description: >
        This operation configures a multi-area SPBM IPv4 static ISID list to
        redistribute on the switch. 

        The enable attribute is needed for enabling the redistribution.

        Optionally, a route policy can be specified to filter redistributed
        routes.

        If the direction is not specified in the payload, the redistribution 

        will be created in both directions. This operation is available only on
        multi-area devices.
      operationId: createIsisStaticIsidRedistribution
      parameters: []
      requestBody:
        description: The IsisStaticIsidRedistCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisStaticIsidRedistCreateObject'
      responses:
        '204':
          description: ISIS static ISID redistribution successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/redistribute/multiarea/static-isid/direction/{direction}':
    parameters:
      - $ref: '#/components/parameters/direction'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS static ISID redistribution attributes.
      description: >
        This operation updates settings of an ISIS multi-area static ISID routed
        multicast for the specified direction.

        This is available only on multi-area devices.
      operationId: updateIsisStaticIsidRedistribution
      requestBody:
        description: The IsisStaticIsidRedistUpdateObject object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisStaticIsidRedistUpdateObject'
      responses:
        '204':
          description: ISIS static ISID redistribution settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Delete ISIS static ISID list redistribution.
      description: >
        Delete ISIS multi-area static ISID list redistribution based on
        direction.

        This is available only on multi-area devices.
      operationId: deleteIsisStaticIsidRedistribution
      responses:
        '204':
          description: ISIS static ISID redistribution successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/spbm/redistribute/multiarea/static-isid/:apply':
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Apply ISIS static ISID redistribution.
      description: >
        This operation is used to apply multi-area static ISID routed multicast
        redistribution.

        This type of redistribution will always ve applied to both directions.
        This operation 

        is available only on multi-area devices.
      operationId: applyIsisStaticIsidRedist
      parameters: []
      responses:
        '204':
          description: ISIS static ISID redistribution applied succesfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/redistribute/multiarea/dvr:
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS Dvr redistribution.
      description: >
        This operation retrieves ISIS multi-area distributed virtual routing
        redistribution configuration.

        This is available only on multi-area devices.
      operationId: getIsisDvrRedistribution
      parameters: []
      responses:
        '200':
          description: The IsisDvrBbRedist object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisDvrBbRedist'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Update ISIS Dvr redistribution attributes.
      description: >
        This operation updates state of an ISIS multi-area distributed virtual
        routing redistribution configuration.

        This is available only on multi-area devices.
      operationId: updateIsisDvrRedistribution
      requestBody:
        description: The IsisDvrBbRedist object to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisDvrBbRedist'
      responses:
        '204':
          description: ISIS Dvr redistribution settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/spbm/l2/multiarea/isid-list:
    post:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Create an ISIS L2 ISID list.
      description: |
        This operation creates an ISIS L2 ISID list and is available
        only on multi-area devices.
      operationId: createIsisL2IsidList
      parameters: []
      requestBody:
        description: The IsisL2IsidListCreateObject object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisL2IsidListCreateObject'
      responses:
        '204':
          description: L2 ISID list successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Get ISIS L2 ISID lists
      description: >
        This operation retrieves ISIS L2 ISID lists name and the ISID ids in
        each list.

        This is available only on multi-area devices.
      operationId: getIsisL2IsidLists
      responses:
        '200':
          description: The IsisL2IsidListCreateObject object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IsisL2IsidListCreateObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/multiarea/isid-list/{isid_list}':
    parameters:
      - $ref: '#/components/parameters/isid_list'
    delete:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Delete ISIS L2 ISID list.
      description: |
        Delete ISIS ISID list. This operation is available only on
        multi-area devices.
      operationId: deleteIsisL2IsidList
      responses:
        '204':
          description: ISIS L2 ISID list successfully deleted.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/spbm/l2/multiarea/isid-list/{isid_list}/isids':
    parameters:
      - $ref: '#/components/parameters/isid_list'
    put:
      x-nos: fabric-engine
      tags:
        - SPBM Redistribute Management
      summary: Replace ISID ids in the L2 ISID list.
      description: |
        This operation updates ISID ids in the specified L2 ISID list and 
        is available only on multi-area devices.
      operationId: updateIsisL2IsidList
      requestBody:
        description: Update ISID ids in the L2 ISID list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IsidNonObject'
      responses:
        '204':
          description: ISIS L2 ISID list successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/stacking:
    get:
      x-nos: switch-engine
      tags:
        - Stacking Management
      summary: Get the stacking settings
      description: |
        This operation retrieves the stacking related settings for the device.
      operationId: getStackingConfiguration
      parameters: []
      responses:
        '200':
          description: The stacking settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackingSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: switch-engine
      tags:
        - Stacking Management
      summary: Update the stacking settings
      description: |
        This operation updates the stacking related settings on the device.
      operationId: updateStackingConfiguration
      parameters: []
      requestBody:
        description: A StackingSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackingSettings'
      responses:
        '204':
          description: Stacking setttings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/stacking:
    get:
      x-nos: switch-engine
      tags:
        - Stacking Management
      summary: Get the stacking operational state
      description: >
        This operation retrieves the stacking related operational state for the
        device.
      operationId: getStackingState
      parameters: []
      responses:
        '200':
          description: The stacking state for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackingState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/operation/stacking/easy-setup:
    post:
      x-nos: switch-engine
      tags:
        - Stacking Management
      summary: Stacking easy setup
      description: |
        This operation initiates the stacking easy setup automation.
      operationId: executeStackingEasySetup
      parameters: []
      responses:
        '204':
          description: Initiates the stacking easy setup automation successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/storm-control/ports:
    get:
      tags:
        - Storm Control Management
      summary: Get storm control settings for ports.
      description: |
        This operation retrieves storm control settings for every port 
        on the device, for unicast, broadcast and multicast traffic.
      operationId: getPortsStormControlSettings
      responses:
        '200':
          description: The storm-control settings for each storm control type.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortsStormControlSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/storm-control/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    put:
      tags:
        - Storm Control Management
      summary: Replace storm control settings for a port.
      description: |
        This operation replaces the storm control settings for the specified
        port on the device, for unicast, broadcast and multicast traffic.
      operationId: replacePortStormControlSettings
      requestBody:
        description: The PortStormControlSettings object to replace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortStormControlSettings'
      responses:
        '204':
          description: Storm-control settings successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/stp:
    get:
      tags:
        - STP Management
      summary: Get detailed STP information.
      description: |
        This operation retrieves the list of STP domains with their settings.
        Each list entry consists of information of each STP domain along with
        ports settings and VLAN port membership per STP domain.
        For Fabric Engine, this endpoint also returns info about management
        VLAN.
      operationId: getStpSettings
      parameters: []
      responses:
        '200':
          description: List of all STPs configured on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StpComponentGet'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - STP Management
      summary: Create a STP instance (domain).
      description: |
        This operation creates a STP instance (domain) on the device
        with the specified name.
      operationId: createStp
      parameters: []
      requestBody:
        description: The StpInstance object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StpInstanceSettingsCreate'
      responses:
        '204':
          description: STP successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/stp/{stp_name}':
    parameters:
      - $ref: '#/components/parameters/stp_name'
    patch:
      tags:
        - STP Management
      summary: Update a STP instance by name.
      description: |
        Update the configuration for the STP instance specified by its name.
      operationId: updateStpByName
      requestBody:
        description: The StpInstance of the STP to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StpInstanceSettings'
      responses:
        '204':
          description: STP settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - STP Management
      summary: Delete a STP instance by name.
      description: This operation deletes the STP instance specified by its name.
      operationId: deleteStpByName
      responses:
        '204':
          description: STP deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/stp/{stp_name}/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/stp_name'
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - STP Management
      summary: 'Get list of ports in a VLAN, part of a STP domain.'
      description: |
        This operation retrieves the list of ports in a specified VLAN part of 
        a STP domain on the device. This operation is Switch Engine specific.
      operationId: getVlanStpDomainPorts
      responses:
        '200':
          description: Port list of the specified VLAN in the STP domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortStpVlans'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - STP Management
      summary: Replace a port list from a STP domain
      description: >
        This operation replaces the port list member of a VLAN, part of a STP
        domain. 

        This operation is Switch Engine specific.
      operationId: replacePortsVlanStpDomain
      requestBody:
        description: 'The port list to replace, ports part of a STP domain'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortList'
      responses:
        '204':
          description: Port list was successfully replaced.
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/stp/{stp_name}/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/stp_name'
      - $ref: '#/components/parameters/port'
    patch:
      tags:
        - STP Management
      summary: Update port STP settings from a STP domain
      description: |
        This operation updates the settings for the PortStpSettings object 
        for a single port which is specified in the path by its port number 
        and the STP domain.
      operationId: updatePortStpDomainSettings
      requestBody:
        description: The port STP settings to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortStpSettings'
      responses:
        '204':
          description: STP settings successfully updated.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/stp/ports:
    get:
      tags:
        - STP Management
      summary: Get list of STP port state.
      description: |
        This operation retrieves the list of all STP ports with their state.
      operationId: getStpPortStateList
      parameters: []
      responses:
        '200':
          description: List of all STP ports state on the device.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StpPortStateListComponent'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/stp/{stp_name}/ports/{port}':
    parameters:
      - $ref: '#/components/parameters/stp_name'
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - STP Management
      summary: Get STP port state
      description: |
        This operation retrieves information about a STP port's state.
      operationId: getStpPortState
      parameters: []
      responses:
        '200':
          description: The STP port state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StpPortState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/syslog:
    get:
      tags:
        - Syslog Management
      summary: Get the syslog settings for the device
      description: |
        Get the syslog settings for the device including the
        list of servers.
      operationId: getSyslogConfiguration
      parameters: []
      responses:
        '200':
          description: The syslog settings including a list of servers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - Syslog Management
      summary: Update the global syslog configuration
      description: |
        This operation replaces the syslog settings for the device.
        The request body consists of a SyslogSettingsUpdate object. 
        This operation is applicable to Fabrice Engine (VOSS) only.
      operationId: updateSyslogConfiguration
      parameters: []
      requestBody:
        description: A SyslogSettingsUpdate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogSettingsUpdate'
      responses:
        '204':
          description: The syslog settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/syslog/servers:
    put:
      tags:
        - Syslog Management
      summary: Replace the syslog servers configuration
      description: |
        This operation replaces the syslog servers list for the device.
        The request body consists of a SyslogServerUpdate object which 
        contains a list of servers to replace the existing one.
      operationId: replaceSyslogServers
      parameters: []
      requestBody:
        description: A SyslogServerUpdate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogServerUpdate'
      responses:
        '204':
          description: The syslog servers replaced successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/system-services:
    get:
      tags:
        - System Services Management
      summary: Get the system services settings
      description: >
        This operation retrieves the system services related settings for the
        device.
      operationId: getSystemServicesConfiguration
      parameters: []
      responses:
        '200':
          description: The device's system services settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemServicesSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - System Services Management
      summary: Update the system services configuration
      description: >
        This operation updates the system services related settings on the
        device.
      operationId: updateSystemServicesConfiguration
      parameters: []
      requestBody:
        description: A SystemServicesSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemServicesSettings'
      responses:
        '204':
          description: System services configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/thread/{if_name}/router/routes':
    parameters:
      - $ref: '#/components/parameters/if_name'
    get:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Get Thread router table.
      description: Retrieves the router table for a Thread router/leader.
      operationId: getRouterTable
      responses:
        '200':
          description: The list of thread routes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThreadRouterTableEntry'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/thread/{if_name}/commissioner/joiners':
    parameters:
      - $ref: '#/components/parameters/if_name'
    get:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Get Thread Commissioner's joiner table.
      description: Retrieves the joiner table for the Thread Commissioner.
      operationId: getJoinerTable
      responses:
        '200':
          description: The list of joiners.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThreadCommissionerJoinerTableEntry'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/thread/{if_name}/nat64/translatormappings':
    parameters:
      - $ref: '#/components/parameters/if_name'
    get:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Get Thread NAT64's translator mappings.
      description: Retrieves the translator mappings for the NAT64 service.
      operationId: getNat64TranslatorMappings
      responses:
        '200':
          description: >-
            The list of translator mappings along with protocol counters for
            each mapping session.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nat64TranslatorMappingTableEntry'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/thread/{if_name}/commissioner/:start':
    parameters:
      - $ref: '#/components/parameters/if_name'
    post:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Start the Thread Commissioner with the whitelist.
      description: Start the Commissioner
      operationId: startThreadCommissioner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartThreadCommissionerRequest'
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/thread/{if_name}/commissioner/:stop':
    parameters:
      - $ref: '#/components/parameters/if_name'
    post:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Stop the Thread Commissioner.
      description: Stop the Commissioner
      operationId: stopThreadCommissioner
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/operation/thread/{if_name}/router/counters/:reset':
    parameters:
      - $ref: '#/components/parameters/if_name'
    post:
      x-nos: wireless
      tags:
        - ThreadManager
      summary: Reset all counters. (mac / mle / ip / br)
      description: Reset all counters. (mac / mle / ip / br)
      operationId: resetRouterCounters
      responses:
        '200':
          description: OK
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/timezone:
    get:
      tags:
        - Timezone Management
      summary: Get the time zone settings
      description: |
        This operation retrieves the time zone related settings for the device.
      operationId: getTimezoneConfiguration
      parameters: []
      responses:
        '200':
          description: The time zone settings for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - Timezone Management
      summary: Replace the time zone configuration
      description: |
        This operation replaces the time zone related settings for the device.
      operationId: replaceTimezoneConfiguration
      parameters: []
      requestBody:
        description: A TimezoneSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimezoneSettings'
      responses:
        '204':
          description: The time zone settings updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/accounts:
    get:
      tags:
        - User Account Management
      summary: Get the accounts information
      description: |
        Get the account information for all user accounts.
      operationId: getUsernameList
      parameters: []
      responses:
        '200':
          description: The list of user accounts data for the device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameList'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - User Account Management
      summary: Add a user account
      description: >
        This operation adds a user account to the list of accounts for the
        device.
      operationId: addUserAccount
      parameters: []
      requestBody:
        description: A valid UserAccount object consisting of AccountType and User objects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
      responses:
        '204':
          description: User account added successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/accounts/{username}':
    parameters:
      - $ref: '#/components/parameters/username'
    delete:
      tags:
        - User Account Management
      summary: Remove a user account
      description: |
        This operation removes the user account specified in the path by its
        username.
      operationId: deleteAccountByName
      responses:
        '204':
          description: User account deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      tags:
        - User Account Management
      summary: Update a user account
      description: >
        This operation updates the user account specified in the path by it's
        user name.  Note, changing the user name is

        not permitted by this operation.
      operationId: updateAccountByName
      requestBody:
        description: >-
          A valid UserAccountAttributes object consisting of AccountType and
          Secret objects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountAttributes'
      responses:
        '204':
          description: User account updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/vlan:
    get:
      tags:
        - VLAN Management
      summary: Get list of VLAN's
      description: >
        This operation retrieves a list VLAN's created on the device across all
        VR's.

        The information provided for each VLAN consists of top level
        configuration information.

        Since the list applies to all VR's, the VR name is included for each
        VLAN.
      operationId: getVlanSummaryConfiguration
      parameters: []
      responses:
        '200':
          description: List of all VLAN's and their top level configuration information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VlanInterfaceGetSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - VLAN Management
      summary: Get VLAN ID settings
      description: |
        This operation retrieves settings for the specified VLAN ID.
      operationId: getVlanIdConfiguration
      parameters: []
      responses:
        '200':
          description: The VlanInterfaceGetSettingsPerId object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VlanInterfaceGetSettingsPerId'
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update VLAN config
      description: >
        This operation replaces the configuration for a VLAN specified by its ID
        in the path.

        The request body consists of the configuration information to be updated
        for the VLAN.

        The IP address list can not be modified through this operation, the
        address POST and

        DELETE operations should be used for this purpose.
      tags:
        - VLAN Management
      operationId: updateVlanById
      requestBody:
        description: The VlanInterfaceUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VlanInterfaceUpdateSettings'
      responses:
        '204':
          description: VLAN interface configuration updated successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vlan/{vlan_id}/address':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    put:
      tags:
        - VLAN Management
      summary: Configure or replace IP address list
      description: |
        This operation configures or replaces a previously configured
        IP address list on the VLAN. The first IPv4 address in the
        list is the primary IPv4 address and any additional IPv4
        addresses are secondary addresses. The list may contain either
        IPv4 or IPv6 addresses or a combination of both.
      operationId: replaceVlanIpAddressList
      requestBody:
        description: The list of IP addresses to configure on the VLAN
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VlanIpAddressList'
      responses:
        '204':
          description: VLAN IP address list successfully configured.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/vlan:
    get:
      tags:
        - VLAN Management
      summary: Get the state information for all VLANs
      description: |
        This operation retrieves the state information for all VLANs 
        on the device.
      operationId: getVlanInterfaceState
      responses:
        '200':
          description: The VlanInterfaceState object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VlanInterfaceState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - VLAN Management
      summary: Get the state information for VLAN ID
      description: >
        This operation retrieves the state information for the specified VLAN
        ID 

        on the device.
      operationId: getVlanInterfaceStatePerVlan
      responses:
        '200':
          description: The VlanInterfaceStatePerVlanId object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VlanInterfaceStatePerVlanId'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/vlan/ports:
    get:
      tags:
        - VLAN Management
      summary: Get list of ports VLAN settings
      description: |
        This operation retrieves the list of ports VLAN settings on the device.
        Each object returned is indexed by it's port name as defined in the
        EthernetInterface object.
      operationId: getPortVlanList
      parameters: []
      responses:
        '200':
          description: List of all PortVlanSettings defined on the device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortVlanReadSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vlan/port/{port}':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - VLAN Management
      summary: Get port VLAN settings for a port
      description: |
        This operation retrieves the PortVlanSettings object for a single port
        which is specified in the path by its port number.
      operationId: getPortVlanByPort
      responses:
        '200':
          description: The port VLAN settings for the specified port
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortVlanWriteSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      summary: Replace port VLAN settings
      description: >
        This operation replaces the port VLAN settings for the port specified in
        the path.

        The request body consists of a portVlanSettings object where the
        allowedVlan list

        will replace the existing allowedVlan list for the port.  If the port
        type is access, the

        allowVlan list must be empty.
      tags:
        - VLAN Management
      operationId: replacePortVlanByPort
      requestBody:
        description: The PortVlanSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortVlanWriteSettings'
      responses:
        '204':
          description: Port VLAN settings successfully replaced
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vlan/port/{port}/allowed-vlan':
    parameters:
      - $ref: '#/components/parameters/port'
    get:
      tags:
        - VLAN Management
      summary: Get allowed VLAN's for a port
      description: |
        This operation retrieves the list of allowed VLAN's for the port
        specified in the path by its port number.
      operationId: getAllowedVlansByPort
      responses:
        '200':
          description: The list of allowed VLAN's for the specified port
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortVlanIdObject'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - VLAN Management
      summary: Add a VLAN to the port
      description: >
        This operation adds the VLAN, specified in the request body, to the
        port's allowedVlans list.

        The list represents the VLANs which the port is a member of tagged.

        This operation is only allowed if the port type is trunk.
      operationId: addVlanToPort
      requestBody:
        description: A PortVlanIdObject specifying which VLAN the port is added to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortVlanIdObject'
      responses:
        '204':
          description: VLAN successfully added to the port's allowedVlans list
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vlan/port/{port}/allowed-vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/port'
      - $ref: '#/components/parameters/vlan_id'
    delete:
      tags:
        - VLAN Management
      summary: Delete a VLAN from the port
      description: >
        This operation removes the VLAN, specified in the path by its ID, from
        the port's allowedVlans list.
      operationId: deleteVlanFromPort
      responses:
        '204':
          description: VLAN successfully deleted from the port's allowedVlans list
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/vrf:
    get:
      tags:
        - VRF Management
      summary: Get the list of VRFs
      description: |
        This operation retrieves the list of VRF's configured on the device.
        Each list entry consists of identifying information for each VRF
        and the list of VLAN ID`s configured on the VRF.
      operationId: getVrfList
      parameters: []
      responses:
        '200':
          description: List of all VRF's configured on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfListWithVlanSummary'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      tags:
        - VRF Management
      summary: Create the VRF
      description: This operation creates a VRF on the device with the specified name.
      operationId: createVrf
      parameters: []
      requestBody:
        description: The VrfCreateObject object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfCreateObject'
      responses:
        '204':
          description: VRF successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrf/{vr_name}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    get:
      tags:
        - VRF Management
      summary: Get the VRF by name
      description: |
        This operation retieves the information for the VRF specified by name.
        The response consists of the VRF identifying information and the list of
        VLAN ID's configured on the VRF.
      operationId: getVrfByName
      responses:
        '200':
          description: The VrfWithVlanSummary object for the specified VRF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrfWithVlanSummary'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - VRF Management
      summary: Delete VRF by name
      description: This operation deletes the VRF specified by its name.
      operationId: deleteVrfByName
      responses:
        '204':
          description: VRF deleted successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      x-nos: fabric-engine
      tags:
        - VRF Management
      summary: Update VRF by name
      description: |
        Update the configuration for the VRF specified by its name.
        Currently, ipRoutingEnabled (Fabric Engine only) is supported as a
        writeable parameter.
      operationId: updateVrfByName
      requestBody:
        description: The VrfWriteableObject of the VRF to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrfWriteableObject'
      responses:
        '204':
          description: VRF settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrf/{vr_name}/vlan':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    post:
      tags:
        - VLAN Management
      summary: Create the VLAN
      description: |
        This operation creates a VLAN on the specified VRF.
        The request body contains a VlanCreateObject consisting allOf
        the VLAN ID and an optional VLAN name.
      operationId: createVlanByVlanIdAndVrfName
      requestBody:
        description: The VlanCreateObject to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VlanCreateObject'
      responses:
        '204':
          description: VLAN successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrf/{vr_name}/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/vlan_id'
    delete:
      tags:
        - VLAN Management
      summary: Delete the VLAN
      description: |
        This operation deletes the VLAN from the specified VRF.
        The VRF name and VLAN ID must be provided as path parameters.
      operationId: deleteVlanByVlanIdAndVrfName
      responses:
        '204':
          description: VLAN interface successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrf/{vr_name}/route':
    parameters:
      - $ref: '#/components/parameters/vr_name'
    post:
      tags:
        - VRF Management
      summary: Create a static route
      description: |
        This operation creates a static route on the specified VRF.
        The request body contains a IpStaticRoute object consisting of
        the route prefix, mask, and next hop as well as preference, cost, 
        and other information.
      operationId: createIpStaticRouteOnVrf
      requestBody:
        description: The IpStaticRoute object describing the static route to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpStaticRoute'
      responses:
        '204':
          description: IP route successfully created
        default:
          $ref: '#/components/responses/DefaultResponse'
    get:
      tags:
        - VRF Management
      summary: Get the list of static routes
      description: >
        This operation retrieves the list of static routes for the VRF specified
        in the path.
      operationId: getStaticRouteListByVr
      responses:
        '200':
          description: The IpStaticRouteList object for the specified VRF
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpStaticRouteList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrf/{vr_name}/route/{prefix_type}/{prefix}/{prefix_len}/{next_hop}':
    parameters:
      - $ref: '#/components/parameters/vr_name'
      - $ref: '#/components/parameters/prefix_type'
      - $ref: '#/components/parameters/prefix'
      - $ref: '#/components/parameters/prefix_len'
      - $ref: '#/components/parameters/next_hop'
    patch:
      x-nos: fabric-engine
      tags:
        - VRF Management
      summary: Update static route
      description: |
        This operation allows the modification of select properties
        associated with a previously configured static route.  Currently
        this consists of changing the admin state of the route
        (Fabric Engine only).
      operationId: updateIpStaticRouteOnVrf
      requestBody:
        description: The IpStaticRouteUpdateSettings to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpStaticRouteUpdateSettings'
      responses:
        '204':
          description: VRF settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - VRF Management
      summary: Delete the static route
      description: |
        This operation deletes a static route from the specified VRF.
        The VRF name and route attributes including the next hop
        must be provided as path parameters.
      operationId: deleteIpStaticRouteOnVrf
      responses:
        '204':
          description: Static route successfully deleted
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/route:
    get:
      tags:
        - VRF Management
      summary: Get complete list of static routes
      description: |
        This operation retrieves the list of configured static routes
        across all of the VRF's on the device
      operationId: getCompleteStaticRouteList
      parameters: []
      responses:
        '200':
          description: List of all static routes configured on the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticRouteListAllVrs'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/route-protection:
    get:
      x-nos: switch-engine
      tags:
        - VRF Management
      summary: Get the list of route protected gateways
      description: |
        This operation retrieves the list of gateways for each VR
        which have been configured as part of protected static
        routes. IP Route protection only applies to Switch Engine.
      operationId: getProtectedGatewayListByVr
      responses:
        '200':
          description: The IpRouteProtectionList object for each VR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRouteProtectionVrList'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/route:
    parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/count'
      - $ref: '#/components/parameters/ip_type'
      - $ref: '#/components/parameters/route_vr'
    get:
      tags:
        - VRF Management
      summary: Get dynamically learned routes
      description: >
        This operation retrieves the dynamically learned routes from the device.

        Query parameter start is optional and states the starting index for
        retrieval.

        Query parameter count is optional and states the number of items to be
        retrieved.

        Query parameter vr_name is optional, allows filtering the items based on
        the VRF name.

        Query parameter ip_type is optional, allows filtering the items based of
        IP address 

        type of the route.
      operationId: getRoutesList
      responses:
        '200':
          description: The list of routes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRouteStateListAllVrs'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/route/summary:
    get:
      tags:
        - VRF Management
      summary: Get the number of all routes for all VRs
      description: |
        This operation retrieves the total number of all routes for 
        all virtual router instances in the routing table and the total 
        number of each type of route.
      operationId: getRoutesSummaryAllVrs
      responses:
        '200':
          description: An array with the IpRouteSummaryStatePerVr object for the each VR
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IpRouteSummaryStatePerVr'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/configuration/vrrp:
    get:
      tags:
        - VRRP Management
      summary: Get VRRP configuration
      description: |
        This operation retrieves the VRRP configuration information for each
        VLAN configured for VRRP on the device.
      operationId: getVrrpConfigurationAllVlans
      responses:
        '200':
          description: The VRRP settings for each VLAN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrrpSettingsAllVlans'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrrp/vlan/{vlan_id}/vr':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    post:
      tags:
        - VRRP Management
      summary: Create VRRP instance
      description: |
        This operation creates a VRRP instance on the VLAN.
      operationId: createVrrpInstanceOnVlan
      requestBody:
        description: A VrrpVirtualRouterSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrrpVirtualRouterSettings'
      responses:
        '204':
          description: VRRP virtual router instance created on VLAN successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrrp/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - VRRP Management
      summary: Get VRRP configuration for the specified VLAN ID
      description: >
        This operation retrieves the VRRP configuration information for the
        specified VLAN ID.
      operationId: getVrrpConfigurationPerVlan
      responses:
        '200':
          description: The VRRP settings for specified VLAN ID.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VrrpVirtualRouterSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrrp/vlan/{vlan_id}/vr/{vr_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
      - $ref: '#/components/parameters/vr_id'
    get:
      tags:
        - VRRP Management
      summary: Get VRRP configuration for VLAN ID and VR instance
      description: >
        This operation retrieves the VRRP settings for the specified VLAN ID and
        VR instance.
      operationId: getVrrpConfigurationPerVlanAndVr
      responses:
        '200':
          description: The VRRP settings for specified VLAN ID and VR instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrrpVirtualRouterAllSettings'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      tags:
        - VRRP Management
      summary: Delete VRRP instance
      description: This operation deletes the specified VRRP instance from the VLAN.
      operationId: deleteVrrpInstanceFromVlan
      responses:
        '204':
          description: VRRP instance deleted from the vlan successfully
        default:
          $ref: '#/components/responses/DefaultResponse'
    patch:
      summary: Update VRRP virtual router
      description: >
        This operation updates the VRRP settings on the specified VLAN for the
        specified

        virtual router.  The request body consists of a
        VrrpVirtualRouterSettings object.
      tags:
        - VRRP Management
      operationId: updateVrrpInstanceOnVlan
      requestBody:
        description: The VrrpVirtualRouterUpdateSettings object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrrpVirtualRouterUpdateSettings'
      responses:
        '204':
          description: VRRP virtual router settings successfully updated
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/configuration/vrrp/vlan/{vlan_id}/vr/{vr_id}/virtual-ip-addresses':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
      - $ref: '#/components/parameters/vr_id'
    put:
      tags:
        - VRRP Management
      summary: Replace the VRRP virtual IP address list
      description: |
        This operation replaces the VRRP virtual IP address list
        on a virtual router.
      operationId: replaceVrrpVirtualIpAddressList
      requestBody:
        description: The list of virtual IP addresses to configure on the virtual router
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VrrpVIPListObject'
      responses:
        '204':
          description: VRRP virtual IP addresses successfully configured.
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/state/vrrp:
    get:
      tags:
        - VRRP Management
      summary: Get VRRP state information for VRRP instances.
      description: |
        This operation retrieves the state information for all VRRP instances 
        on all VLANs.
      operationId: getVlansVrrpListState
      responses:
        '200':
          description: The VlansVrrpListState object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VlansVrrpListState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/vrrp/vlan/{vlan_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
    get:
      tags:
        - VRRP Management
      summary: Get VRRP state information for VLAN ID.
      description: |
        This operation retrieves the state information for all VRRP instances 
        on the specified VLAN ID.
      operationId: getVlanVrrpListState
      responses:
        '200':
          description: The VrrpState object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VrrpState'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/v0/state/vrrp/vlan/{vlan_id}/vr/{vr_id}':
    parameters:
      - $ref: '#/components/parameters/vlan_id'
      - $ref: '#/components/parameters/vr_id'
    get:
      tags:
        - VRRP Management
      summary: Get VRRP instance state information for VLAN ID.
      description: |
        This operation retrieves the state information for a VRRP instance
        on the specified VLAN ID.
      operationId: getVlanVrrpInstanceState
      responses:
        '200':
          description: The VrrpStatePerVrId object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VrrpStatePerVrId'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/core-file:
    get:
      tags:
        - CoreFileEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getCoreFileEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreFileEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - CoreFileEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateCoreFileEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreFileEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report events when a core file is created.
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CoreFileCreatedEventCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/dhcp-snoop:
    get:
      tags:
        - DhcpSnoopEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getDhcpSnoopEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpSnoopEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - DhcpSnoopEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateDhcpSnoopEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpSnoopEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the DhcpSnoop metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DhcpSnoopStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/interface:
    get:
      tags:
        - EthernetInterfaceStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getEthernetInterfaceStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetInterfaceStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - EthernetInterfaceStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateEthernetInterfaceStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EthernetInterfaceStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all platform metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: >-
                        #/components/schemas/EthernetInterfaceStatsGroupCallbackElement
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/iot:
    get:
      tags:
        - IotStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getIotStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - IotStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateIotStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreadStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all Thread metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IotStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/iot:
    get:
      tags:
        - IotEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getIotEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - IotEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateIotEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreadEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the Thread metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IotStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/isis:
    get:
      tags:
        - IsisEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getIsisEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - IsisEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateIsisEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for ISIS
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IsisAdjacencyStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/isis:
    get:
      tags:
        - IsisStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getIsisStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - IsisStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateIsisStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all ISIS metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IsisStatsGroupCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/isis/interface:
    get:
      tags:
        - IsisStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getIsisIntStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsisIntStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - IsisStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateIsisIntStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsisIntStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all ISIS interface metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IsisIntStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/lag:
    get:
      tags:
        - LagEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getLagEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - LagEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateLagEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for LAG
              description: >
                Callback payload is an array of report elements. Each report
                element has the same timestamp and set of tags. When telegraf
                needs to send a set of report elements with different timestamps
                and/or different tags, it uses one callback POST request and
                include an array of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LagMembersStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/lldp:
    get:
      tags:
        - LldpStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getLldpStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - LldpStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateLldpStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LldpStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all LLDP metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LldpStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/lldp/ports:
    get:
      tags:
        - LldpStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getLldpPortStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpPortStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - LldpStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateLldpPortStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LldpPortStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all LLDP metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LldpPortStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/lldp:
    get:
      tags:
        - LldpEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getLldpEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LldpEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - LldpEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateLldpEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LldpEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the lldp metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/LldpNeighborStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/node-alias:
    get:
      tags:
        - NodeAliasEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getNodeAliasEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeAliasEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - NodeAliasEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateNodeAliasEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeAliasEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report events when a core file is created.
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: >-
                        #/components/schemas/NodeAliasUpdatedEventCallbackElement
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/ospf:
    get:
      tags:
        - OspfEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getOspfEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OspfEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - OspfEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateOspfEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OspfEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the ospf metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/OspfStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/configuration:
    put:
      tags:
        - ConfigurationManager
      summary: Set global subscription configuration
      description: Set global subscription configuration.
      operationId: setGlobalSubscriptionConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionConfigurationRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/platform:
    get:
      tags:
        - PlatformStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getPlatformStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - PlatformStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updatePlatformStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all platform metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PlatformStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/platform:
    get:
      tags:
        - PlatformEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getPlatformEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - PlatformEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updatePlatformEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the platform metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PlatformStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/route-protection:
    get:
      tags:
        - RouteProtectionEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getRouteProtectionEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteProtectionEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - RouteProtectionEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateRouteProtectionEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteProtectionEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the Route Protection
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RouteProtectionEventCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/slpp:
    get:
      tags:
        - SlppEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getSlppEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlppEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - SlppEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateSlppEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlppEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the SLPP metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SlppStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/mlag:
    get:
      tags:
        - MlagEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getMlagEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlagEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - MlagEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateMlagEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MlagEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for SMLT
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/MlagPeerStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/stats/wireless:
    get:
      tags:
        - WirelessStatsManager
      summary: Get stats subscription
      description: Retrieve stats subscription parameters.
      operationId: getWirelessStatsSubscription
      parameters: []
      responses:
        '200':
          description: Stats subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WirelessStatsSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - WirelessStatsManager
      summary: Update stats subscription
      description: Enable stats subscription or change stats subscription parameters.
      operationId: updateWirelessStatsSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WirelessStatsSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        stats:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report stats for all Wireless metrics
              description: >-
                min/max/avg is calculated based on sampling period for duration
                of intervals.


                For example if sampling = 10 sec and interval = 6 (defaults),
                metrics is read from the system

                every 10 sec and min/max/avg is calculated every 6x10 sec from
                the last 6 samples.


                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters:
                - in: header
                  name: Authentication-Token
                  description: 'Access token, provided in the request body.'
                  schema:
                    type: string
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WirelessStatsCallbackElement'
              responses:
                '201':
                  description: Stats successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
  /v0/subscription/events/wireless:
    get:
      tags:
        - WirelessEventsManager
      summary: Get events subscription
      description: Retrieve events subscription parameters.
      operationId: getWirelessEventSubscription
      responses:
        '200':
          description: Events subscription parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WirelessEventSubscriptionRequest'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      tags:
        - WirelessEventsManager
      summary: Update events subscription
      description: Enable events subscription or change events subscription parameters.
      operationId: updateWirelessEventSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WirelessEventSubscriptionRequest'
      responses:
        '200':
          description: Successfully updated subscription
        default:
          $ref: '#/components/responses/DefaultResponse'
      callbacks:
        state:
          '{$request.body#/callbackUrl}':
            post:
              summary: Report state and events for the Wireless metrics
              description: >-
                Callback payload is an array of report elements.

                Each report element has the same timestamp and set of tags.

                When telegraf needs to send a set of report elements with
                different timestamps

                and/or different tags, it uses one callback POST request and
                include an array

                of report elements.
              parameters: []
              requestBody:
                description: ''
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WirelessStateCallbackElement'
              responses:
                '201':
                  description: Events successfully sent
                default:
                  $ref: '#/components/responses/DefaultResponse'
components:
  schemas:
    ErrorMessageElement:
      type: object
      properties:
        errorCode:
          type: number
        errorMessage:
          type: string
        resource:
          type: string
      example:
        errorCode: 404
        errorMessage: Port not found
        resource: '/configuration/port/2:1'
    ErrorList:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessageElement'
    AuthenticationProtocols:
      description: |
        The name of an authentication protocol. Note, CEP represents
        the convergence endpoint detection protocol.
      type: string
      enum:
        - MAC
        - DOT1X
        - WEB
        - CEP
    AuthenticationProtocolList:
      description: |
        A list of authentication protocols which may be used to specify
        the preference order for authentication. The implementation
        should ensure that each protocol appears only once in the list.
        The protocols are listed from most to least preferential. The
        ability to set the protocol order only applies to Switch Engine.
      type: array
      items:
        $ref: '#/components/schemas/AuthenticationProtocols'
      example:
        - DOT1X
        - MAC
        - WEB
        - CEP
    AuthenticationDeviceSettings:
      description: Authentication device level settings
      type: object
      properties:
        eapolFeatureEnabled:
          description: |
            The device level Extensible Authentication Protocol (EAPOL)
            administrative state.  This setting applies to Fabric Engine only.
          type: boolean
          default: false
        macAuthFeatureEnabled:
          description: >
            The device level administrative state for MAC based authentication.
            This setting applies to Switch Engine only.
          type: boolean
          default: false
        dot1xFeatureAuthEnabled:
          description: >
            The device level administrative state for 802.1x based
            authentication. This setting applies to Switch Engine only.
          type: boolean
          default: false
        webAuthFeatureEnabled:
          description: >
            The device level administrative state of the web based
            authentication protocol. This setting applies to Switch Engine only.
          type: boolean
          default: false
        policyFeatureEnabled:
          description: >
            The device level administrative state of the policy feature.  This
            settings applies

            to Switch Engine only.
          type: boolean
          default: false
          readOnly: true
        policyCepFeatureEnabled:
          description: >
            The device level administrative state of the policy Convergence
            Endpoint (CEP) feature.

            This settings applies to Switch Engine only.
          type: boolean
          default: false
          readOnly: true
        macListDefault:
          description: >
            A value of True indicates a default rule is configured for MAC
            authentication. This setting applies to Switch Engine only.
          type: boolean
          default: false
        macAuthOrder:
          description: >
            This setting determines the database order used for MAC
            authentication. This setting applies to Switch Engine only.
          type: string
          enum:
            - LOCAL
            - LOCAL_RADIUS
            - RADIUS
            - RADIUS_LOCAL
          default: RADIUS_LOCAL
        defaultVlan:
          description: >
            The ID of the VLAN used for address learning during authentication.

            Traffic is not forwarded on this VLAN.  For Fabric Engine the VLAN
            ID

            range is 0 to 4059.  For Switch Engine the VLAN ID range is 0 to
            4094. This setting applies to Switch Engine only.
          type: integer
          minimum: 0
          maximum: 4094
        autoNsiOffsetEnabled:
          description: >
            A value of True indicates that the I-SID value is automatically
            calculated

            from the offset and VLAN ID when it is not provided in a Radius
            response. This

            setting only applies to Fabric Engine.
          type: boolean
          default: false
        autoNsiOffset:
          description: >
            The value of the offset used to calculate the I-SID value when it is
            not provided

            in the Radius response. This setting only applies to Fabric Engine.
          type: integer
          format: int32
          minimum: 0
          maximum: 15995903
        radiusPwdFmt:
          description: >-
            This object controls the format of the RADIUS password attribute
            that is included in requests to the RADIUS server for authenticating
            non-EAP clients (MAC addresses). Switch Engine uses only MAC_ADDR.
          type: array
          items:
            type: string
            enum:
              - IP_ADDR
              - MAC_ADDR
              - PORT_NUMBER
              - PADDING
        passwordCase:
          description: Switch Engine allows both lower and upper case passwords.
          type: string
          enum:
            - LOWER
            - UPPER
          default: UPPER
        passwordSeparator:
          description: Switch Engine allows different separators.
          type: string
          enum:
            - COLON
            - HYPHEN
            - NONE
          default: NONE
        authProtocolOrder:
          $ref: '#/components/schemas/AuthenticationProtocolList'
        cepCdpVlan:
          description: >
            This value specifies the VLAN assignment for a client resulting from
            CDP authentication.

            A value of 0 indicates the VLAN is unset. This parameter is read
            only. Its value is

            configured through a policy endpoint for the role specified by the
            cepCdpRole shown below.

            This setting applies to Switch Engine only.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 4094
        cepCdpNsi:
          description: >
            This value specifies the NSI assignment for a client resulting from
            CDP authentication.

            A value of 0 indicates the NSI is unset. This parameter is read
            only. Its value is

            configured through a policy endpoint for the role specified by the
            cepCdpRole shown below.

            This setting applies to Switch Engine only.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 16777215
        cepLldpVlan:
          description: >
            This value specifies the VLAN assignment for a client resulting from
            LLDP authentication.

            A value of 0 indicates the VLAN is unset. This parameter is read
            only. Its value is

            configured through a policy endpoint for the role specified by the
            cepLldpRole shown below.

            This setting applies to Switch Engine only.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 4094
        cepLldpNsi:
          description: >
            This value specifies the NSI assignment for a client resulting from
            LLDP authentication.

            A value of 0 indicates the NSI is unset. This parameter is read
            only. Its value is

            configured through the policy endpoint for the role specified by the
            cepLldpRole shown below.

            This setting applies to Switch Engine only.
          type: integer
          readOnly: true
          minimum: 0
          maximum: 16777215
        cepCdpRole:
          description: >
            This setting specifies the policy role index used for CDP
            authentication. A value of 0 indicates

            the role is unset. A policy endpoint allows for configuration of the
            role settings.

            This setting applies to Switch Engine only.
          type: integer
          minimum: 0
          maximum: 63
        cepLldpRole:
          description: >
            This setting specifies the policy role index used for LLDP
            authentication. A value of 0 indicates

            the role is unset. A policy endpoint allows for configuration of the
            role settings.

            This setting applies to Switch Engine only.
          type: integer
          minimum: 0
          maximum: 63
    PortName:
      type: string
      description: |-
        Name of the interface, slot and port are required 
         to ensure deterministic results, sub_port is optional.
         If the optional slot number for the management port is
         not provided on a stacked system, the slot will default
         to the master slot.

         [slot]:[port][:sub_port]                  
         '1:1:1'     slot=1, port=1, sub_port=1    
         '12:101'    slot=12, port=101             
         '1:s1'      insight port                  
         'ge2'       port=ge2                      
         'wifi1.3'   radio=1, ssid=3               
         'mgmt'      oob mgmt port                 
         '2:mgmt'    mgmt port with optional slot  
         '1:stack2'  stack port, slot=1, port=2
      pattern: >-
        ^((\d{1,3}):(\d{1,3}):?(\d{1,2})?|(\d{1,3}):(s\d)|ge\d{1,3}|wifi\d{1,2}\.\d|([1-8]:)?mgmt|([1-8]):(stack[1-2]))$
      example: '1:1:1'
    AuthenticationUplinkPortList:
      description: An object representing a list of dynamic VLAN uplink-ports.
      type: object
      properties:
        portList:
          description: A list of ports
          type: array
          items:
            $ref: '#/components/schemas/PortName'
    AuthenticationPerPortSettings:
      description: Authentication port level settings
      type: object
      properties:
        authOptional:
          description: >
            A value of True indicates that authentication is optional on this
            port.

            This setting applies to Switch Engine only.
          type: boolean
          default: false
        macAuthEnabled:
          description: >
            The port level administrative state for MAC based authentication.  A
            value

            of True indicaties Radius based MAC authentication is enabled on the
            port.
          type: boolean
          default: false
        dot1xAuthType:
          description: >
            The port level setting for 802.1x based authentication.  A value

            of AUTO indicates Radius based 802.1x authentication is enabled on
            the port.
          type: string
          enum:
            - AUTHORIZED
            - AUTO
          default: AUTHORIZED
        webAuthEnabled:
          description: >
            The port level administrative state for web based authentication.  A
            value

            of True indicates Radius based web authentication is enabled on the
            port. This setting applies to Switch Engine only.
          type: boolean
          default: false
        authMode:
          description: >
            The port level authentication mode.  This setting applies to Fabric
            Engine only.
          type: string
          enum:
            - MHMV
            - MHSA
          default: MHMV
        dot1xReauthEnabled:
          description: >
            A value of True indicates 802.1x reauthentication is enabled on this
            port. For Fabric Engine

            a single setting controls both 802.1x and MAC reauthentication so
            the corresponding MAC setting

            only applies to Switch Engine.
          type: boolean
          default: true
        dot1xReauthPeriod:
          description: >
            The time period in seconds for 802.1x reauthentication on this
            port.  For Fabric

            Engine the range is 60-65535 seconds.  For Switch Engine the range
            is 30-86400 seconds.

            For Fabric Engine a single setting controls both 802.1x and MAC
            reauthentication so

            the corresponding MAC setting only applies to Switch Engine.
          type: integer
          format: int32
          minimum: 30
          maximum: 86400
        macReauthEnabled:
          description: >
            A value of True indicates MAC reauthentication is enabled on this
            port.

            The default value on Switch Engine operating system is False, so the
            client

            must specifically set this value to True to enable MAC
            reauthentication. This

            setting applies to Switch Engine only. For Fabric Engine the
            corresponding

            802.1x setting controls both 802.1x and MAC reauthentication.
          type: boolean
        macReauthPeriod:
          description: >
            The time period in seconds for MAC reauthentication on this port. 
            For Fabric

            Engine the range is 60-65535 seconds.  For Switch Engine the range
            is 30-86400 seconds.

            This setting applies to Switch Engine only. For Fabric Engine the
            corresponding

            802.1x setting controls both 802.1x and MAC reauthentication.
          type: integer
          format: int32
          minimum: 30
          maximum: 86400
        dot1xReauthOrigin:
          description: >
            This setting indicates the origin of the 802.1x reauthentication
            enable setting. This setting only applies to Fabric Engine.
          type: string
          enum:
            - CONFIG
            - RADIUS
            - AUTOSENSE
          readOnly: true
        dot1xReauthPeriodOrigin:
          description: >
            This setting indicates the origin of the 802.1x reauthentication
            period setting. This setting only applies to Fabric Engine.
          type: string
          enum:
            - CONFIG
            - RADIUS
            - AUTOSENSE
          readOnly: true
        serviceUnavailVlan:
          description: >
            This setting specifies the VLAN a port is assigned to if the
            Radius/AAA

            authentication service is unavailable. For Fabric Engine the VLAN ID

            range is 0 to 4059.  For Switch Engine the VLAN ID range is 0 to
            4094. For Switch Engine

            the service unavailable VLAN only applies if the Policy feature is
            disabled.
          type: integer
          minimum: 0
          maximum: 4094
        serviceUnavailVlanEnabled:
          description: >
            A value of True indicates the service unavailable VLAN is enabled on
            this port. This Switch Engine

            specific setting allows the user to independently configure and
            enable/disable the service unavailable VLAN.
          type: boolean
          default: false
        serviceUnavailNsi:
          description: >
            This setting specifies the NSI assigned to a port if the Radius/AAA
            authentication

            service is unavailable. This setting applies to Fabric Engine only.
          type: integer
          format: int32
          minimum: 0
          maximum: 16000000
        guestVlan:
          description: >
            This setting specifies the VLAN that a client on this port is
            assigned to when authentication

            isnt successfully completed.  Assignment to the guest VLAN occurs in
            the following cases.

            For Fabric Engine this occurs if the client does not respond to an
            802.1x authentication,

            fails MAC or 802.1x authentication, or no service is returned from
            Radius for either MAC

            or 802.1x. For Switch Engine this occurs if the client doesnt
            respond to an 802.1x authentication.

            For Fabric Engine the VLAN ID range is 1 to 4059. For Switch Engine
            the VLAN ID range is 0 to 4094.

            For Switch Engine the guest VLAN only applies if the Policy feature
            is disabled.
          type: integer
          minimum: 0
          maximum: 4094
        guestVlanEnabled:
          description: >
            A value of True indicates the guest VLAN is enabled on this port.
            This Switch Engine specific setting

            allows the user to independently configure and enable/disable the
            guest VLAN.
          type: boolean
          default: false
        guestNsi:
          description: >
            This setting specifies the NSI that a client is assigned to when
            authentication

            fails. This setting only applies to Fabric Engine. This assignment
            occurs if

            the client does not respond to an 802.1x authentication, fails MAC
            or 802.1x

            authentication, or no service is returned from Radius for either MAC
            or 802.1x.
          type: integer
          format: int32
          minimum: 0
          maximum: 16000000
        authFailureVlan:
          description: >
            This setting specifies the VLAN that a client on this port is
            assigned to when authentication

            fails. This setting applies to Switch Engine only.  Assignment to
            this VLAN occurs when the

            client fails 802.1x or MAC authentication.  If Radius does not
            return a service, the client

            will remain in the unauthenticated state and in the default VLAN
            specified in the device

            authentication settings. For Switch Engine the authentication
            failure VLAN only applies if

            the Policy feature is disabled.
          type: integer
          minimum: 0
          maximum: 4094
        authFailureVlanEnabled:
          description: >
            A value of True indicates the authentication failure VLAN is enabled
            on this port. This Switch Engine specific setting

            allows the user to independently configure and enable/disable the
            authentication failure VLAN.
          type: boolean
          default: false
        totalAuthMaxMacs:
          description: >
            This setting specifies the maximum total number of authenticated
            users on the port. For Fabric Engine

            the range is 1 to 8192 users. For Switch Engine the range is 1 to
            65535 users.
          type: integer
          minimum: 1
          maximum: 65535
        macAuthMaxMacs:
          description: >
            This setting specifies the maximum number of MAC authentication
            users on the port. This setting

            applies to Fabric Engine only.
          type: integer
          minimum: 1
          maximum: 8192
        dot1xAuthMaxMacs:
          description: >
            This setting specifies the maximum number of 802.1x authentication
            users on the port. This setting

            applies to Fabric Engine only.
          type: integer
          minimum: 0
          maximum: 32
        dynamicAuthEnabled:
          description: >
            A value of True indicates that dynamic radius server is enabled on
            this port. This setting applies

            to Fabric Engine only.
          type: boolean
          default: false
        cepLldpEnabled:
          description: >
            A value of True indicates that authentication via LLDP discovery
            protocol is enabled on this port.
          type: boolean
          default: false
        cepCdpEnabled:
          description: >
            A value of True indicates that authentication via CDP discovery
            protocol is enabled on this port. This setting applies to Switch
            Engine only.
          type: boolean
          default: false
        maxRequest:
          description: >-
            The maximum number of authentication attempts before failure is
            reported to the Logon Process, and the authPaeQuietPeriod timer
            imposed before further attempts are permitted. This setting only
            applies to Fabric Engine.
          type: integer
          minimum: 1
          maximum: 10
          default: 2
        quietInterval:
          description: >-
            This object indicates a waiting period after a failed authentication
            attempt, before another attempt is permitted.
          type: integer
          minimum: 0
          maximum: 65535
          default: 60
        trafficControl:
          description: >-
            This option controls the configured traffic blocking directions for
            a port when there are no authenticated clients for that port. This
            setting only applies to Fabric Engine.
          type: string
          enum:
            - IN_OUT
            - IN
          default: IN_OUT
    AuthenticationPortSettings:
      description: Authentication settings for a port
      allOf:
        - type: object
          properties:
            port:
              $ref: '#/components/schemas/PortName'
        - $ref: '#/components/schemas/AuthenticationPerPortSettings'
    AuthenticationAllPortsSettings:
      type: object
      properties:
        portSettings:
          description: |
            The authentication settings for each port on the device.
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationPortSettings'
    AuthenticationAllSettings:
      allOf:
        - $ref: '#/components/schemas/AuthenticationDeviceSettings'
        - $ref: '#/components/schemas/AuthenticationUplinkPortList'
        - $ref: '#/components/schemas/AuthenticationAllPortsSettings'
      x-nos: switch-engine
    PortList:
      description: A list of ports
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    VlanIdNonObject:
      description: The identifier of the VLAN
      type: integer
      minimum: 1
      maximum: 4094
    VlanId:
      description: This object represents a VLAN id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/VlanIdNonObject'
    AuthenticationStateObject:
      description: >-
        This object represents the list the hosts authenticated on the port,
        indexed by MAC address.
      type: array
      items:
        type: object
        properties:
          port:
            $ref: '#/components/schemas/PortName'
          macAddress:
            description: The MAC address of the host.
            type: string
          vlanId:
            $ref: '#/components/schemas/VlanId'
          swUniBindings:
            description: >-
              Bindings of Vlan and ISID for a host. This applies to Fabric
              Engine only.
            type: string
          authStatus:
            description: >-
              The authentication status for the host. For Switch Engine the
              values are SUCCESS and FAIL. Fabric Engine supports AUTHENTICATED,
              REJECTED, PENDING, RADIUS_REQUEST_DROPPED,
              RADIUS_SERVER_NOT_REACHABLE, HELD, AUTHENTICATING for NEAP hosts
              and AUTHENTICATED, AUTHENTICATING, INITIALIZE, DISCONNECTED,
              CONNECTING, ABORTING, HELD, FORCE_AUTH, FORCE_UNAUTH,
              UNAUTHENTICATED for EAP hosts.
            type: string
            enum:
              - SUCCESS
              - FAIL
              - AUTHENTICATED
              - REJECTED
              - PENDING
              - RADIUS_REQUEST_DROPPED
              - RADIUS_SERVER_NOT_REACHABLE
              - HELD
              - AUTHENTICATING
              - INITIALIZE
              - DISCONNECTED
              - CONNECTING
              - ABORTING
              - FORCE_AUTH
              - FORCE_UNAUTH
              - UNAUTHENTICATED
          authType:
            description: >-
              The type of authentication supported on the port. This attribute
              applies to Switch Engine only.
            type: string
            enum:
              - MAC
              - DOT1X
          authTime:
            description: >-
              The date/time the host was authenticated on the port. This
              attribute applies to Switch Engine only.
            type: string
          idleTime:
            description: >-
              The time in seconds in which the host was inactive. This attribute
              applies to Switch Engine only.
            type: integer
            format: int32
          sessionDuration:
            description: >-
              This attribute tracks how many seconds the host has been
              authenticated for. This attribute applies to Switch Engine only.
            type: integer
            format: int32
          policyProfile:
            description: >-
              This attribute represents the policy profile. This attribute
              applies to Switch Engine only.
            type: integer
            minimum: 1
            maximum: 63
          operTrafficControl:
            description: >-
              This option specifies the operational traffic blocking directions
              for a port when there are no authenticated clients for that
              port.This setting only applies to Fabric Engine.
            type: string
            enum:
              - IN_OUT
              - IN
            default: IN_OUT
    AuthenticationStatePerPort:
      description: >-
        This object represents the hosts authenticated on a port, indexed by MAC
        address.
      type: array
      items:
        type: object
        properties:
          macAddress:
            description: The MAC address of the host.
            type: string
          vlanId:
            $ref: '#/components/schemas/VlanId'
          swUniBindings:
            description: >-
              Bindings of Vlan and ISID for a host. This applies to Fabric
              Engine only.
            type: string
          authStatus:
            description: >-
              The authentication status for the host. For Switch Engine the
              values are SUCCESS and FAIL. Fabric Engine supports AUTHENTICATED,
              REJECTED, PENDING, RADIUS_REQUEST_DROPPED,
              RADIUS_SERVER_NOT_REACHABLE, HELD, AUTHENTICATING for NEAP hosts
              and AUTHENTICATED, AUTHENTICATING, INITIALIZE, DISCONNECTED,
              CONNECTING, ABORTING, HELD, FORCE_AUTH, FORCE_UNAUTH,
              UNAUTHENTICATED for EAP hosts.
            type: string
            enum:
              - SUCCESS
              - FAIL
              - AUTHENTICATED
              - REJECTED
              - PENDING
              - RADIUS_REQUEST_DROPPED
              - RADIUS_SERVER_NOT_REACHABLE
              - HELD
              - AUTHENTICATING
              - INITIALIZE
              - DISCONNECTED
              - CONNECTING
              - ABORTING
              - FORCE_AUTH
              - FORCE_UNAUTH
              - UNAUTHENTICATED
          authType:
            description: >-
              The type of authentication supported on the port. This attribute
              applies to Switch Engine only.
            type: string
            enum:
              - MAC
              - DOT1X
          authTime:
            description: >-
              The date/time the host was authenticated on the port. This
              attribute applies to Switch Engine only.
            type: string
          idleTime:
            description: >-
              The time in which the host was inactive. This attribute applies to
              Switch Engine only.
            type: integer
            format: int32
          sessionDuration:
            description: >-
              This attribute tracks how long the host has been authenticated
              for. This attribute applies to Switch Engine only.
            type: integer
            format: int32
          policyProfile:
            description: >-
              This attribute represents the policy profile. This attribute
              applies to Switch Engine only.
            type: integer
            minimum: 1
            maximum: 63
          operTrafficControl:
            description: >-
              This option specifies the operational traffic blocking directions
              for a port when there are no authenticated clients for that
              port.This setting only applies to Fabric Engine.
            type: string
            enum:
              - IN_OUT
              - IN
            default: IN_OUT
    MacAddressNonObject:
      description: Colon seperated MAC address in upper or lower case
      type: string
      pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
      example: '00:04:96:98:65:1C'
    PolicyRoleName:
      description: The role name that is unique across the customer sites.
      pattern: '^[a-zA-Z0-9._-]{1,64}$'
      type: string
    AuthenticationClearSession:
      description: Clear authentication sessions
      type: object
      properties:
        macAddress:
          description: |
            Clear only on specified MAC address
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
        ports:
          description: >
            Clear only on specified ports. List of ports for which clear is
            intended to be done.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        agents:
          description: >
            Clear only authentication state of specified agents. 

            For Fabric Engine only DOT1X and MAC can be used.

            DOT1X must be set if EAP clients sessions are intended to be
            cleared, while MAC is equivalent to non-EAP clients.

            WEB value is Switch Engine specific.
          type: array
          items:
            type: string
            enum:
              - DOT1X
              - MAC
              - WEB
        all:
          description: >
            Clear all non-EAP or EAP authentication sessions, depending on the
            value of "agents" field. If this field is set, macAddress and ports
            fields should not be set. (Fabric Engine only)
          type: boolean
          default: false
        policyRole:
          description: >
            Clear the sessions associated with the specified policy role name. 
            This clear option applies

            to Switch Engine only.
          allOf:
            - $ref: '#/components/schemas/PolicyRoleName'
    GlobalAutoSenseDot1xMultihostSettings:
      description: This object represents the global auto-sense  multihost settings.
      type: object
      properties:
        eapMacMax:
          description: Specifies maximum 802.1x clients allowed on the port at one time.
          type: integer
          minimum: 0
          maximum: 32
        macMax:
          description: Specifies maximum MAC clients supported on 802.1x enabled ports.
          type: integer
          minimum: 1
          maximum: 8192
        nonEapMacMax:
          description: >-
            Specifies maximum non 802.1x clients allowed on the port at one
            time.
          type: integer
          minimum: 0
          maximum: 8192
    AutoSenseFaAuthSecret:
      description: Fabric attach authentication key for auto-sense ports.
      type: object
      properties:
        isEncrypted:
          description: Specifies if the secret is encrypted (true) or clear text (false)
          type: boolean
        value:
          description: >-
            The fabric attach authentication key for auto-sense ports. The
            maximum length for configuration of a cleartext password is 32
            characters. The maximum length of 512 characters accomodates the
            longest possible encrypted password.
          type: string
          minLength: 0
          maxLength: 512
      required:
        - isEncrypted
        - value
    GlobalAutoSenseFaCameraSettings:
      description: >-
        This object represents the global auto-sense fabric attach camera
        settings.
      type: object
      properties:
        dot1xStatus:
          description: >-
            Specifies the fabric attach 802.1x status for camera I-SID used by
            auto-sense ports. AUTO - EAPOL is enabled and based on the 802.1x
            authentication, traffic is allowed. FORCE_AUTHORIZED - EAPOL is
            disabled on the port and the port allows all traffic irrespective of
            802.1x authentication.
          type: string
          enum:
            - AUTO
            - FORCE_AUTHORIZED
          default: AUTO
        isid:
          description: >-
            Specifies the fabric attach camera I-SID used by auto-sense ports. A
            value of 0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
    GlobalAutoSenseFaOpenVirtualSwitchSettings:
      description: >-
        This object represents the global auto-sense fabric attach open virtual
        switch settings(OVS).
      type: object
      properties:
        isid:
          description: >-
            Specifies the fabric attach OVS I-SID used by auto-sense ports. A
            value of 0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
        status:
          description: >-
            Specifies the fabric attach 802.1x status for OVS I-SID used by
            auto-sense ports. AUTO - EAPOL is enabled and based on the 802.1x
            authentication, traffic is allowed. FORCE_AUTHORIZED - EAPOL is
            disabled on the port and the port allows all traffic irrespective of
            802.1x authentication.
          type: string
          enum:
            - AUTO
            - FORCE_AUTHORIZED
          default: AUTO
    GlobalAutoSenseFaProxySettings:
      description: >-
        This object represents the global auto-sense fabric attach proxy
        settings.
      type: object
      properties:
        mgmtCvid:
          description: >-
            Specifies the fabric attach proxy management Cvid used by auto-sense
            ports. Cvid is set only for tagged traffic.
          type: integer
          minimum: 0
          maximum: 4094
        mgmtIsid:
          description: >-
            Specifies the fabric attach proxy management I-SID used by
            auto-sense ports. A value of 0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
        noAuthIsid:
          description: >-
            Specifies the fabric attach proxy no-auth I-SID used by auto-sense
            ports. A value of 0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
    GlobalAutoSenseFaWapType1Settings:
      description: >-
        This object represents the global auto-sense fabric attach proxy
        settings.
      type: object
      properties:
        isid:
          description: >-
            Specifies the fabric attach WAP type-1 I-SID used by auto-sense
            ports. A value of 0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
        status:
          description: >-
            Specifies the fabric attach 802.1x status for WAP type-1 I-SID used
            by auto-sense ports. AUTO - EAPOL is enabled and based on the 802.1x
            authentication, traffic is allowed. FORCE_AUTHORIZED - EAPOL is
            disabled on the port and the port allows all traffic irrespective of
            802.1x authentication.
          type: string
          enum:
            - AUTO
            - FORCE_AUTHORIZED
          default: AUTO
    GlobalAutoSenseFaSettings:
      description: This object represents the global auto-sense fabric attach settings.
      type: object
      properties:
        authKey:
          $ref: '#/components/schemas/AutoSenseFaAuthSecret'
        camera:
          $ref: '#/components/schemas/GlobalAutoSenseFaCameraSettings'
        msgAuthEnabled:
          description: Enable fabric attach MsgAuth for auto-sense ports.
          type: boolean
          default: true
        ovs:
          $ref: '#/components/schemas/GlobalAutoSenseFaOpenVirtualSwitchSettings'
        proxy:
          $ref: '#/components/schemas/GlobalAutoSenseFaProxySettings'
        wapType1:
          $ref: '#/components/schemas/GlobalAutoSenseFaWapType1Settings'
    AutoSenseIsisHelloAuthSecret:
      description: This object represents the auto-sense ISIS HelloAuth secret key.
      type: object
      properties:
        isEncrypted:
          description: Specifies if the secret is encrypted (true) or clear text (false)
          type: boolean
        value:
          description: >-
            The ISIS HelloAuth key for auto-sense ports. The maximum length for
            configuration of a cleartext password is 16 characters. The maximum
            length of 512 characters accomodates the longest possible encrypted
            password.
          type: string
          minLength: 0
          maxLength: 512
      required:
        - isEncrypted
        - value
    AutoSenseIsisHelloAuth:
      description: >-
        This object represents the auto-sense ISIS HelloAuth settings. Configure
        ISIS HelloAuth key, key ID and type for auto-sense ports.
      type: object
      properties:
        key:
          $ref: '#/components/schemas/AutoSenseIsisHelloAuthSecret'
        keyId:
          description: >-
            Specifies ISIS HelloAuth key ID for auto-sense ports. This needs to
            be set along helloAuthType and helloAuthKey.
          type: integer
          minimum: 0
          maximum: 255
        type:
          description: Set ISIS HelloAuth type for auto-sense ports.
          type: string
          enum:
            - HMAC_MD5
            - HMAC_SHA_256
            - SIMPLE
            - NONE
      required:
        - key
        - keyId
        - type
    GlobalAutoSenseIsisSettings:
      description: This object represents the global auto-sense ISIS settings.
      type: object
      properties:
        helloAuth:
          $ref: '#/components/schemas/AutoSenseIsisHelloAuth'
        l1Metric:
          description: The ISIS l1 metric value applied to all auto-sense interfaces.
          type: integer
          minimum: 1
          maximum: 16777215
          format: int32
        l1MetricAutoEnabled:
          description: >-
            Specifies whether l1 metric is automatically calculated for all
            auto-sense interfaces.
          type: boolean
    GlobalAutoSenseVoiceSettings:
      description: This object represents the global auto-sense voice settings.
      type: object
      properties:
        cvid:
          description: >-
            Specifies the voice Cvid associated with the voice I-SID used by
            auto-sense ports. Cvid is set only for tagged voice traffic. This
            needs to be set along the I-SID.
          type: integer
          minimum: 0
          maximum: 4094
        dot1xLldpAuthEnabled:
          description: Enable 802.1x LLDP authentication for voice auto-sense ports.
          type: boolean
          default: false
        isid:
          description: >-
            Specifies the voice I-SID used by auto-sense ports. A value of 0
            means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
    GlobalAutoSenseSettings:
      description: This object represents the global auto-sense settings.
      type: object
      x-nos: fabric-engine
      properties:
        accessDiffservEnabled:
          description: Set the diff-srv type as 'access' for auto-sense ports.
          type: boolean
          default: true
        dataIsid:
          description: >-
            Specifies the data I-SID used by auto-sense ports. A value of 0
            means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
        dhcpDetectionEnabled:
          description: Enable DHCP detection for auto-sense ports.
          type: boolean
          default: true
        dot1pOverrideEnabled:
          description: Enable 802.1p Override for auto-sense ports.
          type: boolean
          default: true
        dot1xMultihost:
          $ref: '#/components/schemas/GlobalAutoSenseDot1xMultihostSettings'
        fabricAttach:
          $ref: '#/components/schemas/GlobalAutoSenseFaSettings'
        isis:
          $ref: '#/components/schemas/GlobalAutoSenseIsisSettings'
        onboardingIsid:
          description: >-
            Specifies the onboarding I-SID used by auto-sense ports. A value of
            0 means the I-SID is not set.
          type: integer
          minimum: 0
          maximum: 15999999
          format: int32
        voice:
          $ref: '#/components/schemas/GlobalAutoSenseVoiceSettings'
        waitInterval:
          description: >-
            Specifies the wait interval in seconds for the 'WAIT' state of
            auto-sense's finite state machine.
          type: integer
          minimum: 10
          maximum: 120
    PortAutoSenseSettings:
      description: This object represents the auto-sense settings for a port.
      type: object
      properties:
        enable:
          description: Status of auto-sense on a port.
          type: boolean
          default: true
        nsi:
          description: >-
            The network service (I-SID) id. The value is set to 0 when no I-SID
            is configured.
          type: integer
          minimum: 0
          maximum: 16777215
          format: int32
        waitInterval:
          description: Timeout interval in seconds
          type: integer
          minimum: 10
          maximum: 120
          default: 35
    PortsAutoSenseSettings:
      description: >-
        This object represents the port auto-sense settings (port is specified
        as a property).
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        portSettings:
          $ref: '#/components/schemas/PortAutoSenseSettings'
    AutoSenseSettings:
      description: Auto-sense settings
      allOf:
        - $ref: '#/components/schemas/GlobalAutoSenseSettings'
        - type: object
          properties:
            ports:
              description: List of all PortsAutoSenseSettings defined on the device
              type: array
              items:
                $ref: '#/components/schemas/PortsAutoSenseSettings'
    PortAutoSenseState:
      description: This object represents the auto-sense state information for a port.
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        state:
          description: State of the auto-sense on a port.
          type: string
          enum:
            - DOWN
            - FA_PROXY_NO_AUTH
            - FA_PROXY
            - FA_RING
            - FA_WAP
            - NO_AUTOSENSE
            - NNI
            - NNI_ISIS_UP
            - NNI_LOOP
            - NNI_ONBOARDING
            - NNI_PENDING
            - SD_WAN
            - SD_WAN_PENDING
            - UNI_ONBOARDING
            - VOICE
            - WAIT
          readOnly: true
    SystemComponentsSupportedOps:
      description: |
        The possible operations for a url
      type: string
      enum:
        - POST
        - PUT
        - GET
        - PATCH
        - DELETE
    Urls:
      type: array
      items:
        type: object
        properties:
          url:
            type: string
          supportedOps:
            description: >
              If a url will support a certain operation then this operation will
              appear in the supportedOps list
            type: array
            items:
              $ref: '#/components/schemas/SystemComponentsSupportedOps'
    PolicyCapabilities:
      description: A list of capabilities related to policies.
      type: object
      properties:
        roleTciOverwrite:
          type: boolean
          description: |
            A value of true indicates policy roles supports TCI overwrite
            on this device.
        applicationSignature:
          type: boolean
          description: |
            A value of true indicates the Application Signature feature
            is supported on this device.
        maximumRoles:
          type: integer
          description: |
            The maximum number of policy roles supported on this device.
        maximumRules:
          type: integer
          description: |
            The maximum number of policy rules supported on this device.
    AutoNegotiationAdvertisements:
      description: |
        Available auto-negotiation advertisements (Mb/sec-duplex)
        when auto-negotiation is enabled. Capabilities vary per
        port type and platform.
      type: string
      enum:
        - NONE
        - 10-HALF
        - 10-FULL
        - 100-HALF
        - 100-FULL
        - 1000-HALF
        - 1000-FULL
        - 2500-FULL
        - 5000-FULL
        - 10000-FULL
        - 25000-FULL
        - 40000-FULL
        - 50000-FULL
        - 100000-FULL
    PortPartitions:
      description: |
        Available port partition settings. The options vary 
        depending on platform and port. For a GET operation 
        a single value will be returned. For a SET operation 
        a single value can be configured and this list represents
        the possible values among all port types.
        For Fabric Engine (VOSS) - the partition is determined 
        based on speed and channelized attributes, therefore 
        this attribute is available only in a GET operation, 
        but can't be configured in a SET operation. This attribute 
        is available only for ports with speed 20G, 40G and 100G
        on Fabric Engine (VOSS). Values 2X50G, 3X25G, 3X10G and 3X1G
        are not supported on Fabric Engine (VOSS).
      type: string
      enum:
        - 1X100G
        - 1X40G
        - 1X20G
        - 4X10G
        - 4X25G
        - 2X50G
        - 2X10G
        - 3X25G
        - 3X10G
        - 3X1G
      default: 1X100G
    MediaType:
      description: >-
        Indicates the type of media used by the port for data transmission. It
        can be one of the following values. - "COPPER" for copper-based
        transmission (e.g., Ethernet over copper cables). - "FIBER" for
        fiber-optic transmission (e.g., Ethernet over optical fibers). - "OTHER"
        for other types of media not falling into the above categories, and for
        ports which are not present or whose media cannot be determined. All
        transceiver based cables returned as fiber.
      type: string
      enum:
        - COPPER
        - FIBER
        - OTHER
      default: COPPER
    MediaTypeList:
      type: array
      items:
        $ref: '#/components/schemas/MediaType'
    PortCapability:
      description: Port Capabilities
      type: object
      properties:
        port:
          description: Port name
          $ref: '#/components/schemas/PortName'
          type: string
        capabilities:
          type: object
          properties:
            autoNegotiation:
              description: >-
                The auto-negotiation setting for the port. 'configurable' means
                Auto-negotiation can be configured (true or false) for the port.
                'on' means auto-negotiation is suported and cannot be disabled.
                'off' means auto-negotiation is not supported.
              type: string
              enum:
                - CONFIGURABLE
                - 'ON'
                - 'OFF'
            autoNegOnSupportedAdvList:
              description: >-
                This list contains all the speed-duplex combinations the port is
                capable of advertising when auto-negotiation is enabled. The
                configured list of advertisements is managed by
                "EthernetInterface.autoAdvertisementsList" when
                "EthernetInterface.autoNegotiation=True".
              type: array
              items:
                $ref: '#/components/schemas/AutoNegotiationAdvertisements'
            autoNegOffSupportedSpeedDuplexList:
              description: >-
                This list contains all the speed-duplex combinations supported
                by the port to when auto-negotiation is disabled. The configured
                speed and duplex are managed by "EthernetInterface.speed" and
                "EthernetInterface.duplex" when
                "EthernetInterface.autoNegotiation=False".
              type: array
              items:
                $ref: '#/components/schemas/AutoNegotiationAdvertisements'
            reservedPort:
              description: >-
                Reserved port for configuring advanced features. This is Fabric
                Engine specific.
              type: boolean
              default: false
            loopbackPort:
              description: >-
                Indicates that the port is allocated for loopback. Required for
                advanced feature functionality.
              type: boolean
              default: false
            vimPort:
              description: >-
                Indicates whether the port is a Virtual Infrastructure
                Management (VIM) port.
              type: boolean
              default: false
            managementPort:
              description: >-
                Management port for out-of-band management connection to the
                switch.
              type: boolean
              default: false
            stacking:
              description: >
                Indicates whether the port supports stacking capability.  This
                property is Switch Engine specific.

                Dedicated stacking ports, universal, or alternate stacking ports
                may have a value of true.
              type: boolean
              default: false
            ethernet:
              description: >
                Indicates whether the port supports ethernet capability.  This
                property is Switch Engine specific.

                Standard front panel, universal, or alternate stacking ports may
                have a value of true.
              type: boolean
              default: true
            channelizationSupport:
              description: Indicates whether the port supports channelization
              type: boolean
              default: false
            channelizedSubPorts:
              description: >-
                If channelization is supported, shows the capability of
                channelized sub-ports. For Fabric Engine (VOSS) - the partition
                is determined based on speed and channelized attributes. For a
                GET operation a list of partition will be returned.
              type: array
              items:
                $ref: '#/components/schemas/PortPartitions'
            mediaTypes:
              description: >-
                Indicates the types of media used by the port for data
                transmission. This property is represented as a list as certain
                ports can support multiple media types.
              $ref: '#/components/schemas/MediaTypeList'
    PortsCapability:
      description: Port Capabilities
      type: array
      items:
        $ref: '#/components/schemas/PortCapability'
    Capabilities:
      type: object
      properties:
        vlan:
          type: object
          properties:
            maxVlanSupported:
              description: >-
                The maximum number of vlans supported. This number can be
                different depending on the flags that are activated on the
                device.
              type: integer
              minimum: 0
        policy:
          $ref: '#/components/schemas/PolicyCapabilities'
        radius:
          type: object
          properties:
            supportedVendorIds:
              description: The supported RADIUS vendors ids (Fabric Engine only).
              type: array
              items:
                type: integer
              default:
                - 1584
                - 562
              readOnly: true
        ports:
          $ref: '#/components/schemas/PortsCapability'
    SystemAllCapabilities:
      description: Supported endpoints per release
      type: object
      properties:
        urls:
          description: |
            This endpoint returns a list of all URLs supported in this release.
          $ref: '#/components/schemas/Urls'
        system:
          description: >
            Capabilities will contain useful information such as maximum number
            of vlans, port-partition, etc.
          $ref: '#/components/schemas/Capabilities'
    PortCdpSettings:
      description: This object represents CDP settings for a port.
      type: object
      properties:
        enabled:
          description: |
            The admin enabled setting that indicates if CDP is enabled
            on this port.
          type: boolean
        powerAvailableAdvertised:
          description: |
            A value of true indicates the power available TLV is advertised -
            Switch Engine (EXOS) only.
          type: boolean
        dot1pVoiceVlanAdvertised:
          description: |
            A value of true indicates the voice VLAN reply TLV is advertised
            as priority tagged - Switch Engine (EXOS) only.
          type: boolean
        voiceVlanAdvertised:
          description: |
            A value of true indicates the voice VLAN reply TLV is advertised -
            Switch Engine (EXOS) only. If voiceVlanId is provided, it is
            included in the TLV.
          type: boolean
        voiceVlanId:
          description: |
            VLAN to be included when the voice VLAN reply TLV is advertised -
            Switch Engine (EXOS) only. Use a value of 0 to unconfigure the VLAN.
          type: integer
          minimum: 0
          maximum: 4094
    PortCdp:
      description: This object represents a CDP port and its settings.
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        settings:
          $ref: '#/components/schemas/PortCdpSettings'
    AddressFamilyNumbers:
      description: >
        IANA defined list of address family numbers.

        ALL802             - includes all 802 media plus Ethernet 'canonical
        format'

        APPLE_TALK         - Apple Talk

        AS_NUMBER          - 16-bit quantity, per the AS number space

        BANYAN_VINES       - Banyan Vines

        BBN1822

        DEC_NET_4          - DEC Net Phase IV

        DISTINGUISHD_NAME  - Distinguished Name, per X.500

        DNS                - Domain Name System

        E163

        E164               - SMDS, Frame Relay, ATM

        E164_NSAP          - E.164 with NSAP format subaddress

        F69                - Telex

        FIBRE_CHANNEL_WWPN - Fibre Channel World-Wide Port Name

        FIBRE_CHANNEL_WWNN - Fibre Channel World-Wide Node Name

        GW_ID              - Gateway Identifier

        HDLC               - 8-bit multidrop

        IPV4               - IP Version 4

        IPV6               - IP Version 6 

        IPX                - IPX (Internet Protocol Exchange)

        NSAP               - NSAP

        OTHER              - none of the address families in this schema

        RESERVED

        X121               - X.25, Frame Relay

        XTP_NATIVE         - XTP native mode XTP

        XTP_OVER_IPV4      - XTP over IP version 4

        XTP_OVER_IPV6      - XTP over IP version 6
      type: string
      enum:
        - ALL802
        - APPLE_TALK
        - AS_NUMBER
        - BANYAN_VINES
        - BBN1822
        - DEC_NET_4
        - DISTINGUISHD_NAME
        - DNS
        - E163
        - E164
        - E164_NSAP
        - F69
        - FIBRE_CHANNEL_WWPN
        - FIBRE_CHANNEL_WWNN
        - GW_ID
        - HDLC
        - IPV4
        - IPV6
        - IPX
        - NSAP
        - OTHER
        - RESERVED
        - X121
        - XTP_NATIVE
        - XTP_OVER_IPV4
        - XTP_OVER_IPV6
    CdpCapability:
      description: >-
        The CDP capabilities of the remote system. Describes the The type of
        neighboring network devices such as the router, switch, or repeater.
      type: string
      enum:
        - SOURCE_ROUTE_BRIDGE
        - CVTA
        - REMOTE
        - HOST
        - IGMP
        - TWO_PORT_MAC_RELAY
        - PHONE
        - REPEATER
        - ROUTER
        - SWITCH
        - TRANS_BRIDGE
    CdpXMedCapability:
      description: >-
        The CDP MED capabilities. Describes the MED organizationally defined set
        of CDP TLVs the device is capable of. CAPABILITIES   - Capabilities TLVs
        EXTENDED_PD    - Extended PoE TLVs with PD capabilities EXTENDED_PSE   -
        Extended PoE TLVs with PSE capabilities INVENTORY      - Hardware
        Revision, Firmware Revision, Software Revision, Serial Number,
        Manufacturer Name, Model Name, and Asset ID TLVs LOCATION       -
        Emergency Communications System Location TLVs NETWORK_POLICY - Network
        Policy TLVs
      type: string
      enum:
        - CAPABILITIES
        - EXTENDED_PD
        - EXTENDED_PSE
        - INVENTORY
        - LOCATION
        - NETWORK_POLICY
    LldpChassisIdSubtype:
      description: >
        The type of encoding used to identify the chassis associated with the
        local system as described by IEEE 802.1AB-2005 9.5.2.2.
      type: string
      enum:
        - CHASSIS_COMPONENT
        - INTERFACE_ALIAS
        - INTERFACE_NAME
        - LOCAL
        - PORT_COMPONENT
        - MAC_ADDRESS
        - NETWORK_ADDRESS
      readOnly: true
    CdpDuplex:
      description: >-
        The remote device's interface's duplex mode - Switch Engine (EXOS) only
        The value UNKNOWN indicates no duplex mode field (TLV) was reported in
        the most recent CDP message.
      type: string
      enum:
        - FULL
        - HALF
        - UNKNOWN
      readOnly: true
    CdpTrust:
      description: CDP trust status - Switch Engine (EXOS) only
      type: string
      enum:
        - TRUSTED
        - UNTRUSTED
        - UNKNOWN
      readOnly: true
    CdpNeighbor:
      description: The CDP neighbor state information.
      type: object
      properties:
        address:
          description: >-
            The string value used to identify the management address component
            associated with the remote system.  It is reported in the Address
            TLV of the most recently received CDP message and it is associated
            with addressType.
          type: string
          readOnly: true
        addressType:
          $ref: '#/components/schemas/AddressFamilyNumbers'
        callServers:
          description: >-
            Indicates remote call server IPs received on this port - Fabric
            Engine (VOSS) only
          type: string
          minLength: 0
          maxLength: 544
          readOnly: true
        capabilities:
          description: >-
            List of system capabilities supported on the remote system - Switch
            Engine (EXOS) only
          type: array
          items:
            $ref: '#/components/schemas/CdpCapability'
          readOnly: true
        medCapabilities:
          description: >-
            List of Med capabilities supported on the remote system - Fabric
            Engine (VOSS) only
          type: array
          items:
            $ref: '#/components/schemas/CdpXMedCapability'
          readOnly: true
        deviceId:
          description: >-
            Remote device ID as reported in CDP message. The zero-length string
            indicates no Device-ID field TLV reported.
          type: string
          readOnly: true
        deviceIdType:
          description: >-
            An indication of the format of Device Id of remote device - Fabric
            Engine (VOSS) only
          $ref: '#/components/schemas/LldpChassisIdSubtype'
        fileServers:
          description: >-
            Indicates remote file server IPs received on this port - Fabric
            Engine (VOSS) only
          type: string
          minLength: 0
          maxLength: 544
          readOnly: true
        index:
          description: >-
            An arbitrary local integer value used to identify a particular
            connection instance, unique only for the indicated remote system.
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int32
          readOnly: true
        lastChangeTime:
          description: >-
            Indicates the system time(in hundredths of a second) when this cache
            entry was last changed - Fabric Engine (VOSS) only
          type: integer
          readOnly: true
        holdTime:
          description: >-
            Indicates the remaining hold time(in seconds) of this cache entry -
            Switch Engine (EXOS) only
          type: integer
          minimum: 1
          maximum: 255
          readOnly: true
        platform:
          description: >-
            The Device's Hardware Platform as reported in the most recent CDP
            message. The zero-length string indicates that no Platform field
            (TLV) was reported in the most recent CDP message.
          type: string
          readOnly: true
        portId:
          description: >-
            The string value used to identify the remote port component
            associated with the remote system.
          type: string
          readOnly: true
        portName:
          description: >-
            Identifies the local port on which the remote system information is
            received.
          type: string
          readOnly: true
        sysName:
          description: >-
            The string value used to identify the system name of the remote
            system.
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        version:
          description: The Version string as reported in CDP message for system software.
          type: string
          readOnly: true
        cdpVersion:
          description: The CDP advertAdvertisement Version - Switch Engine(EXOS) only
          type: string
          readOnly: true
        nativeVlan:
          description: Identifies the native VLAN ID - Switch Engine(EXOS) only
          type: integer
          minimum: 1
          maximum: 4094
          readOnly: true
        duplex:
          $ref: '#/components/schemas/CdpDuplex'
        trust:
          $ref: '#/components/schemas/CdpTrust'
      required:
        - index
        - portName
    CdpNeighborList:
      type: array
      items:
        $ref: '#/components/schemas/CdpNeighbor'
    CdpState:
      description: The CDP state information.
      allOf:
        - type: object
          description: CDP state information
          properties:
            neighbors:
              $ref: '#/components/schemas/CdpNeighborList'
    Cert:
      type: object
      properties:
        cert:
          description: SSL/TLS certificate in PEM format. This is Switch Engine specific.
          type: string
          maxLength: 3072
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
            MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
            MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
            BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
            zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
            JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
            9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
            b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
            sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
            cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
            AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
            noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
            /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
            U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
            RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
            WNwl/5Eitlr47E8ecpvahQ5glLrexw==
            -----END CERTIFICATE-----
    Hash:
      description: SHA-256 hash of the certificate(s). Switch Engine specific.
      x-nos: switch-engine
      type: object
      properties:
        hash:
          description: >
            The SHA-256 hash of single or set of certificates. Switch Engine
            specific.
          type: string
          maxLength: 64
    CertKeyStatus:
      type: object
      allOf:
        - $ref: '#/components/schemas/Cert'
        - $ref: '#/components/schemas/Hash'
      properties:
        keycertstatus:
          type: string
          description: >
            Used in GET to convey the presence and match status of certificate
            and private key in the switch. Value KEY_NOT_CONFIGURED indicates
            the key is not configured in the switch. Value CERT_NOT_CONFIGURED
            indicates the certificate is not configured in the switch. Value
            KEY_AND_CERT_NOT_CONFIGURED indicates both key and certificate are
            not configured in the switch. Value KEY_AND_CERT_NOT_MATCH indicates
            both key and certificate are present but mismatch. Value
            KEY_AND_CERT_MATCH indicates all good, both key and certificate are
            present and match.
          enum:
            - KEY_NOT_CONFIGURED
            - CERT_NOT_CONFIGURED
            - KEY_AND_CERT_NOT_CONFIGURED
            - KEY_AND_CERT_NOT_MATCH
            - KEY_AND_CERT_MATCH
    Key:
      type: object
      properties:
        key:
          description: >-
            SSL/TLS RSA private key for the switch in PEM format. This is Switch
            Engine specific.
          type: string
          maxLength: 3072
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAw+rpVNEjoznPELBiWXcvaNFdACbZlv0hf708Y1ZRDGCIw1x1
            2vqYIND0yr2aLA/Jykh9XF5u3JYkDXv90fg0ZuY52mAkBmj7v4EApPF5woND3Y+K
            ixjC/2gHeHdMx1Wcnqsp3k6JN6r2T6bODeAlqdwdUs3xqf5/PJgYU9EWZD7y/qyi
            8DMZhkTUAfNEBZ6BrRJdB4s9FDVviAA/ylyY5LLHVqKXQlaSY9grAQZp4hFU0UuF
            XOatZX+e7W3z1XQ44ltBWuFWBMmyvaKfrikQtlrKfa25VdoT+SbETpj4g9CJ3z9X
            ciw9BRQKBlKUg8SWr765XPp5EbxzFP1RziKqjQIDAQABAoIBAGPZgKvanxgcaVzv
            GGDSbpY0RfrC0hiyz/TjhDh4kHwHYwx2PhapqwjmliwR79ZPAaAXy9RcyJGh76Pz
            sovlvQdIhOm4IAQoU03puGNYMp8g+WCdPJXhu9ghs9UAsF/TUSxIveDwE90MQ9aa
            g9/sgiWM6mD+VxE1hLFkLtng8VGLIYUnlWleFZocO6L4mQvi095jBgkpAoyrWpvP
            5tgxcLS8wmzFmY802RlN1cUuQlJ0+RaM5JSDc3NQsPrxsi55FvwFhzwS7F2cdZIG
            dk4qXTLQYZqGzxk1XNbcYrDbNy7GOw//muHrIZA0Mf57s9oOA7D409T7L0ehSXhh
            mrza4H0CgYEA/fRJ4IWa2hb3pyzg8cX+kPFCs6sOQKZG29lSfrS7FPzPj1r8n2+v
            HHXunyNYtNgZpOBbXujdmh7SD4Hxdu3FpUfo/ZiowtMgDAYLWzBE1zTN+XpmrA75
            vUhhFK0CMhxYpiCIC1G+xWrSl+48xRk9PkPLP+J4JOehdU2XDqswPO8CgYEAxX7w
            Kf53+Rq3zA88Nwk7L30KTIkr6+ZRbE0ZS/DBTuHAoLifYbtKMJKZQMroeWlpGft8
            CG20UnqWkIyhOvOBj090Gii9RhP06DDVnYB0NrUJC9Kg0CE7k2Yafx0KdEG7rNm6
            YR+LzKMQXmYgef9vOjNt9Cwh5Ixzgdb7Dw2YyEMCgYEA0TuwkpgBmaZKrSZAv3KN
            5wWgGz/YIlPdFc3cNiDZ8tTIfihM81+lOyG/VMZek8Fof3uKTIw36H90Ouqo83+7
            1A2HXUml4b7pLH7eZGdEkLsk6WN7rE86XEWCFvLkWD0anOU4sXrMXwNAN4VF9G5z
            ExXwI9aHfoCJeohO6PsKZ2kCgYBoJ9j7HLQjEN8r5EEKeXjYQ6ah1JnwUEhSyJp1
            vWQFePPBD30m6sJmuXnPfPN7zIbcaA/y1gCKmxI665/AWlnSvcFqZl/jzHSV2+Nc
            rDkd/P3nWU7sVQp5YxjIPwWbaGtU7oLn494zry/byRqJnJgJZsQvSPMa+KOWL026
            k54mxwKBgQCTDR7G5+z+rrwBw9edG1qw/dOzuBXgutGZUuTr4nsbEMEUe3q5ePow
            7aHxNbQjwhVHszQYvmnpwibHLZb6hMlA+fAXfJKtHwS6qjpr0drW7Sf/5rQRPiKv
            Rp57SHbNo2ZTEe5NFo72asv1heorM63ckV9vaAZReuwVir4xfyUxTg==
            -----END RSA PRIVATE KEY-----
    CertKey:
      type: object
      properties:
        switchkeycert:
          description: >-
            SSL/TLS private key and certificate pair for the switch. This is
            Switch Engine specific.
          type: object
          allOf:
            - $ref: '#/components/schemas/Cert'
            - $ref: '#/components/schemas/Key'
          maxLength: 6400
    Certs:
      type: object
      properties:
        certs:
          description: CA certificate(s) in PEM format. This is Switch Engine specific.
          type: string
          maxLength: 30720
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
            MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
            MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
            BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
            zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
            JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
            9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
            b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
            sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
            cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
            AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
            noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
            /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
            U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
            RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
            WNwl/5Eitlr47E8ecpvahQ5glLrexw==
            -----END CERTIFICATE-----
            -----BEGIN CERTIFICATE-----
            MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
            MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
            MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
            BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
            zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
            JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
            9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
            b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
            sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
            cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
            AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
            noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
            /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
            U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
            RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
            WNwl/5Eitlr47E8ecpvahQ5glLmers==
            -----END CERTIFICATE-----
    CertsWithHash:
      type: object
      allOf:
        - $ref: '#/components/schemas/Certs'
        - $ref: '#/components/schemas/Hash'
    CfmL2DestHostName:
      type: object
      properties:
        hostName:
          description: The target host name.
          type: string
          minLength: 0
          maxLength: 255
    CfmL2DestMacAddr:
      type: object
      properties:
        destMacAddr:
          description: |
            An indication of the target MAC Address field.
          type: string
          pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
    CfmL2DestAddr:
      type: object
      description: Only one of destMacAddr and hostName must be set.
      allOf:
        - $ref: '#/components/schemas/CfmL2DestHostName'
        - $ref: '#/components/schemas/CfmL2DestMacAddr'
    CfmL2PingTransmitAllSettings:
      description: >-
        L2 ping operation transmit settings. This schema is used by Fabric
        Engine only.
      type: object
      allOf:
        - $ref: '#/components/schemas/CfmL2DestAddr'
        - type: object
          properties:
            vlanId:
              description: A value that uniquely identifies the Customer VLAN.
              type: integer
              minimum: 1
              maximum: 4094
            numberOfMessages:
              description: The number of L2Ping messages to be transmitted.
              type: integer
              minimum: 1
              maximum: 200
              default: 1
            seqNumber:
              description: >
                The transaction identifier/sequence number of the first loopback
                message (to be) sent.
              type: integer
              readOnly: true
            priority:
              description: >-
                Priority. 3 bit value to be used in the VLAN hdr, if present in
                the transmitted frame.
              type: integer
              minimum: 0
              maximum: 7
              default: 7
            timeoutInterval:
              description: |
                The interval to wait for an L2Ping time-out with a
                range of (1..10)  seconds with a default value of 3
                seconds.
              type: integer
              minimum: 1
              maximum: 10
              default: 3
            testPattern:
              description: |
                The test pattern to use in the L2Ping PDUs
                with range of values namely allZero, allZeroCrc,
                pseudoRandomBitSequence and pseudoRandomBitSequenceCrc
                and with a default value of allZero.
                value                  meaning
                ---------------
                ALL_ZERO             Null signal without CRC-32
                ALL_ZERO_CRC          Null signal with CRC-32
                PSEUDO_RANDOM_BIT_SEQUENCE PRBS 1/2^31-1 without CRC-32
                PSEUDO_RANDOM_BIT_SEQUENCE_CRC PBRS 1/2^31-1 with CRC-32
              type: string
              enum:
                - ALL_ZERO
                - ALL_ZERO_CRC
                - PSEUDO_RANDOM_BIT_SEQUENCE
                - PSEUDO_RANDOM_BIT_SEQUENCE_CRC
              default: ALL_ZERO
            dataSize:
              description: >-
                An arbitrary amount of data to be included in the data TLV, if
                the Data Size is selected to be sent.
              type: integer
              minimum: 0
              maximum: 400
              default: 0
            frameSize:
              description: |
                If the frame size is specified then the data size
                shall be internally calculated and the calculated data
                size shall be included in the data TLV.
              type: integer
              minimum: 0
              maximum: 9600
              default: 0
            sourceMode:
              description: |
                Source modes of the transmit loopback service. 
                Can have the following values: NODAL, SMLT_VIRTUAL, NO_VLAN_MAC
                (Fabric Engine only)
              type: string
              enum:
                - NODAL
                - SMLT_VIRTUAL
                - NO_VLAN_MAC
              default: NODAL
            resultOk:
              description: |
                Indicates the result of the operation:
                -true.    The L2Ping Message(s) will be (or have been) sent.
                -false.   The L2Ping Message(s) will not be sent.
              type: boolean
              default: true
              readOnly: true
            status:
              description: |
                Status of the transmit loopback service:
                -READY.      The service is available.
                -TRANSMIT.   The service is transmitting, or about to
                transmit the trace messages.
                -ABORT       The service is aborted or about to abort
                the trace messages.
                This field will also be used to avoid concurrency or
                race condition problems that could occur if two or
                more management entities try to
                use the service at the same time.
              type: string
              enum:
                - READY
                - TRANSMIT
                - ABORT
              default: READY
      required:
        - vlanId
    CfmL2TraceTransmitAllSettings:
      description: >-
        L2 traceroute transmit operation settings. This schema is used by Fabric
        Engine only.
      type: object
      allOf:
        - $ref: '#/components/schemas/CfmL2DestAddr'
        - type: object
          properties:
            vlanId:
              description: VLAN id for which traceroute is issued.
              type: integer
              minimum: 1
              maximum: 4094
            ttl:
              description: |
                The number of hops remaining to this L2Trace.
                Decremented by 1 by each Bridge that handles the L2Trace.
                The decremented value is returned in the L2Trace. If 0
                on output, the L2Trace is not transmitted to the next
                hop. The value of the TTL Field in the L2Trace
                transmitted by the originating MEP is controlled by a
                Managed Object;The default value if none is
                specified is 64.
              type: integer
              minimum: 1
              maximum: 255
              default: 64
            seqNumber:
              description: >
                The transaction identifier/sequence number of the first loopback
                message (to be) sent.
              type: integer
              readOnly: true
            isid:
              description: Isid Id.
              type: integer
            nickName:
              description: Local Node nick name.
              type: string
              readOnly: true
            priority:
              description: |
                Priority. 3 bit value to be used in the VLAN hdr,
                if present in the transmitted frame.
              type: integer
              minimum: 0
              maximum: 7
              default: 7
            sourceMode:
              description: |
                Source modes of the transmit linktrace service. 
                Can have the following values: NODAL, SMLT_VIRTUAL, NO_VLAN_MAC
              type: string
              enum:
                - NODAL
                - SMLT_VIRTUAL
                - NO_VLAN_MAC
              default: NODAL
            resultOk:
              description: |
                Indicates the result of the operation:
                -true.    The L2Ping Message(s) will be (or have been) sent.
                -false.   The L2Ping Message(s) will not be sent.
              type: boolean
              default: true
              readOnly: true
            status:
              description: |
                Status of the transmit loopback service:
                -READY.      The service is available.
                -TRANSMIT.   The service is transmitting, or about to
                transmit the trace messages.
                -ABORT       The service is aborted or about to abort
                the trace messages.
                This field will also be used to avoid concurrency or
                race condition problems that could occur if two or
                more management entities try to
                use the service at the same time.
              type: string
              enum:
                - READY
                - TRANSMIT
                - ABORT
              default: READY
            flag:
              description: >
                L2Trace result flag indicating L2Trace status or error code.

                Each enum value represents a status or error case.

                NO_ERROR 

                INTERNAL_ERROR 

                INVALID_MAC

                MEP_DISABLED (Mep must be enabled in order to perform L2Trace)

                NO_L2_TRACE_RESPONSE (No L2Trace response received)

                L2_TRACE_TO_OWN_MEP_MAC (L2Trace to own Mep MAC is not sent)

                COMPLETED

                LOOKUP_FAILURE

                L2_TRACE_LEAF_NODE (On a leaf node in the i-sid tree)

                L2_TRACE_NOT_IN_TREE (Not in the i-sid tree)

                L2_TRACE_SMLT_NOT_PRIMARY (Requested SMLT Source from
                Non-Primary Node)
              type: string
              enum:
                - NO_ERROR
                - INTERNAL_ERROR
                - INVALID_MAC
                - MEP_DISABLED
                - NO_L2_TRACE_RESPONSE
                - L2_TRACE_TO_OWN_MEP_MAC
                - COMPLETED
                - LOOKUP_FAILURE
                - L2_TRACE_LEAF_NODE
                - L2_TRACE_NOT_IN_TREE
                - L2_TRACE_SMLT_NOT_PRIMARY
              readOnly: true
      required:
        - vlanId
    HostName:
      description: General host name type
      type: object
      properties:
        address:
          description: Host Name
          type: string
    Ipv4Address:
      description: General IPv4 address type
      type: object
      properties:
        address:
          description: IPv4 address
          type: string
          format: ipv4
    Ipv6Address:
      description: General IPv6 address type
      type: object
      properties:
        address:
          description: IPv6 address
          type: string
          format: ipv6
    GeneralHostOrIp:
      description: Host name or IP (IPv4 or IPv6) identifier using discriminator
      type: object
      properties:
        hostType:
          description: >-
            Specifies the type of identifier in the following property
            (hostname, IPv4, or IPv6)
          type: string
          enum:
            - hostname
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/HostName'
        - $ref: '#/components/schemas/Ipv4Address'
        - $ref: '#/components/schemas/Ipv6Address'
      discriminator:
        propertyName: hostType
        mapping:
          hostname: '#/components/schemas/HostName'
          IPv4: '#/components/schemas/Ipv4Address'
          IPv6: '#/components/schemas/Ipv6Address'
    MulticastIpv4Address:
      description: Multicast IPv4 address (range 224.0.0.1 - 239.255.255.255)
      type: string
      pattern: >-
        ^(22[4-9]|23[0-9])\.((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){2}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      example: 224.1.1.10
    GroupAddress:
      description: Host name or IP (IPv4 or IPv6) identifier using discriminator
      type: object
      properties:
        addressType:
          description: >-
            Specifies the type of identifier in the following property (IPv4, or
            IPv6). Only IPv4 it is supported at the moment.
          type: string
          enum:
            - IPv4
            - IPv6
        address:
          anyOf:
            - $ref: '#/components/schemas/MulticastIpv4Address'
          discriminator:
            propertyName: addressType
            mapping:
              IPv4: '#/components/schemas/MulticastIpv4Address'
    CfmL2McastTraceTransmitAllSettings:
      description: >-
        Multicast traceroute transmit operation settings. This schema is used by
        Fabric Engine only.
      type: object
      properties:
        srcAddr:
          $ref: '#/components/schemas/GeneralHostOrIp'
        groupAddr:
          $ref: '#/components/schemas/GroupAddress'
        serviceType:
          description: |
            Service type indicates what the value of service id means.
            VLAN - indicates value maps to VLAN
            VRF_ID - indicates value maps to a VRF Id
          type: string
          enum:
            - VLAN
            - VRF_ID
        serviceId:
          description: >
            Value of VLAN or VRF-Id. 

            Value must be valid for the chosen service type (e.g. VLAN range
            1..4094)
          type: integer
        priority:
          description: >-
            Priority. 3 bit value to be used in the VLAN hdr, if present in the
            transmitted frame.
          type: integer
          minimum: 0
          maximum: 7
          default: 7
        ttl:
          description: |
            The number of hops remaining to this trace.
            Decremented by 1 by each Bridge that handles trace.
            If 0 on output, the trace is not transmitted to
            the next hop.  The value of the TTL Field in the
            trace trasnmitted by originating MEP is controlled
            by a Managed Object;the default value if none is
            specified is 64.
          type: integer
          minimum: 1
          maximum: 255
          default: 64
        status:
          description: |
            Status of the transmit loopback service:
            READY.      The service is available.
            TRANSMIT.   The service is transmitting, or about to
            transmit the trace messages.
            ABORT       The service is aborted or about to abort
            the trace messages.
            This field will also be used to avoid concurrency or
            race condition problems that could occur if two or
            more management entities try to
            use the service at the same time.
          type: string
          default: READY
          enum:
            - READY
            - TRANSMIT
            - ABORT
        vrfName:
          description: The name of the Virtual Router of the originator
          type: string
          minLength: 0
          maxLength: 64
          readOnly: true
        seqNumber:
          description: >-
            The transaction identifier/sequence number of the first message (to
            be) sent.
          type: integer
          readOnly: true
        resultOk:
          description: |
            Indicates the result of the operation:
            -true.    The Trace Message(s) will/have been sent.
            -false.   The Trace Message(s) will not be sent.
          type: boolean
          default: true
          readOnly: true
        flag:
          description: |
            Result flag indicating L2Trace status or error code.
            Each enum value represents a status or error case.
            NO_ERROR
            INTERNAL_ERROR
            MEP_DISABLED (Mep must be enabled in order to perform trace)
            NO_RESPONSE (No response received)
            COMPLETED 
            LEAF_NODE (On a leaf node in the i-sid tree)
            NO_DATA_ISID_FOUND (No Data Isid was found for S,G)
          type: string
          enum:
            - NO_ERROR
            - INTERNAL_ERROR
            - MEP_DISABLED
            - NO_RESPONSE
            - COMPLETED
            - LEAF_NODE
            - NO_DATA_ISID_FOUND
          readOnly: true
      required:
        - srcAddr
        - groupAddr
        - serviceType
        - serviceId
    CfmL2IpPingTransmitAllSettings:
      description: >-
        The L2 ping operation using IP address. This schema is used by Fabric
        Engine only.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralHostOrIp'
        vrfId:
          description: The VRF id for which the IP ping is issued.
          type: integer
          readOnly: true
        vrfName:
          description: The Virtual Router name for which the IP ping is issued.
          type: string
          minLength: 0
          maxLength: 64
          readOnly: true
        numberOfMessages:
          description: The number of L2IpPing messages to be transmitted per mac/vlan pair.
          type: integer
          minimum: 1
          maximum: 200
          default: 1
        timeout:
          description: |
            The interval to wait for an L2IpPing time-out with a
            range of (1..10)  seconds with a default value of 3 seconds.
          type: integer
          minimum: 1
          maximum: 10
          default: 3
        testPattern:
          description: |
            The test pattern to use in the L2IpPing PDUs
            with range of values namely allZero, allZeroCrc,
            pseudoRandomBitSequence and pseudoRandomBitSequenceCrc
            and with a default value of allZero.
            value                  meaning
            ---------------
            ALL_ZERO             Null signal without CRC-32
            ALL_ZERO_CRC          Null signal with CRC-32
            PSEUDO_RANDOM_BIT_SEQUENCE PRBS 1/2^31-1 without CRC-32
            PSEUDO_RANDOM_BIT_SEQUENCE_CRC PBRS 1/2^31-1 with CRC-32
          type: string
          enum:
            - ALL_ZERO
            - ALL_ZERO_CRC
            - PSEUDO_RANDOM_BIT_SEQUENCE
            - PSEUDO_BIT_SEQUENCE_CRC
          default: ALL_ZERO
        dataSize:
          description: |
            An arbitrary amount of data to be included in the
            data TLV, if the Data Size is selected to be sent.
          type: integer
          minimum: 0
          maximum: 400
          default: 0
        status:
          description: >
            Status of the transmit loopback service:

            -READY.      The service is available.

            -TRANSMIT.   The service is transmitting, or about to transmit, the
            L2IpPing messages.

            -ABORT       The service is aborted or about to abort

            the L2IpPing messages.

            This field will also be used to avoid concurrency or

            race condition problems that could occur if two or

            more management entities try to

            use the service at the same time.
          type: string
          default: READY
          enum:
            - READY
            - TRANSMIT
            - ABORT
        resultOk:
          description: |
            Indicates the result of the operation:
            -true.    L2IpPing Message(s) will be/have been sent.
            -false.   L2IpPing Message(s) will not be sent.
          type: boolean
          default: true
          readOnly: true
        numberPathsFound:
          description: The number of paths found to execute L2 IP ping command
          type: integer
          default: 0
          readOnly: true
      required:
        - ipAddress
    CfmL2IpTraceTransmitAllSettings:
      description: >-
        The L2 traceroute operation using IP address. This schema is used by
        Fabric Engine only.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralHostOrIp'
        vrfId:
          description: The VRF id for which L2 IP traceroute is issued.
          type: integer
          readOnly: true
        vrfName:
          description: The VRF name for which L2 IP traceroute is issued.
          type: string
          readOnly: true
        ttl:
          description: |
            The number of hops remaining to this L2Trace.
            Decremented by 1 by each Bridge that handles the L2Trace.
            The decremented value is returned in the L2Trace. If 0
            on output, the L2Trace is not transmitted to the next
            hop. The value of the TTL Field in the L2Trace
            transmitted by the originating MEP is controlled by a
            Managed Object;The default value if none is
            specified is 64.
          type: integer
          minimum: 1
          maximum: 255
          default: 64
        status:
          description: |
            Status of the transmit loopback service:
            -READY.      The service is available.
            -TRANSMIT.   The service is transmitting, or about to
            transmit, the L2Trace messages.
            -ABORT       The service is aborted or about to abort
            the L2Trace messages.
            This field will also be used to avoid concurrency or
            race condition problems that could occur if two or
            more management entities try to
            use the service at the same time.
          type: string
          default: READY
          enum:
            - READY
            - TRANSMIT
            - ABORT
        resultOk:
          description: |
            Indicates the result of the operation:
            -true.    The Trace Message(s) will be/have been sent.
            -false.   The Trace Message(s) will not be sent.
          type: boolean
          default: true
          readOnly: true
        numberPathsFound:
          description: The number of paths found to execute L2 IP traceroute command
          type: integer
          default: 0
          readOnly: true
      required:
        - ipAddress
    CfmLbmTransmitAllSettings:
      description: Loopback operation settings.
      type: object
      properties:
        domainName:
          description: Maintenance domain name.
          type: string
          minLength: 1
          maxLength: 43
        associationName:
          description: Maintenance association name.
          type: string
          minLength: 1
          maxLength: 45
        destMacAddr:
          description: >-
            An indication of the target MAC Address field. (Used for both Fabric
            Engine and Switch Engine devices)
          type: string
        numberOfMessages:
          description: >-
            The number of L2Ping messages to be transmitted. (Used for Fabric
            Engine devices)
          type: integer
          minimum: 1
          maximum: 200
          default: 1
        seqNumber:
          description: >
            The transaction identifier/sequence number of the first loopback
            message.

            (Used for Fabric Engine)
          type: integer
          readOnly: true
        destMepId:
          description: |
            The Maintenance Assiciation End Point identifier of
            another MEP in the same Maintenance Association
            (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 8191
        destIsMepId:
          description: |
            True indicates that MepId of the target MEP is used
            for Loopback transmission.
            False indicates that unicast destination MAC address
            of the target MEP is used for Loopback transmission.
            (Fabric Engine only)
          type: boolean
        vlanPriority:
          description: |
            Priority. 3 bit value to be used in the VLAN tag, if present in
            the transmitted frame. (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 7
          default: 7
        vlanDropEnable:
          description: |
            Drop Enable bit value to be used in the VLAN tag, if present in
            the transmitted frame. (Fabric Engine only)
          type: boolean
          default: false
        resultOk:
          description: |
            Indicates the result of the operation:
            -true.      The Loopback Message(s) will be (or have been) sent.
            -false.   The Loopback Message(s) will not be sent.
            (Fabric Engine only)
          type: boolean
          readOnly: true
        status:
          description: |
            Status of the transmit loopback service:
            -READY.      The service is available.
            -TRANSMIT.   The service is transmitting, or about to
            transmit the trace messages.
            -ABORT       The service is aborted or about to abort
            the trace messages.
            This field will also be used to avoid concurrency or
            race condition problems that could occur if two or
            more management entities try to
            use the service at the same time. 
            (Fabric Engine only)
          type: string
          enum:
            - READY
            - TRANSMIT
            - ABORT
        timeoutInt:
          description: |
            The interval to wait for an LBM time-out with a
            range of (1..10)  seconds with a default value of 3
            seconds.
            (Fabric Engine only)
          type: integer
          minimum: 1
          maximum: 10
          default: 3
        interFrameInt:
          description: |
            The interval between LBM frames with a range of
            (0..1000) msecs with a default value of 500 msecs.
            The value of 0 msecs indicates to send the frames as
            fast as possible.
            (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 1000
          default: 500
        testPattern:
          description: |
            The test pattern to use in the L2Ping PDUs
            with range of values namely allZero, allZeroCrc,
            pseudoRandomBitSequence and pseudoRandomBitSequenceCrc
            and with a default value of allZero.
            value                  meaning
            ---------------
            ALL_ZERO             Null signal without CRC-32
            ALL_ZERO_CRC          Null signal with CRC-32
            PSEUDO_RANDOM_BIT_SEQUENCE PRBS 1/2^31-1 without CRC-32
            PSEUDO_RANDOM_BIT_SEQUENCE_CRC PBRS 1/2^31-1 with CRC-32
            (Fabric Engine only)
          type: string
          enum:
            - ALL_ZERO
            - ALL_ZERO_CRC
            - PSEUDO_RANDOM_BIT_SEQUENCE
            - PSEUDO_RANDOM_BIT_SEQUENCE_CRC
        dataSize:
          description: >-
            An arbitrary amount of data to be included in the data TLV, if the
            Data Size is selected to be sent. (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 400
          default: 0
        frameSize:
          description: |
            If the frame size is specified then the data size
            shall be internally calculated and the calculated data
            size shall be included in the data TLV.
            (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 9600
          default: 0
        sourceMode:
          description: |
            Source modes of the transmit loopback service. 
            Can have the following values: NODAL, SMLT_VIRTUAL, NO_VLAN_MAC
            (Fabric Engine only)
          type: string
          enum:
            - NODAL
            - SMLT_VIRTUAL
            - NO_VLAN_MAC
          default: NODAL
        port:
          description: >-
            The port used for the L2 ping command. This is a required field.
            (Switch Engine only)
          type: string
      required:
        - domainName
        - associationName
    CfmLtmTransmitAllSettings:
      description: Linktrace operation settings.
      type: object
      properties:
        domainName:
          description: Maintenance domain name.
          type: string
          minLength: 1
          maxLength: 43
        associationName:
          description: Maintenance association name.
          type: string
          minLength: 1
          maxLength: 45
        destMacAddr:
          description: |
            An indication of the target MAC Address field.
            Used for both Fabric Engine and Swich Engine devices.
          type: string
        ttl:
          description: |
            The number of hops remaining to this L2Trace.
            Decremented by 1 by each Bridge that handles the L2Trace.
            The decremented value is returned in the L2Trace. If 0
            on output, the L2Trace is not transmitted to the next
            hop. The value of the TTL Field in the L2Trace
            transmitted by the originating MEP is controlled by a
            Managed Object;The default value if none is
            specified is 64.
            Used for both Fabric Engine and Swich Engine devices.
          type: integer
          minimum: 1
          maximum: 255
          default: 64
        seqNumber:
          description: >
            The transaction identifier/sequence number of the first loopback
            message (to be) sent. 

            This is used for Fabric Engine.
          type: integer
          readOnly: true
        vlanPriority:
          description: |
            Priority. 3 bit value to be used in the VLAN tag, if present in
            the transmitted frame. (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 7
          default: 7
        destMepId:
          description: |
            The Maintenance Assiciation End Point identifier of
            another MEP in the same Maintenance Association
            (Fabric Engine only)
          type: integer
          minimum: 0
          maximum: 8191
        destIsMepId:
          description: |
            True indicates that MepId of the target MEP is used
            for Loopback transmission.
            False indicates that unicast destination MAC address
            of the target MEP is used for Loopback transmission.
            (Fabric Engine only)
          type: boolean
        resultOk:
          description: |
            Indicates the result of the operation:
            -true.      The Loopback Message(s) will be (or have been) sent.
            -false.   The Loopback Message(s) will not be sent.
            (Fabric Engine only)
          type: boolean
          readOnly: true
        status:
          description: |
            Status of the transmit loopback service:
            -READY.      The service is available.
            -TRANSMIT.   The service is transmitting, or about to
            transmit the trace messages.
            -ABORT       The service is aborted or about to abort
            the trace messages.
            This field will also be used to avoid concurrency or
            race condition problems that could occur if two or
            more management entities try to
            use the service at the same time. 
            (Fabric Engine only)
          type: string
          enum:
            - READY
            - TRANSMIT
            - ABORT
        flag:
          description: >
            LTM result flag indicating LTM status or error code.

            Each enum value represents a status or error case.

            NO_ERROR

            INTERNAL_ERROR

            NO_REMOTE_MEP (Unknown Remote Maintenance End Point)

            INVALID_REMOTE_MEP_MAC (Invalid Remote Maintenance End Point Mac
            Address)

            NO_REMOTE_MEP_MAC_LEARNED (Unset Remote Maintenance End Point Mac
            Address)

            MEP_DIASBLED (Mep must be enabled in order to perform LTM)

            NO_LTR__RESPONSE (No Ltr response received)

            LTM_TO_OWN_MEP_MAC (Linktrace to own Mep MAC is not sent)

            EP_DISABLED (Endpoint must be enabled in order to perform LTM)

            TRUNK_DISABLED (Pbt-trunk must be enabled in order to perform LTM)

            LTM_COMPLETED 

            LTM_LEAF_NODE

            (Fabric Engine only)
          type: string
          enum:
            - NO_ERROR
            - INTERNAL_ERROR
            - NO_REMOTE_MEP
            - INVALID_REMOTE_MEP_MAC
            - NO_REMOTE_MEP_MAC_LEARNED
            - MEP_DIASBLED
            - NO_LTR__RESPONSE
            - LTM_TO_OWN_MEP_MAC
            - EP_DISABLED
            - TRUNK_DISABLED
            - LTM_COMPLETED
            - LTM_LEAF_NODE
          readOnly: true
        sourceMode:
          description: |
            Source modes of the transmit linktrace service. 
            Can have the following values: NODAL, SMLT_VIRTUAL, NO_VLAN_MAC
            (Fabric Engine only)
          type: string
          enum:
            - NODAL
            - SMLT_VIRTUAL
            - NO_VLAN_MAC
        port:
          description: Port. This is a required field.(Switch Engine only)
          type: string
        upMep:
          description: >-
            A value of true indicates that the MEP is an UP MEP. (Switch Engine
            only)
          type: boolean
      required:
        - domainName
        - associationName
    CfmL2CommandPost:
      description: L2 command to be executed.
      type: object
      properties:
        L2Command:
          description: >
            Specifies which type of l2 command will be executed.

            Can be l2
            ping/traceroute/tracemroute/IPping/IPtraceroute/linktrace/loopback
            messages. 

            For SE, only LTM and LBM can be set. LTM(linktrace message) value is
            equivalent to SE L2 traceroute, while LBM(loopback message) is
            equivalent to SE L2 ping.
          type: string
          enum:
            - L2_PING
            - L2_TRACEROUTE
            - L2_TRACEMROUTE
            - L2_IP_PING
            - L2_IP_TRACEROUTE
            - LBM
            - LTM
      anyOf:
        - $ref: '#/components/schemas/CfmL2PingTransmitAllSettings'
        - $ref: '#/components/schemas/CfmL2TraceTransmitAllSettings'
        - $ref: '#/components/schemas/CfmL2McastTraceTransmitAllSettings'
        - $ref: '#/components/schemas/CfmL2IpPingTransmitAllSettings'
        - $ref: '#/components/schemas/CfmL2IpTraceTransmitAllSettings'
        - $ref: '#/components/schemas/CfmLbmTransmitAllSettings'
        - $ref: '#/components/schemas/CfmLtmTransmitAllSettings'
      discriminator:
        propertyName: L2Command
        mapping:
          L2_PING: '#/components/schemas/CfmL2PingTransmitAllSettings'
          L2_TRACEROUTE: '#/components/schemas/CfmL2TraceTransmitAllSettings'
          TRACEMROUTE: '#/components/schemas/CfmL2McastTraceTransmitAllSettings'
          L2_IP_PING: '#/components/schemas/CfmL2IpPingTransmitAllSettings'
          L2_IP_TRACEROUTE: '#/components/schemas/CfmL2IpTraceTransmitAllSettings'
          LBM: '#/components/schemas/CfmLbmTransmitAllSettings'
          LTM: '#/components/schemas/CfmLtmTransmitAllSettings'
    CfmL2PingReplySettings:
      description: The L2 ping operation result. This schema is used by Fabric Engine only.
      type: object
      properties:
        destMacAddr:
          description: Destination MAC address.
          type: string
          readOnly: true
        bytesOfData:
          description: Bytes sent.
          type: string
          readOnly: true
        pktsTx:
          description: Number of transmitted packets.
          type: integer
          readOnly: true
        pktsRx:
          description: Number of received packets.
          type: integer
          readOnly: true
        pktLoss:
          description: Packet loss.
          type: string
          readOnly: true
        roundTrip:
          description: Round-trip min/max/ave/stdv. (us)
          type: string
          readOnly: true
    CfmL2TraceReplySettings:
      description: >-
        The L2 traceroute operation result. This schema is used by Fabric Engine
        only.
      type: object
      properties:
        seqNumber:
          description: |
            The transaction identifier/sequence number returned by a
            previous transmit linktrace message command, indicating which
            L2Trace's response is going to be returned.
          type: integer
          readOnly: true
        hop:
          description: The number of hops away from L2Trace initiator.
          type: integer
          readOnly: true
        receiveOrder:
          description: |
            An index to distinguish among multiple L2Trace responses
            with the same Transaction Identifier field  value. This value
            is assigned sequentially from 1, in the order that the
            Linktrace Initiator received the responses.
          type: integer
          readOnly: true
        ttl:
          description: |
            Ttl field value for a returned L2Trace response.
          type: integer
          readOnly: true
        srcMac:
          description: >
            Mac address of the MP that respond to the L2Trace request for this
            L2traceReply.
          type: string
          readOnly: true
        hostName:
          description: The host name of the replying node.
          type: string
          readOnly: true
        lastSrcMac:
          description: >-
            The MAC address of the node that forwarded the L2Trace to the
            responding node.
          type: string
          readOnly: true
        lastHostName:
          description: >-
            The host name of the node that forwarded the L2Trace to the
            responding node.
          type: string
          readOnly: true
    CfmL2McastTraceReplySettings:
      description: >-
        The L2 multicast traceroute result. This schema is used by Fabric Engine
        only.
      type: object
      properties:
        hop:
          description: The number of hops away from trace initiator
          type: integer
          minimum: 0
          maximum: 255
        receiveOrder:
          description: |
            An index to distinguish among multiple responses
            with the same Transaction Identifier field  value. This value
            is assigned sequentially from 1, in the order that the
            Linktrace Initiator received the responses.
          type: integer
        ttl:
          description: Ttl field value for a returned trace response.
          type: integer
          minimum: 0
          maximum: 255
          readOnly: true
        vrfName:
          description: The name of the Virtual Router of the originator
          type: string
          readOnly: true
        srcMac:
          description: Mac address of the MP that responded to the trace request
          type: string
          readOnly: true
        hostName:
          description: The host name of the replying node
          type: string
          readOnly: true
        lastSrcMac:
          description: >-
            The MAC address of the node that forwarded the trace to the
            responding node
          type: string
          readOnly: true
        lastHostName:
          description: >-
            The host name of the node that forwarded the trace to the responding
            node
          type: string
          readOnly: true
        spbmVlanId:
          description: The SPBM VLAN id used for the trace
          type: integer
          readOnly: true
        BMac:
          description: The multicast MAC address for the group
          type: string
          readOnly: true
        isid:
          description: Isid id for the group
          type: integer
          readOnly: true
    CfmL2IpPingReplySettings:
      description: >-
        The L2 IP ping operation result. This schema is used by Fabric Engine
        only.
      type: object
      properties:
        sendOrder:
          description: |
            An index to distinguish among multiple L2Ping sessions
            This value is assigned sequentially from 1. It denotes
            order that sessions were sent. It correlates to the number
            of paths found and stored in the rcCfmTransmitL2IpPingEntry.
          type: integer
        vrfId:
          description: The VRF id for which the L2ping was issued.
          type: integer
          readOnly: true
        vlanId:
          description: The VLAN id for which the L2ping was issued
          type: integer
          readOnly: true
        destMac:
          description: An indication of the target MAC Address
          type: string
          readOnly: true
        portName:
          $ref: '#/components/schemas/PortName'
          readOnly: true
        destHostName:
          description: The host name of the responding node
          type: string
          readOnly: true
        size:
          description: The number of bytes of data sent
          type: integer
          readOnly: true
        pktsTx:
          description: Number of Packets transmitted for this vlan/mac
          type: integer
          readOnly: true
        pktsRx:
          description: Number of Packets received for this vlan/mac
          type: integer
          readOnly: true
        percentLossWhole:
          description: Percentage of packet loss for this vlan/mac
          type: integer
          readOnly: true
        percentLossFract:
          description: Percentage of packet loss for this vlan/mac
          type: integer
          readOnly: true
        minRoundTrip:
          description: Min time for round-trip for this vlan/mac in us
          type: integer
          readOnly: true
        maxRoundTrip:
          description: Max time for round-trip for this vlan/mac in us
          type: integer
          readOnly: true
        rttAvgWhole:
          description: Average time for round-trip for this vlan/mac in us
          type: integer
          readOnly: true
        rttAvgFract:
          description: Fractional portion of Average time for round-trip
          type: integer
          readOnly: true
        flag:
          description: |
            Result flag indicating status or error code.
            Each enum value represents a status or error case:
          type: string
          enum:
            - NO_ERROR
            - INTERNAL_ERROR
            - INVALID_MAC
            - MEP_DISABLED
            - INVALID_MD
            - INVALID_MA
            - NO_MEP_FOUND
            - UNKNOWN_SERVICE_INSTANCE
            - L2PING_COMPLETED
            - L2PING_TO_OWN_MEP_MAC
          readOnly: true
    CfmL2IpTraceReplySettings:
      description: >-
        The L2 IP traceroute operation result. This schema is used by Fabric
        Engine only.
      type: object
      properties:
        sendOrder:
          description: |
            An index to distinguish among multiple L2Trace sessions
            This value is assigned sequentially from 1. It denotes
            order that sessions were sent. It correlates to the number
            of paths found and stored in the rcCfmTransmitL2IpTraceEntry.
          type: integer
          readOnly: true
        hop:
          description: The number of L2 hops away from L2Trace initiator.
          type: integer
          minimum: 0
          maximum: 255
          readOnly: true
        receiveOrder:
          description: |
            An index to distinguish among multiple L2Trace responses
            with the same Send Transaction Identifier field  value.
            This value is assigned sequentially from 1, in the order
            that the Linktrace Initiator received the responses. A
            zero value may be seen in error conditions
          type: integer
          readOnly: true
        ttl:
          description: Ttl field value for a returned L2Trace response.
          type: integer
          minimum: 0
          maximum: 255
          readOnly: true
        vrfId:
          description: The VRF id for which IP traceroute was issued.
          type: integer
          readOnly: true
        vlanId:
          description: The VLAN id for which IP traceroute was issued.
          type: integer
          minimum: 1
          maximum: 4094
          readOnly: true
        destMac:
          description: An indication of the target MAC Address transmitted
          type: string
          readOnly: true
        seqNumber:
          description: >-
            The transaction identifier/sequence number used in linktrace message
            packet
          type: integer
          readOnly: true
        portName:
          $ref: '#/components/schemas/PortName'
          readOnly: true
        srcMac:
          description: >-
            Mac address of the MP that responded to L2Trace request for this
            L2traceReply
          type: string
          readOnly: true
        hostName:
          description: The host name of the replying node
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        lastSrcMac:
          description: >-
            The MAC address of the node that forwarded the L2Trace to the
            responding node
          type: string
          readOnly: true
        lastHostName:
          description: >-
            The host name of the node that forwarded the L2Trace to the
            responding node
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        flag:
          description: |
            L2Trace result flag indicating status or error code.
            Each enum value represents a status or error case.
            NO_ERROR
            INTERNAL_ERROR
            INVALID_MAC
            MEP_DISABLED (Mep must be enabled in order to perform L2Trace)
            NO_L2_TRACE_RESPONSE (No L2Trace response received)
            L2_TRACE_TO_OWN_MEP_MAC (L2Trace to own Mep MAC is not sent)
            L2_TRACE_COMPLETE 
            LOOKUP_FAILURE
          type: string
          enum:
            - NO_ERROR
            - INTERNAL_ERROR
            - INVALID_MAC
            - MEP_DISABLED
            - NO_L2_TRACE_RESPONSE
            - L2_TRACE_TO_OWN_MEP_MAC
            - L2_TRACE_COMPLETE
            - LOOKUP_FAILURE
          readOnly: true
    CfmLbmReply:
      description: The L2 ping(lbm) operation result
      type: object
      properties:
        result:
          description: The result to the L2 ping command. (Fabric Engine only)
          type: string
          readOnly: true
        time:
          description: Time taken for the ping reply. (Switch Engine only)
          type: integer
          readOnly: true
        seqNumber:
          description: >-
            The transaction identifier/sequence number used in ping message
            packet. (Switch Engine only)
          type: integer
          readOnly: true
        size:
          description: The number of bytes of data sent. (Switch Engine only)
          type: integer
          readOnly: true
        srcMac:
          description: MAC address of the replying host. (Switch Engine only)
          type: string
          readOnly: true
    CfmLtmReply:
      description: The L2 traceroute(ltm) operation result
      type: object
      properties:
        ttl:
          description: |
            Ttl field value for a returned L2Trace response.
            Used for both Fabric Engine and Switch Engine devices.
          type: integer
          readOnly: true
        srcMac:
          description: >
            Mac address of the MP that respond to the L2Trace request for this
            L2traceReply.

            Used for both Fabric Engine and Switch Engine devices.
          type: string
          readOnly: true
        replyIngrMac:
          description: |
            If the ingrAction object contains the value ING_NO_TLV,
            then the contents of this object are meaningless, else it's
            the ingress MAC address.
            Used for both Fabric Engine and Switch Engine devices.
          type: string
          readOnly: true
        replyEgrsMac:
          description: >
            If the egrAction object contains the value EGR_NO_TLV,

            then the contents of this object are meaningless, else it's the
            egress MAC address.

            Used for both Fabric Engine and Switch Engine devices.
          type: string
          readOnly: true
        mepId:
          description: Transmitting MEP id. (Fabric Engine only)
          type: integer
          readOnly: true
        hop:
          description: The number of hops away from L2Trace initiator. (Fabric Engine only)
          type: integer
          readOnly: true
        receiveOrder:
          description: |
            An index to distinguish among multiple LTRs with the same
            LTR Transaction Identifier field  value. This value is
            assigned sequentially from 1, in the order that the Linktrace
            Initiator received the LTRs.
            (Fabric Engine only)
        domainName:
          description: Maintenance Domain Name. (Fabric Engine devices)
          type: string
          readOnly: true
        associationName:
          description: Maintenance Association Name. (Fabric Engine devices)
          type: string
          readOnly: true
        forwarded:
          description: |
            Indicates if a LTM was forwarded by the responding MP, as
            returned in the 'FwdYes' flag of the flags field.
            Used for both Fabric Engine and Switch Engine devices.
          type: boolean
          readOnly: true
        terminalMep:
          description: |
            A boolean value stating whether the forwarded LTM reached
            a MEP enclosing its MA, as returned in the Terminal MEP flag
            of the Flags field.
            (Fabric Engine only)
          type: boolean
          readOnly: true
        lastEgrId:
          description: |
            An octet field holding the Last Egress Identifier returned
            in the LTR Egress   Identifier TLV of the LTR. The Last Egress
            Identifier identifies the MEP Linktrace Indicator that
            originated, or the Linktrace Responder that forwarded, the LTM
            to which this LTR is the response. This is the same value as
            the Egress Identifier TLV of that LTM.
            (Fabric Engine only)
          type: string
          readOnly: true
        nextEgrId:
          description: |
            An octet field holding the Next Egress Identifier returned in
            the LTR Egress Identifier TLV of the LTR. The Next Egress
            Identifier Identifies the Linktrace Responder that transmitted
            this LTR, and can forward the LTM to the next hop. This is the
            same value as the Egress Identifier TLV of the forwarded LTM,
            if any. If the FwdYes bit of the Flags field is false, the
            contents of this field are undefined, and the field is ignored
            by the receiver.
            (Fabric Engine only)
          type: string
          readOnly: true
        relayAction:
          description: |
            Relay action which can have the following values:
            {RLY_HIT 
            RLY_FDB
            RLY_MPDB 
            UNKNOWN}
            Used for both Fabric Engine and Switch Engine devices.
          type: string
          enum:
            - RLY_HIT
            - RLY_FDB
            - RLY_MPDB
            - UNKNOWN
          readOnly: true
        ingrAction:
          description: |
            The value returned in the Ingress Action Field of the LTM.
            The value ING_NO_TLV indicates that no Reply Ingress TLV
            was returned in the LTM.
            Used for both Fabric Engine and Switch Engine devices.
          type: string
          enum:
            - ING_OK
            - ING_DOWN
            - ING_BLOCKED
            - ING_VID
            - ING_NO_TLV
          readOnly: true
        ingrPortIdSubtype:
          description: >
            Format of the Ingress Port ID. If the ingrAction object contains 

            the value ING_NO_TLV, then the contents of this object are
            meaningless.

            (Fabric Engine only)
          type: string
          enum:
            - INTERFACE_ALIAS
            - PORT_COMPONENT
            - MAC_ADDR
            - NETWORK_ADDR
            - INTERFACE_NAME
            - AGENT_CIRCUIT_ID
            - LOCAL
          readOnly: true
        ingrPortId:
          description: >
            Ingress Port ID. For Fabric Engine, the format of this object is
            determined by

            the value of the ingrPortIdSubtype object.

            If the ingrAction object contains the value ING_NO_TLV, then

            the contents of this object are meaningless.

            Used for both Fabric Engine and Switch Engine devices.
          type: string
          readOnly: true
        egrAction:
          description: |
            The value returned in the Egress Action Field of the LTM. The
            value EGR_NO_TLV indicates that no Reply Egress TLV was
            returned in the LTM.
            Used for both Fabric Engine and Switch Engine devices.
          type: string
          enum:
            - EGR_OK
            - EGR_DOWN
            - EGR_BLOCKED
            - EGR_VID
            - EGR_NO_TLV
          readOnly: true
        egrPortIdSubtype:
          description: |
            Format of the Egress Port ID. If the egrAction
            object contains the value EGR_NO_TLV, then the contents
            of this object are meaningless.
            (Fabric Engine only)
          type: string
          enum:
            - INTERFACE_ALIAS
            - PORT_COMPONENT
            - MAC_ADDR
            - NETWORK_ADDR
            - INTERFACE_NAME
            - AGENT_CIRCUIT_ID
            - LOCAL
          readOnly: true
        egrPortId:
          description: >
            Egress Port ID. For Fabric Engine, the format of this object is
            determined by

            the value of the egrPortIdSubtype object.

            If the ingrAction object contains the value EGR_NO_TLV, then

            the contents of this object are meaningless.

            Used for both Fabric Engine and Switch Engine devices.
          type: string
          readOnly: true
        seqNumber:
          description: >-
            The transaction identifier/sequence number used in ping message
            packet. (Switch Engine only)
          type: integer
          readOnly: true
    AccountType:
      type: object
      description: |
        This object consists of the account priviledge level.
      properties:
        level:
          description: |
            The type of account (mapping to NOS values shown below):
            |                  |   Fabric Engine     | Switch Engine
            |------------------|---------------------|-----------------
            |    ADMIN         |   read-write-all    |    admin       |
            |    ADMIN_LIMITED |   read-write        |    no support  |
            |    L3_LIMITED    |   layer3            |    no support  |
            |    L2_Limited    |   layer2            |    no support  |
            |    L1_Limited    |   layer1            |    no support  |
            |    READ_ONLY     |   read-only         |    user        |
          type: string
          enum:
            - ADMIN
            - ADMIN_LIMITED
            - L3_LIMITED
            - L2_LIMITED
            - L1_LIMITED
            - READ_ONLY
    UsernameString:
      description: >-
        A user name string (minimum and maximum lengths are consistent with VOSS
        and EXOS limits)
      type: string
      minLength: 1
      maxLength: 32
    Username:
      type: object
      description: >-
        A user name object (minimum and maximum lengths are consistent with VOSS
        and EXOS limits)
      properties:
        username:
          $ref: '#/components/schemas/UsernameString'
    AaaSecret:
      description: secret (i.e. password) associated with a user account
      type: object
      properties:
        value:
          description: >
            User account secret (i.e. password). Switch Engine allows
            configuration

            of both cleartext and encrypted passwords. The maximum length for
            configuration

            of a cleartext password is 32 characters. For Switch Engine this
            corresponds to

            a maximum encrypted length of 120 characters. The maximum length of
            512 characters

            defined in this specification accomodates the longest possible
            encrypted password

            expected to be retrieved in a GET operation for Fabric Engine.
          type: string
          minLength: 0
          maxLength: 512
        isEncrypted:
          description: Specifies if the secret is encrypted (true) or clear text (false)
          type: boolean
    UserAccount:
      description: >-
        The object representing a user account consisting of the user and the
        account type
      type: object
      allOf:
        - $ref: '#/components/schemas/AccountType'
        - $ref: '#/components/schemas/Username'
        - type: object
          properties:
            secret:
              $ref: '#/components/schemas/AaaSecret'
    UsernameList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccount'
    AllCertsHash:
      description: >-
        SHA-256 hash of all the certificates in the switch. Switch Engine
        specific.
      x-nos: switch-engine
      type: object
      properties:
        switchCertHash:
          $ref: '#/components/schemas/Hash'
        trustedCACertsHash:
          $ref: '#/components/schemas/Hash'
        ocspCACertsHash:
          $ref: '#/components/schemas/Hash'
    VlanIdExplicit:
      description: This object represents a VLAN id
      type: object
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    DhcpRelayServer:
      description: Basic settings of a DHCP Relay server.
      type: object
      properties:
        enable:
          description: >-
            Server state. This is Fabric Engine specific within the context of
            vrf settings.
          type: boolean
          default: false
        ipAddress:
          description: >-
            Ip address of the DHCP Relay server. On Fabric Engine only available
            within the context of vrf settings.
          type: string
          format: ipv4
        srcIpAddress:
          description: >-
            Primary Ip address of the VLAN interface. This is Fabric Engine
            specific within the context of vrf settings.
          type: string
          format: ipv4
      required:
        - ipAddress
    DhcpRelayVlanSettings:
      description: >
        An object containing the DHCP Relay state and the list of all servers
        configured on a VLAN.
      type: object
      properties:
        enable:
          description: >-
            DHCP Relay state on VLAN interface. This setting shows the status of
            dhcp-relay on a VLAN interface.
          type: boolean
          default: false
        servers:
          description: >-
            List of DHCP Relay servers. This is Switch Engine specific. On
            Fabric Engine the server list will be displayed per vrf.
          type: array
          items:
            $ref: '#/components/schemas/DhcpRelayServer'
        dhcpSmartRelay:
          description: >-
            This setting shows the status of the smart relay on a per VLAN
            interface basis. It is an addition to the dhcp-relay settings.
            Switch Engine supports this attribute at the vlan and vrf levels.
          type: string
          enum:
            - DISABLED
            - PARALLEL
            - SEQUENTIAL
          default: DISABLED
    DhcpRelayVlansSettings:
      description: DHCP relay settings with Vlan ID
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/DhcpRelayVlanSettings'
    VrName:
      description: This object represents a Virtual Router (VR) name
      type: object
      properties:
        vrName:
          description: The name of the VR
          type: string
          minLength: 1
          maxLength: 32
    DhcpRelayVrfSettings:
      description: >
        An object containing the DHCP Relay state and the list of all servers
        configured on a VRF.
      type: object
      properties:
        enable:
          description: State of DHCP Relay on a VRF. This is Switch Engine specific.
          type: boolean
          default: false
        servers:
          description: List of DHCP Relay servers
          type: array
          items:
            $ref: '#/components/schemas/DhcpRelayServer'
        dhcpSmartRelay:
          description: >-
            The setting represents the setting of DHCP smart relay on a per VR
            level. This setting extends the DHCP relay configuration and is
            supported at both VLAN and VR levels by Switch Engine.
          type: string
          enum:
            - DISABLED
            - PARALLEL
            - SEQUENTIAL
          default: DISABLED
    DhcpRelayVrfsSettings:
      description: DHCP settings with vlan name
      allOf:
        - $ref: '#/components/schemas/VrName'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/DhcpRelayVrfSettings'
    DhcpRelayRootGetSettings:
      type: object
      description: The DHCP relay root level get configuration
      properties:
        vlan:
          description: The per VLAN DHCP relay settings
          type: array
          items:
            $ref: '#/components/schemas/DhcpRelayVlansSettings'
        vr:
          description: The per VR DHCP relay settings
          type: array
          items:
            $ref: '#/components/schemas/DhcpRelayVrfsSettings'
    DhcpSnoopTrustedPortList:
      description: DHCP Snoop trusted port list
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    PortNameOrAll:
      type: string
      description: |-
        Name of the interface, slot and port are required 
         to ensure deterministic results, sub_port is optional.  This definition allows for the keyword 'All' in place of the port name to allow settings to be applied to all ports in a group, for example a VLAN. 

         [slot]:[port][:sub_port]                 
         '1:1:1'    slot=1, port=1, sub_port=1    
         '12:101'   slot=12, port=101
      pattern: '^((\d{1,3}):(\d{1,3}):?(\d{1,2})?|All){1}$'
      example: '1:1:1'
    DhcpSnoopViolationAction:
      description: |
        Available DHCP Snoop violation action values.
      type: string
      enum:
        - DROP_PACKET
        - BLOCK_MAC
        - BLOCK_PORT
        - NONE
      default: NONE
    DhcpSnoopPort:
      description: |
        DHCP Snoop settings per port interface.
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortNameOrAll'
        duration:
          description: >-
            Duration of violationAction in seconds. A duration of 0 indicates
            permanent. This attribute applies only to BLOCK_MAC and BLOCK_PORT
            violationActions.
          type: integer
          minimum: 0
          maximum: 172800
          default: 0
        violationAction:
          $ref: '#/components/schemas/DhcpSnoopViolationAction'
      required:
        - portName
    DhcpSnoopPortList:
      description: >
        A list containing DHCP Snoop settings for ports - Switch Engine (EXOS)
        only.

        The port list may begin with the 'All' portName to indicate the settings

        apply to all ports in the VLAN. Ports that are added to this VLAN after
        the

        'All' portName is applied will be dynamically configured for
        dhcp-snooping.

        If the portName 'All' is specified, there should be no other entries

        specified in the port list.

        ```
          Example 1:
            enabled: True
            ports:
            [
              portName: 1:1
              duration: 3600
              violationAction: DROP_PACKET,
              portName: 2:2
              duration: 1600
              violationAction: BLOCK_MAC
            ]

          Example 2:
            enabled: True
            ports:
            [
              portName: All
              duration: 600
              violationAction: NONE
            ]
        ```
      type: array
      items:
        $ref: '#/components/schemas/DhcpSnoopPort'
    DhcpSnoopVlan:
      description: |
        DHCP Snoop settings per VLAN interface. Note, if the portName
        is set to 'All' there should be no other entries in the ports list.
      type: object
      properties:
        enabled:
          description: DHCP snooping state
          type: boolean
        ports:
          $ref: '#/components/schemas/DhcpSnoopPortList'
      example:
        enabled: true
        ports:
          - portName: '1:1'
            duration: 3600
            violationAction: DROP_PACKET
          - portName: '1:3:4'
            duration: 1600
            violationAction: BLOCK_MAC
    DhcpSnoopVlanSettings:
      description: DHCP Snoop settings per VLAN.
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - $ref: '#/components/schemas/DhcpSnoopVlan'
    DhcpSnoopSettings:
      description: DHCP Snoop settings
      type: object
      properties:
        trustedPorts:
          $ref: '#/components/schemas/DhcpSnoopTrustedPortList'
        vlans:
          description: |
            DHCP Snooping for all static VLAN interfaces. It is a per VLAN
            configuration applied separately to each of the VLAN interfaces.
          type: array
          items:
            $ref: '#/components/schemas/DhcpSnoopVlanSettings'
        allDynamicVlans:
          description: >
            DHCP Snooping for dynamic VLAN interfaces - Switch Engine (EXOS)
            only.

            It is a global configuration applied to all dynamic VLAN interfaces.
          $ref: '#/components/schemas/DhcpSnoopVlan'
    GeneralIpAddress:
      description: IP address (IPv4 or IPv6) using discriminator
      type: object
      properties:
        ipAddressType:
          description: >-
            Specifies the type of IP address in the following property (IPv4 or
            IPv6)
          type: string
          enum:
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/Ipv4Address'
        - $ref: '#/components/schemas/Ipv6Address'
      discriminator:
        propertyName: ipAddressType
        mapping:
          IPv4: '#/components/schemas/Ipv4Address'
          IPv6: '#/components/schemas/Ipv6Address'
    DnsServer:
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        vrName:
          description: >-
            Fabric Engine supports only "GlobalRouter" and considers servers
            configuration as global.
          type: string
          minLength: 1
          maxLength: 32
        dynamic:
          description: DNS server was learned dynamically through DHCP
          type: boolean
          default: false
          readOnly: true
    DnsDomain:
      type: object
      properties:
        name:
          description: The domain suffix used by DNS client
          type: string
        dynamic:
          description: DNS domain suffix was learned dynamically through DHCP
          type: boolean
          default: false
          readOnly: true
    DnsSettings:
      description: Domain Name System (DNS) Settings
      type: object
      properties:
        servers:
          description: >-
            List of DNS servers On Fabric Engine, only 3 servers can be created
            by user as "primary", "secondary" and "tertiary". There are also 3
            dynamically configured servers on Fabric Engine as "primaryDynamic",
            "secondaryDynamic", "tertiaryDynamic".
          type: array
          items:
            $ref: '#/components/schemas/DnsServer'
        domains:
          description: List of DNS client domains. Fabric Engine supports a single domain.
          type: array
          items:
            $ref: '#/components/schemas/DnsDomain'
    ElrpReportingType:
      description: The type associated with ELRP reporting.
      type: string
      enum:
        - LOG
        - TRAP
        - LOG_AND_TRAP
      default: LOG_AND_TRAP
      example: LOG_AND_TRAP
    ElrpPortDownType:
      description: The port down type associated with ELRP port actions.
      type: string
      enum:
        - NONE
        - PERMANENT
        - TEMPORARY
      default: NONE
      example: TEMPORARY
    ElrpActionPort:
      description: >-
        The port type associated with ELRP port actions.  This field is ignored
        when the port action type is NONE.
      type: string
      enum:
        - INGRESS
        - EGRESS
      default: INGRESS
      example: INGRESS
    ElrpVlanSettings:
      description: |
        An object containing the ELRP configuration for this VLAN including 
        the list of all ports on which ELRP is enabled on this VLAN.
      type: object
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        enabled:
          description: ELRP enabled on this VLAN.
          type: boolean
          default: false
          example: true
        reporting:
          description: ELRP reporting settings for this VLAN.
          type: string
          $ref: '#/components/schemas/ElrpReportingType'
        actionType:
          description: Type of disable port action.
          type: string
          $ref: '#/components/schemas/ElrpPortDownType'
        temporaryDuration:
          description: >-
            Length of time in seconds that a port is kept down when TEMPORARY
            disable port action is configured.  This value is ignored when NONE
            or PERMANENT disable port action is configured.
          type: integer
          minimum: 15
          maximum: 600
          default: 30
          example: 30
        actionPort:
          description: >-
            Port on which ELRP action is to be taken.  This field is ignored
            when the port action type is NONE.
          type: string
          $ref: '#/components/schemas/ElrpActionPort'
        ports:
          description: List of ELRP enabled ports on this VLAN.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
      required:
        - vlanId
        - enabled
    ElrpSettings:
      description: >-
        ELRP settings. On Fabric Engine (VOSS) only "enabled" attribute is
        supported.
      type: object
      properties:
        enabled:
          description: ELRP protocol enabled/disabled
          type: boolean
          example: true
        vlans:
          description: List of ELRP enabled VLANs.
          type: array
          items:
            $ref: '#/components/schemas/ElrpVlanSettings'
      required:
        - enabled
    TransmissionSpeed:
      description: >
        Available speed values (in Mbps/Gbps) that can be set on the device when
        auto-negotiation is

        disabled (autoNegotiationEnabled is set to false). Capabilities vary per
        port type and per platform.

        The "AUTO" value will be returned only in GET operations for those ports
        that are part of a 

        VIM and where the VIM Speed is automatically set. Fabric Engine (VOSS)
        does not support speed

        values 20G and 50G.
      type: string
      enum:
        - 0M
        - 10M
        - 100M
        - 1G
        - 2.5G
        - 5G
        - 10G
        - 20G
        - 25G
        - 40G
        - 50G
        - 100G
        - AUTO
      default: 100M
    TransmissionType:
      description: >
        Available transmissions type that can be set on the device when
        auto-negotiation is disabled

        (autoNegotiationEnabled is set to false). Capabilities can vary per port
        type and per platform

        (for example some platforms/ports do not offer half duplex).
      type: string
      enum:
        - HALF_DUPLEX
        - FULL_DUPLEX
        - NONE
      default: FULL_DUPLEX
    FlowControl:
      description: >
        Available flow control settings. Fabric Engine (VOSS) does

        not support RX_ENABLE and PFC_ENABLE values. For Fabric Engine (VOSS) 

        this attribute can only be set when the boot config flag
        flow-control-mode

        is enabled, otherwise it should not be specified in the payload.
      type: string
      enum:
        - ENABLE
        - DISABLE
        - RX_ENABLE
        - PFC_ENABLE
      default: DISABLE
    ForwardErrorCorrection:
      description: |
        IEEE Forward Error Correction (FEC) options. The AUTO
        setting automatically configures FEC based on port 
        speed and pluggable module type and is only applicable
        to Fabric Engine.
      type: string
      enum:
        - NONE
        - CLAUSE_74
        - CLAUSE_91_108
        - AUTO
      default: NONE
    EthernetInterface:
      description: >-
        This object represents all the settings available for an ethernet
        interface.
      type: object
      properties:
        enabled:
          description: A value of true indicates the port is enabled.
          type: boolean
          default: true
        description:
          description: A textual description of the interface.
          type: string
          maxLength: 255
        speed:
          $ref: '#/components/schemas/TransmissionSpeed'
        duplex:
          $ref: '#/components/schemas/TransmissionType'
        autoNegotiationEnabled:
          type: boolean
          description: Status of auto-negotiation.
          default: true
        autoAdvertisementsList:
          description: >
            The list of the port's autonegotiation advertisement settings.

            This attribute can only be set on the device when
            autoNegotiationEnabled

            is true. If autoNegotiationEnabled is true and a value is not
            provided,

            the application should set the advertised speed and duplex

            based on the default value for the port type.
          type: array
          items:
            $ref: '#/components/schemas/AutoNegotiationAdvertisements'
          default:
            - NONE
        flowControl:
          $ref: '#/components/schemas/FlowControl'
        debounceTimer:
          description: |
            The value of the port debounce timer in milliseconds. This value
            represents the delay link in flap detection after a link goes down.
            The range for Switch Engine is [0-5000] and the range for Fabric
            Engine is [0-300000]. A value of 0 is the default on both operating
            systems and this indicates there is no delay in link down detection.
          type: integer
          format: int32
          minimum: 0
          maximum: 300000
          default: 0
        channelized:
          description: >
            A value of true indicates channelization is enabled on the port.
            This 

            parameter applies to Fabric Engine.  For Switch Engine the partition

            property specifies the type of partitioning on the port.
          type: boolean
          default: false
        partition:
          $ref: '#/components/schemas/PortPartitions'
        fec:
          $ref: '#/components/schemas/ForwardErrorCorrection'
        jumboEnable:
          description: >
            A value of true indicates jumbo frames are enabled on the port and
            it's MTU

            is set to the global 'l2mtu' setting. This setting is only
            applicable to Switch

            Engine.
          type: boolean
          default: false
        eee:
          description: >
            A value of true indicates the Energy Efficient Ethernet (EEE) option
            is

            enabled on the port.  If enabled the port will advertise to its link

            partner that it is EEE capable at certain speeds.
          type: boolean
          default: false
        portMode:
          description: |
            A value of True will enable the port on the current vlan to perform
            tagging on the incoming and outgoing traffic. This is Fabric Engine
            specific.
          type: boolean
          default: false
        nativeVlan:
          description: >
            The VLAN ID assigned to untagged frames received on this trunk
            port. 

            This field is meaningless when the port is not a trunk port
            (portMode 

            is True). This is Fabric Engine specific.
          type: integer
          format: int32
          minimum: 0
          maximum: 4094
        ipArpInspectionTrusted:
          description: >-
            A value of true indicates that the interface is trusted for ARP
            inspection purposes. This parameter applies to Fabric Engine only.
          type: boolean
    EthernetInterfaceComponentLevel:
      description: >-
        This object represents the component-level settings of all Ethernet
        Interface.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortName'
        settings:
          $ref: '#/components/schemas/EthernetInterface'
    FabricAttachMode:
      description: Fabric attach mode. Switch Engine only.
      type: string
      enum:
        - NONE
        - CLIENT
        - PROXY
        - STANDALONE_PROXY
        - SERVER
      readOnly: true
    UpLinkPortNameOrNone:
      type: string
      description: >-
        The uplink port name for standalone proxy operation. Name of the
        interface, slot and port are required to ensure deterministic results,
        sub_port is optional. This definition allows for the string 'None' to
        unconfigure the uplink port. Switch Engine only.

         [slot]:[port][:sub_port] '1:1:1'    slot=1, port=1, sub_port=1 '12:101'   slot=12, port=101
      pattern: '^((\d{1,3}):(\d{1,3}):?(\d{1,2})?|None){1}$'
      default: None
    ZeroTouchClientType:
      description: Zero Touch Client element type
      type: string
      enum:
        - CAMERA
        - ONA_SDN
        - ONA_SPB_OVER_IP
        - PHONE
        - ROUTER
        - SECURITY_DEVICE
        - SRVR_ENDPT
        - SWITCH
        - VIDEO
        - VIRTUAL_SWITCH
        - WAP_TYPE1
        - WAP_TYPE2
    ZeroTouchClientSettings:
      description: |
        This object represents the Zero Touch Client auto-attach settings for 
        the fabric attach application.
      type: object
      properties:
        dot1p:
          description: >
            Usage of dot1p port priority for untagged packets. If dot1p is
            True, 

            priority must be -1.  If dot1p is False, priority must be 0-7. Dot1p

            is True by default. Switch Engine only.
          type: boolean
        enabled:
          description: The status of the Zero Touch Client. Switch Engine only.
          type: boolean
        nsi:
          description: |
            The management network service (i-sid) of the Zero Touch Client 
            auto-attach specification. On Fabric Engine the maximum value is
            16000000.
          type: integer
          minimum: 1
          maximum: 16777215
        priority:
          description: |
            Priority to be used for untagged packets. Priority value of -1 
            indicates dot1p is True. Switch Engine only
          type: integer
          minimum: -1
          maximum: 7
        type:
          $ref: '#/components/schemas/ZeroTouchClientType'
        vlanId:
          description: >
            VLAN ID component of the Zero Touch Client auto-attach
            specification.

            4095 is not used. 4096 is reserved for untagged case. Fabric Engine

            exclusively supports untagged traffic.
          type: integer
          minimum: 1
          maximum: 4096
    ZeroTouchClientSettingsList:
      description: |
        A list containing the the Zero Touch Client Objects.
      type: array
      items:
        $ref: '#/components/schemas/ZeroTouchClientSettings'
    DeviceFabricAttachSettings:
      description: |
        This object represents the fabric attach settings for a device. 
        For Switch Engine this setting is read-only.
      type: object
      properties:
        enabled:
          description: >-
            The status of the Fabric Attach service. On Switch Engine, this
            setting is read only.
          type: boolean
        fabricAttachMode:
          $ref: '#/components/schemas/FabricAttachMode'
        forwarding:
          description: >
            When set to true Fabric Attach Proxy switches send management VLAN
            data to clients.

            This setting applies to Switch Engine only.
          type: boolean
          default: true
        uplinkPort:
          $ref: '#/components/schemas/UpLinkPortNameOrNone'
        mgmtVlan:
          description: |
            The VLAN advertised to fabric attach clients for them to use
            as the management VLAN. Value set to 0 indicates that no management 
            VLAN is configured. Value set to 4095 indicates that Management 
            traffic should be sent untagged. This setting applies
            to Switch Engine only.
          type: integer
          minimum: 0
          maximum: 4095
          default: 0
        zeroTouchClient:
          $ref: '#/components/schemas/ZeroTouchClientSettingsList'
    FabricAttachOrigin:
      description: |
        Fabric Attach Origin indicates how the FA interface was created: 
        manual (CLI/SNMP) or ZTF (Auto-Sense).
      type: string
      default: CONFIG
      enum:
        - CONFIG
        - AUTO_SENSE
      readOnly: true
    PortFabricAttachSettings:
      description: This object represents the fabric attach settings for a port.
      type: object
      properties:
        authenticationKey:
          description: |
            Provides access to the Fabric Attach  message authentication key
            for the associated interface. Switch Engine allows configuration
            of both cleartext and encrypted keys. The maximum length for
            configuration of a cleartext key is 32 characters. For Switch
            Engine this corresponds to a maximum encrypted length of 110
            characters.
          type: string
          minLength: 0
          maxLength: 110
        enabled:
          description: Status of Fabric Attach on a port.
          type: boolean
        forwarding:
          description: >
            When set to true Fabric Attach Proxy switches send management VLAN
            data to clients.

            This setting applies to Switch Engine only.
          type: boolean
          default: true
        keyEncrypted:
          description: >
            A value of true indicates the key encryption in enabled for 

            the associated interface. This setting applies to Switch Engine
            only.
          type: boolean
        origin:
          $ref: '#/components/schemas/FabricAttachOrigin'
        mgmtNsi:
          description: >-
            Fabric Attach management network service (i-sid) id for the
            associated interface. Zero means the management i-sid feature is not
            enabled. Values of 16000000 and greater are reserved for internal
            use. This setting applies to Fabric Engine only.
          type: integer
          minimum: 0
          maximum: 16777215
          format: int32
        mgmtCvid:
          description: |
            Fabric Attach management customer vid for the associated interface.
            4095 is not used. 4096 is reserved for untagged case. Zero means
            the management i-sid feature is not enabled. This setting applies
            to Fabric Engine only.
          type: integer
          minimum: 0
          maximum: 4096
          format: int32
        messageAuthenticationEnabled:
          description: >-
            Status of the Fabric Attach message authentication for the
            associated interface.
          type: boolean
    PortFabricAttachReadSettings:
      description: >-
        This object represents the port fabric attach settings (port is
        specified as a property).
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        portSettings:
          $ref: '#/components/schemas/PortFabricAttachSettings'
    FabricAttachAssignmentState:
      description: The current state of the Fabric Attach nsi <-> vlan assignment.
      type: string
      enum:
        - PENDING
        - ACTIVE
        - REJECTED
        - OTHER
      readOnly: true
    FabricAttachStateAssignmentSettingsStatic:
      description: >-
        This object contains the nsi <-> vlan assignments configured. Switch
        Engine only
      type: object
      properties:
        nsi:
          description: >
            nsi component of the nsi <-> VLAN assignment. A value of 0 indicates
            no associated nsi for the VLAN.
          type: integer
          minimum: 0
          maximum: 16777215
        state:
          $ref: '#/components/schemas/FabricAttachAssignmentState'
        vlanId:
          description: >-
            A value that uniquely identifies the Customer VLAN. For Switch
            Engine, the 4095 value is for Management VLAN.
          type: integer
          minimum: 1
          maximum: 4095
    FabricAttachAllSettings:
      description: Fabric Attach settings for device and ports
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceFabricAttachSettings'
        - type: object
          properties:
            ports:
              description: A list containing the Fabric Attach ports and their settings.
              type: array
              items:
                $ref: '#/components/schemas/PortFabricAttachReadSettings'
            assignmentList:
              description: >-
                A list containing the vlan<->nsi assignments configured on the
                device. Switch Engine only
              type: array
              items:
                $ref: '#/components/schemas/FabricAttachStateAssignmentSettingsStatic'
    DeviceForwardingSettings:
      description: Device Forwarding Settings for the device
      type: object
      properties:
        l2mtu:
          description: >
            Maximum transmission unit. On Fabric Engine (VOSS), acceptable
            values for sys mtu are 1522, 1950, or 9600. On Switch Engine (EXOS),
            acceptable values for jumbo frame size are 1523-9216. On Switch
            Engine (EXOS) a value of true for jumboEnable indicates jumbo frames
            are enabled on the port and it's MTU
          type: integer
          format: int32
          minimum: 1522
          maximum: 9600
    IgmpVrConfigSettings:
      description: IGMP configuration settings for a VR
      type: object
      properties:
        reportSuppressionEnabled:
          description: |
            A value of true indicates the report suppression feature
            is enabled - Switch Engine (EXOS) only.
          type: boolean
    IgmpVrSettings:
      description: IGMP settings for a VR
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/IgmpVrConfigSettings'
    Ipv4AddressNonObject:
      type: string
      format: ipv4
    IgmpQuerier:
      description: IGMP querier object
      type: object
      properties:
        enabled:
          description: |
            The admin enabled setting that indicates if IGMP querying
            is enabled.
          type: boolean
        version:
          description: >-
            The version of IGMP protocol. On Fabric Engine, the version is
            configured per VLAN. IGMPv1 version is not defined here and thus
            IGMPv1 configuration on Fabric Engine is not displayed.
          type: string
          enum:
            - IGMPv2
            - IGMPv3
        interval:
          description: |
            The interval in seconds at which the general queries are
            sent by the IGMP querier.
            Fabric Engine supports values 1 through 65535.
          type: integer
          format: int32
          minimum: 1
          maximum: 214748364
        address:
          description: |
            IP address of the IGMP querier - Fabric Engine (VOSS) only.
          allOf:
            - $ref: '#/components/schemas/Ipv4AddressNonObject'
    IgmpVlanBaseSettings:
      description: IGMP base settings for a VLAN (contains only scalar parameters)
      type: object
      properties:
        snoopingEnabled:
          description: |
            The admin enabled setting that indicates if IGMP snooping
            is enabled on this VLAN.
          type: boolean
        querier:
          $ref: '#/components/schemas/IgmpQuerier'
        fastLeaveEnabled:
          description: |
            A value of true indicates the fast leave feature is enabled.
          type: boolean
        reportSuppressionEnabled:
          description: |
            A value of true indicates the report suppression feature
            is enabled - Fabric Engine (VOSS) only.
          type: boolean
        routedSpbQuerierAddress:
          description: |
            The pseudo address of the IGMP SPB routed querier.
            This setting applies to Fabric Engine only.
          allOf:
            - $ref: '#/components/schemas/Ipv4AddressNonObject'
    IgmpVportSettings:
      description: IGMP VLAN and port (vport) settings
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
        staticRouterPortEnabled:
          description: |
            A value of true indicates this is a static router port.
            This configures the vport to forward all multicast groups to
            that port, even if IGMP joins are not received on the port.
          type: boolean
        staticGroups:
          description: |
            A list of static IGMP groups configured on this vport.
            This configures the vport to forward specific multicast groups to
            that port, even if IGMP joins are not received on the port.
          type: array
          items:
            $ref: '#/components/schemas/MulticastIpv4Address'
    IgmpVportSettingsList:
      description: >-
        IGMP settings for all vports on a VLAN. On Fabric Engine, only static
        multicast group vport members are available using this component. Vports
        which are excluded, or blocked, from the multicast group are not
        configurable through this component.
      type: array
      items:
        $ref: '#/components/schemas/IgmpVportSettings'
    IgmpVlanConfigSettings:
      description: IGMP configuration settings for a VLAN
      allOf:
        - $ref: '#/components/schemas/IgmpVlanBaseSettings'
        - type: object
          properties:
            vports:
              $ref: '#/components/schemas/IgmpVportSettingsList'
            routedSpbQuerierAddress:
              description: |
                The pseudo address of the IGMP SPB routed querier.
                This setting applies to Fabric Engine only.
              allOf:
                - $ref: '#/components/schemas/Ipv4AddressNonObject'
    IgmpVlanSettings:
      description: IGMP complete settings for a VLAN
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - $ref: '#/components/schemas/IgmpVlanConfigSettings'
    IgmpAllSettings:
      description: All IGMP settings on the device
      type: object
      properties:
        vrs:
          description: IGMP settings for all VRs - Switch Engine (EXOS) only
          type: array
          items:
            $ref: '#/components/schemas/IgmpVrSettings'
        vlans:
          description: IGMP settings for all VLANs
          type: array
          items:
            $ref: '#/components/schemas/IgmpVlanSettings'
    InstantPortAuthProtocolTypes:
      type: string
      enum:
        - DOT1X
        - MAC
    InstantPortAuthProtocols:
      description: Authentication protocols
      type: object
      properties:
        authProtocols:
          description: >-
            The authentication protocols available with the match category
            AUTHENTICATION.
          type: array
          items:
            $ref: '#/components/schemas/InstantPortAuthProtocolTypes'
          example:
            - DOT1X
            - MAC
    MacAddressAndMask:
      description: |
        MAC address followed by mask. This is represented as two MAC addresses
        separated by a forward slash.  Each MAC address is colon separated and
        can be upper or lower case.
      type: object
      properties:
        data:
          type: string
          pattern: >-
            ^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})[/]([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$
          example: '00:04:96:98:65:1C/FF:FF:FF:00:00:00'
    LLDPDeviceTypes:
      type: object
      properties:
        data:
          description: >-
            The device types available for use with the match category
            LLDP_DEVTYPE.
          type: string
          enum:
            - AVAYA_PHONE
            - GEN_TEL_PHONE
            - ROUTER
            - BRIDGE
            - REPEATER
            - WLAN_ACCESS_PT
            - DOCSIS_CABLE_SER
            - STATION_ONLY
            - OTHER
    ExtremeSwitchType:
      type: object
      properties:
        data:
          description: Single device type for use with the match category EXTREME_SWITCH.
          type: string
          enum:
            - ''
    InstantPortRoles:
      type: object
      properties:
        role:
          description: >-
            The role to be matched in an authentication response. The role "*"
            is considered to be a wildcard role and therefore matches any role
            contained in the authentication response. This role is specified in
            the RADIUS Extreme Security Profile VSA by the "Role=" tag.
          type: string
          example: role1
    MatchCategories:
      description: |
        The match category associated with the Instant Port device type. The
        LLDP_MAC_DEVTYPE category can not be used for profile creation or
        modification. In this case the LLDP_MAC and LLDP_DEVTYPE categories and
        data are provided as separate entries in a matchList. The combined
        LLDP_MAC_DEVTYPE category is used to display state information
        to indicate that a user has matched on both categories.
      type: string
      enum:
        - MAC_LEARN
        - LLDP_MAC
        - LLDP_DEVTYPE
        - LLDP_MAC_DEVTYPE
        - EXTREME_SWITCH
        - AUTHENTICATION
    DeviceMatch:
      description: >
        This object represents an instant-port profile device match entry. The
        format

        of the match data is determined by the value of the category field.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/MatchCategories'
      anyOf:
        - $ref: '#/components/schemas/MacAddressAndMask'
        - $ref: '#/components/schemas/LLDPDeviceTypes'
        - $ref: '#/components/schemas/ExtremeSwitchType'
        - $ref: '#/components/schemas/InstantPortRoles'
      discriminator:
        propertyName: category
        mapping:
          MAC_LEARN: '#/components/schemas/MacAddressAndMask'
          LLDP_MAC: '#/components/schemas/MacAddressAndMask'
          LLDP_DEVTYPE: '#/components/schemas/LLDPDeviceTypes'
          EXTREME_SWITCH: '#/components/schemas/ExtremeSwitchType'
          AUTHENTICATION: '#/components/schemas/InstantPortRoles'
    ActionType:
      description: |
        Specifies which Action Type is being configured.  Possible values are:
          SET_VLAN_UNTAGGED - Add port to a VLAN as untagged using MAC-based VLAN.
          SET_VLAN_TAGGED - Add port to VLANs as tagged.
          RATE_LIMIT_BROADCAST - Set rate limit for broadcast traffic.
          RATE_LIMIT_UNKNOWN_UNICAST - Set rate limit for unicast traffic.
          RATE_LIMIT_MULTICAST - Set rate limit for multicast traffic.
          SET_QOS_EXAMINATION - Set QOS examination settings.
          SET_QOS_REPLACEMENT - Set QOS replacement settings.
          SET_QOS_EXAM_REPLACE - Set both QOS examination and replacement settings.
          SET_INTERLINK - Configure the port as an aggregation port for VLANs (Interlink).
          SET_AUTHENTICATED - Suppress or require authentication for devices.
          SET_LLDP - Configure LLDP-related actions, such as TLV advertisement.
          SET_CDP - Configure CDP-related actions, such as TLV advertisement.
      type: object
      properties:
        actionType:
          description: The type associated with an Instant Port action.
          type: string
          enum:
            - SET_VLAN_UNTAGGED
            - SET_VLAN_TAGGED
            - RATE_LIMIT_BROADCAST
            - RATE_LIMIT_UNKNOWN_UNICAST
            - RATE_LIMIT_MULTICAST
            - SET_QOS_EXAMINATION
            - SET_QOS_REPLACEMENT
            - SET_QOS_EXAM_REPLACE
            - SET_INTERLINK
            - SET_AUTHENTICATED
            - SET_LLDP
            - SET_CDP
      required:
        - actionType
    SetVlanList:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            vlanList:
              description: >
                The list of VLAN's associated with an instant-port device type
                action.

                Each VLAN in the list is represented as a string containing a
                VLAN identifier

                which can range from 1 to 4094.  Each entry in the list can also
                be expressed

                as a range if the identifiers are consecutive.

                Example: ["10", "20", "30-35"]
              type: array
              items:
                type: string
    RateLimit:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            rateLimit:
              description: |
                The rate limit in packets per second (pps) associated with an
                instant-port storm control action.
              type: integer
              format: int32
    QosExaminationType:
      description: The type associated with an Instant Port QoS Examination action.
      type: string
      enum:
        - 802_1P
        - DSCP
        - NONE
    QosExamination:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            qosExamination:
              description: The type of QoS examination.
              $ref: '#/components/schemas/QosExaminationType'
    QosReplacementType:
      description: The type associated with an Instant Port QoS Replacement action.
      type: string
      enum:
        - 802_1P
        - DSCP
        - BOTH
        - NONE
    QosReplacement:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            qosReplacement:
              description: The type of QoS replacement.
              $ref: '#/components/schemas/QosReplacementType'
    QosExamReplace:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            qosExamination:
              description: The type of QoS examination.
              $ref: '#/components/schemas/QosExaminationType'
            qosReplacement:
              description: The type of QoS replacement.
              $ref: '#/components/schemas/QosReplacementType'
    InterlinkType:
      description: The type associated with an Instant Port Interlink action.
      type: string
      enum:
        - LOCAL
        - GLOBAL
    Interlink:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            interlink:
              description: The type of instant-port Interlink.
              $ref: '#/components/schemas/InterlinkType'
            vlanList:
              description: >
                The list of VLAN's associated with an instant-port Interlink
                type action.

                Each VLAN in the list is represented as a string containing a
                VLAN identifier

                which can range from 1 to 4094.  Each entry in the list can also
                be expressed

                as a range if the identifiers are consecutive.

                Example: ["10", "20", "30-35"]
              type: array
              items:
                type: string
      required:
        - interlink
    InstantPortAuthModes:
      description: Authentication modes
      type: object
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - type: object
          properties:
            authMode:
              description: >-
                The authentication modes available as actions with the match
                category AUTHENTICATION.
              type: string
              enum:
                - OPTIONAL
                - REQUIRED
              default: REQUIRED
              example: OPTIONAL
    InstantPortLldpSelector:
      description: >
        Specifies which LLDP action is being configured.  Possible LLDP actions
        are:
          VLAN_NAME - Advertise the name of a tagged VLAN for the port.
          PORT_PROTOCOL_VLAN_ID - Advertise a VLAN and whether the port supports protocol-based VLANs or not.
          MED_VOICE - Advertise MED voice VLAN and DSCP value.
          MED_VOICE_SIGNALING - Advertise MED Signaling voice VLAN and DSCP value.
      type: object
      properties:
        lldpSelector:
          description: LLDP action type selector
          type: string
          enum:
            - VLAN_NAME
            - PORT_PROTOCOL_VLAN_ID
            - MED_VOICE
            - MED_VOICE_SIGNALING
      required:
        - lldpSelector
    InstantPortLldpVlanNameAction:
      description: LLDP VLAN Name advertise settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortLldpSelector'
        - type: object
          properties:
            vlanId:
              description: VLAN ID to advertise
              $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - vlanId
    InstantPortLldpPortProtocolVlanIdAction:
      description: LLDP port protocol VLAN ID advertise settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortLldpSelector'
        - type: object
          properties:
            vlanId:
              description: Port protocol VLAN ID to advertise
              $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - vlanId
    InstantPortLldpMedVoiceAction:
      description: LLDP MED voice settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortLldpSelector'
        - type: object
          properties:
            dscp:
              description: MED voice VLAN DSCP value to advertise
              type: integer
              format: int32
              minimum: 0
              maximum: 63
            vlanId:
              description: MED voice VLAN ID value to advertise
              $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - dscp
        - vlanId
    InstantPortLldpMedVoiceSigAction:
      description: LLDP MED voice signaling settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortLldpSelector'
        - type: object
          properties:
            dscp:
              description: MED voice signaling VLAN DSCP value to advertise
              type: integer
              format: int32
              minimum: 0
              maximum: 63
            vlanId:
              description: MED voice signaling VLAN ID value to advertise
              $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - dscp
        - vlanId
    InstantPortLldpActions:
      description: Instant Port LLDP actions
      type: object
      discriminator:
        propertyName: lldpSelector
        mapping:
          VLAN_NAME: '#/components/schemas/InstantPortLldpVlanNameAction'
          PORT_PROTOCOL_VLAN_ID: '#/components/schemas/InstantPortLldpPortProtocolVlanIdAction'
          MED_VOICE: '#/components/schemas/InstantPortLldpMedVoiceAction'
          MED_VOICE_SIGNALING: '#/components/schemas/InstantPortLldpMedVoiceSigAction'
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - anyOf:
            - $ref: '#/components/schemas/InstantPortLldpVlanNameAction'
            - $ref: '#/components/schemas/InstantPortLldpPortProtocolVlanIdAction'
            - $ref: '#/components/schemas/InstantPortLldpMedVoiceAction'
            - $ref: '#/components/schemas/InstantPortLldpMedVoiceSigAction'
    InstantPortCdpSelector:
      description: >
        Specifies which CDP action is being configured.  Possible CDP actions
        are:
          VOICE_VLAN - When requested, respond with voice VLAN reply TLV.
          POWER_AVAILABLE - Advertise power available TLV.
      type: object
      properties:
        cdpSelector:
          description: CDP action type selector
          type: string
          enum:
            - VOICE_VLAN
            - POWER_AVAILABLE
      required:
        - cdpSelector
    InstantPortCdpVoiceVlanAction:
      description: CDP voice VLAN settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortCdpSelector'
        - type: object
          properties:
            vlanId:
              description: VLAN ID to advertise for Voice VLANs
              $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - vlanId
    InstantPortCdpPowerAvailableAction:
      description: CDP power available settings
      type: object
      allOf:
        - $ref: '#/components/schemas/InstantPortCdpSelector'
    InstantPortCdpActions:
      description: Instant Port CDP actions
      type: object
      discriminator:
        propertyName: cdpSelector
        mapping:
          VOICE_VLAN: '#/components/schemas/InstantPortCdpVoiceVlanAction'
          POWER_AVAILABLE: '#/components/schemas/InstantPortCdpPowerAvailableAction'
      allOf:
        - $ref: '#/components/schemas/ActionType'
        - oneOf:
            - $ref: '#/components/schemas/InstantPortCdpVoiceVlanAction'
            - $ref: '#/components/schemas/InstantPortCdpPowerAvailableAction'
    DeviceActionWithIndex:
      description: >
        This object represents an instant-port profile device action entry. The
        format

        of the match data is determined by the value of the actionType field.
      type: object
      properties:
        actionIndex:
          description: |
            The index associated with this action.  This index is used to 
            identify the location for insertion of a new action into a
            profile device. Since actions do not have a name this index
            is required to identify an action to be deleted or replaced.
          type: integer
          minimum: 0
      anyOf:
        - $ref: '#/components/schemas/SetVlanList'
        - $ref: '#/components/schemas/RateLimit'
        - $ref: '#/components/schemas/QosExamination'
        - $ref: '#/components/schemas/QosReplacement'
        - $ref: '#/components/schemas/QosExamReplace'
        - $ref: '#/components/schemas/Interlink'
        - $ref: '#/components/schemas/InstantPortAuthModes'
        - $ref: '#/components/schemas/InstantPortLldpActions'
        - $ref: '#/components/schemas/InstantPortCdpActions'
      discriminator:
        propertyName: actionType
        mapping:
          SET_VLAN_UNTAGGED: '#/components/schemas/SetVlanList'
          SET_VLAN_TAGGED: '#/components/schemas/SetVlanList'
          RATE_LIMIT_BROADCAST: '#/components/schemas/RateLimit'
          RATE_LIMIT_UNKNOWN_UNICAST: '#/components/schemas/RateLimit'
          RATE_LIMIT_MULTICAST: '#/components/schemas/RateLimit'
          SET_QOS_EXAMINATION: '#/components/schemas/QosExamination'
          SET_QOS_REPLACEMENT: '#/components/schemas/QosReplacement'
          SET_QOS_EXAM_REPLACE: '#/components/schemas/QosExamReplace'
          SET_INTERLINK: '#/components/schemas/Interlink'
          SET_AUTHENTICATED: '#/components/schemas/InstantPortAuthModes'
          SET_LLDP: '#/components/schemas/InstantPortLldpActions'
          SET_CDP: '#/components/schemas/InstantPortCdpActions'
      example:
        actionIndex: 2
        actionType: SET_VLAN_TAGGED
        vlanList:
          - 4000
          - 4001
    DeviceTypeWithActionIndex:
      description: |
        A device type object containing it's location index. The index
        identifies the location of the device within an instant port
        profile.  The index specifies the location to insert the  new
        device into a previously installed profile. The index value of each
        device within a profile is returned on get operations.
      type: object
      properties:
        name:
          description: Device type name (must be unique within a given profile).
          type: string
          minLength: 1
          maxLength: 32
        index:
          description: >
            Device type index.  This index is used to identify the location for

            insertion of a new device into a previously installed profile.  If

            the index is not specified, the new device is appended as the

            last device in the profile.  The maximum number of devices per
            profile

            is 20.  The application running on the operating system ensures that

            the indices are programmed starting from 0 with no gaps between

            devices.
          type: integer
          minimum: 0
          maximum: 19
        matchList:
          description: |
            A list of match conditions associated with this device type.
          type: array
          items:
            $ref: '#/components/schemas/DeviceMatch'
          example:
            - category: MAC_LEARN
              data: '00:04:96:98:65:1C/FF:FF:FF:00:00:00'
            - category: LLDP_DEVTYPE
              data: BRIDGE
            - category: LLDP_MAC
              data: '00:04:96:98:65:36/FF:FF:FF:FF:FF:FF'
            - category: AUTHENTICATION
              role: role1
            - category: EXTREME_SWITCH
        actionList:
          description: |
            A list of actions performed if the match conditions are met for this
            device type.  Note that only a single VLAN ID should be specified 
            for SET_VLAN_UNTAGGED.  Note also that VLAN-type actions and 
            Interlink-type actions cannot both be used for a single match 
            condition.  Interlink-type actions are the only actions that 
            should be used with EXTREME_SWITCH match conditions.
          type: array
          items:
            $ref: '#/components/schemas/DeviceActionWithIndex'
          example:
            - actionType: SET_VLAN_UNTAGGED
              vlanList:
                - 5
            - actionType: SET_VLAN_TAGGED
              vlanList:
                - 20
                - 30
                - 40
            - actionType: RATE_LIMIT_BROADCAST
              rateLimit: 10000
            - actionType: SET_QOS_EXAMINATION
              qosExamination: DSCP
            - actionType: SET_AUTHENTICATED
              authMode: OPTIONAL
      required:
        - name
        - matchList
    PortProfileWithIndex:
      description: An instant-port profile object with device type and action indices.
      type: object
      properties:
        name:
          description: Instant port profile name (must be unique on the device).
          type: string
          minLength: 1
          maxLength: 32
        securePort:
          description: Authentication protocol(s) to use with Secure Port.
          $ref: '#/components/schemas/InstantPortAuthProtocols'
        devices:
          description: >
            A list of device types, each containing its index, for this
            instant-port profile.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DeviceTypeWithActionIndex'
      example:
        name: profile1
        securePort:
          authProtocols:
            - MAC
        devices:
          - name: extreme_switch
            index: 3
            matchList:
              - category: EXTREME_SWITCH
            actionList:
              - actionIndex: 0
                actionType: SET_VLAN_UNTAGGED
                vlanList:
                  - 5
              - actionIndex: 1
                actionType: SET_VLAN_TAGGED
                vlanList:
                  - 20
                  - 30
                  - 40
              - actionIndex: 2
                actionType: RATE_LIMIT_BROADCAST
                rateLimit: 10000
              - actionIndex: 3
                actionType: SET_QOS_EXAMINATION
                qosExamination: DSCP
              - actionIndex: 4
                actionType: SET_AUTHENTICATED
                authMode: OPTIONAL
    ProfilePortList:
      description: An object representing a list of ports assigned to a profile.
      type: object
      properties:
        portList:
          description: A list of ports
          type: array
          items:
            $ref: '#/components/schemas/PortName'
      example:
        portList:
          - '1:1'
          - '1:2'
    PortProfileGet:
      allOf:
        - $ref: '#/components/schemas/PortProfileWithIndex'
        - $ref: '#/components/schemas/ProfilePortList'
    PortProfileGlobal:
      description: The instant-port profile summary settings for the device.
      x-nos: switch-engine
      type: object
      properties:
        learningVlan:
          description: |
            The VLAN ID of the instant-port learning VLAN.  A value
            of zero indicates the learning VLAN is unset.
          type: integer
          minimum: 0
          maximum: 4094
        profiles:
          description: |
            The names of the installed profiles on the device and
            and the assigned ports for each.
          type: array
          items:
            $ref: '#/components/schemas/PortProfileGet'
    Ipv4AddressMask0:
      description: General IPv4 address with mask length
      type: object
      properties:
        address:
          description: IPv4 address
          type: string
          format: ipv4
        maskLength:
          type: integer
          minimum: 0
          maximum: 32
    Ipv6AddressMask0:
      description: General IPv6 address with mask length
      type: object
      properties:
        address:
          description: IPv6 address
          type: string
          format: ipv6
        maskLength:
          type: integer
          minimum: 0
          maximum: 128
    GeneralIpAddressMask0:
      description: IP address (IPv4 or IPv6) and mask length using discriminator
      type: object
      properties:
        ipAddressType:
          description: >-
            Specifies the type of IP address and mask length in the following
            property ipv4 or ipv6
          type: string
          enum:
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/Ipv4AddressMask0'
        - $ref: '#/components/schemas/Ipv6AddressMask0'
      discriminator:
        propertyName: ipAddressType
        mapping:
          IPv4: '#/components/schemas/Ipv4AddressMask0'
          IPv6: '#/components/schemas/Ipv6AddressMask0'
    IpRoute:
      type: object
      description: >-
        This object represents the common properties for any type of
        route(statically created or dynamically learned)
      properties:
        prefix:
          $ref: '#/components/schemas/GeneralIpAddressMask0'
        nextHop:
          $ref: '#/components/schemas/GeneralIpAddress'
        name:
          description: >
            An optional name associated with this route. This parameter only
            applies to Fabric Engine (VOSS)
          type: string
          minLength: 0
          maxLength: 64
        preference:
          description: >
            The preference (administrative distance) associated with this route.
            This parameter allows preference

            to be set on a per prefix basis and only applies to Fabric Engine
            (VOSS). For Switch Engine (EXOS),

            the preference can only be set on a per route type basis. The
            preference is used for route selection

            when the same prefix is learned from multiple protocols. A lower
            value is more preferential. For Fabric

            Engine the range is 1-255 on a static route.
          type: integer
          minimum: 0
          maximum: 65534
        weight:
          description: >
            The route metric (cost) associated with this route. The weight is
            used for route selection

            when multiple instance of the same prefix are learned from the same
            protocol. For Switch Engine (EXOS)

            the value range is 1 to 255, whereas Fabric Engine (VOSS) supports
            of a range of 1 to 64,000
          type: integer
          minimum: 1
          maximum: 64000
        defaultRoute:
          description: >-
            A value of True indicates this route is a default route (0.0.0.0/0
            or ::/0)
          type: boolean
          default: false
        blackhole:
          description: A value of True indicates this route is a blackhole route.
          type: boolean
          default: false
    IpStaticRoute:
      allOf:
        - $ref: '#/components/schemas/IpRoute'
        - type: object
          description: This object represents a static route specific information.
          properties:
            enabled:
              description: >
                A value of True indicates this route is enabled.  This parameter
                only applies to Fabric Engine (VOSS),

                for Switch Engine (EXOS) all configured static routes are
                considered as enabled.
              type: boolean
            pingEnabled:
              description: >
                A value of true indicates this route is configured to use ping
                to monitor the

                health of the next-hop gateway. The route will not become active
                until an echo

                reply is received from the gateway.  A route will transition
                from active to

                inactive after a configured number of echo requests are not
                replied to.

                This property applies to Switch Engine (EXOS) only. There is
                also a global

                setting to enable and disable the sending of pings to a gateway
                and is enabled

                by default. This property can only be set at the time of
                creation of the static

                route.
              default: false
              type: boolean
    IpStaticRouteWithVr:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/IpStaticRoute'
    StaticRouteListAllVrs:
      description: A list of statically configured IP routes
      type: array
      items:
        $ref: '#/components/schemas/IpStaticRouteWithVr'
    LagId:
      description: |
        LAG config ID - Master port on Switch Engine, MLT ID on Fabric Engine.
        On Fabric Engine, the ID can be between 1 and 512.
      type: string
      minLength: 1
      maxLength: 32
    LagBasicConfigs:
      description: LAG config basic settings.
      type: object
      properties:
        lagId:
          $ref: '#/components/schemas/LagId'
        name:
          description: LAG config name. This property only applies to Fabric Engine.
          type: string
          minLength: 0
          maxLength: 20
    LagMembers:
      description: Ports configured for the LAG
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    LagLoadBalanceAlgo:
      description: LAG load balancing algorithm. VOSS will always return/set CUSTOM.
      type: string
      enum:
        - L2
        - L3
        - L3_L4
        - CUSTOM
        - PORT
    LagMode:
      description: The LAG mode that is currently running.
      type: string
      enum:
        - STATIC
        - LACP
        - VLACP
        - HEALTH_CHECK
    LagCreateConfigs:
      description: LAG config settings needed for creation.
      allOf:
        - $ref: '#/components/schemas/LagBasicConfigs'
        - type: object
          properties:
            memberPorts:
              $ref: '#/components/schemas/LagMembers'
            lacpKey:
              description: >
                The current operational value of the key for the Aggregation
                Port.

                Ports with the same key will be aggregated as a single trunk. It

                is used only by VOSS.
              type: string
              minLength: 1
              maxLength: 512
            loadBalanceAlgo:
              $ref: '#/components/schemas/LagLoadBalanceAlgo'
            mode:
              $ref: '#/components/schemas/LagMode'
      required:
        - lagId
    LagConfigs:
      description: LAG config settings
      allOf:
        - $ref: '#/components/schemas/LagCreateConfigs'
        - type: object
          properties:
            dynamic:
              description: >
                The LAG was created dynamically and is not part of the static
                switch

                configuration.
              type: boolean
              default: false
              readOnly: true
    LldpSettings:
      description: LLDP settings
      type: object
      properties:
        advertisementInterval:
          description: >
            The interval in seconds at which LLDP frames are transmitted on
            behalf of this LLDP agent.
          type: integer
          minimum: 5
          maximum: 32768
          default: 30
          format: int32
        initDelaySeconds:
          description: >-
            The delay time in seconds between a request to enable LLDP and
            starting the protocol. For Fabric Engine, this is not configurable.
          type: integer
          minimum: 1
          maximum: 10
          default: 2
          format: int32
        holdMultiplier:
          description: >
            The multiplier to apply to the advertisementInterval to determine
            the time to live. The time to live 

            is the length of time neighbor information is maintained between
            received LLDP frames before neighbor 

            information is aged out.
          type: integer
          minimum: 2
          maximum: 10
          default: 4
          format: int32
        fastStartRepeatCount:
          description: >
            Specifies the number of times the switch transmits LLDP MED TLVs
            each second (once it detects a neighbor

            transmitting LLDP MED TLVs). Switch Engine only.
          type: integer
          minimum: 1
          maximum: 10
          default: 3
          format: int32
    PortLldpBasic:
      description: This object represents basic LLDP settings for a port.
      type: object
      properties:
        transmitEnabled:
          description: |
            A value of true indicates the port is enabled for LLDP transmit.  
            Default value for Fabric Engine devices is true.
          type: boolean
        receiveEnabled:
          description: |
            A value of true indicates the port is enabled for LLDP receive.
            Default value for Fabric Engine devices is true.
          type: boolean
    PortLldpAdvertiseVlanObject:
      description: |
        This object represents LLDP advertisement settings of a specific TLV 
        for a port that also include one or more VLANs.
      type: object
      properties:
        advertise:
          description: A value of true indicates the TLV is advertised.
          type: boolean
        vlanList:
          description: >
            List of VLANs. If the list is empty, the setting applies to all
            VLANs.
          type: array
          items:
            $ref: '#/components/schemas/VlanIdNonObject'
    PortLldpAdvertiseSettings:
      description: >
        This object represents LLDP advertisement settings for a port.

        Each attribute tracks if the specific TLV is advertised to the
        neighbors.

        LLDP must be enabled on the port first, for getting the TLVs to be
        advertised.
      type: object
      properties:
        systemCapabilities:
          description: >
            A value of true indicates the system capabilities TLV is advertised.

            The TLV contains bridging and routing status. Bridging is
            considered 

            to be enabled, when there is at least one VLAN with more than two
            ports.

            Routing is considered to be enabled, when at least one VLAN has 

            IP forwarding enabled.

            For Fabric Engine, default value is True.
          type: boolean
        systemDescription:
          description: >
            A value of true indicates the system description TLV is advertised.

            The TLV contains the software version details and the date of the
            package.
          type: boolean
          default: true
        systemName:
          description: |
            A value of true indicates the system name TLV is advertised.
          type: boolean
          default: true
        portDescription:
          description: |
            A value of true indicates the port description TLV is advertised.
            The TLV contains the port display information.
            For Fabric Engine, default value is True.
          type: boolean
        managementAddress:
          description: |
            A value of true indicates the management address TLV is advertised.
            The TLV contains the IP address configured on the management VLAN.
            For Fabric Engine, default value is True.
          type: boolean
        medCapabilities:
          description: >
            A value of true indicates the Media Endpoint Discovery (MED) 

            capabilities TLV is advertised.

            This must be set to true before any of the other MED TLVs can be
            enabled.

            This must be set to false after all of the other MED TLVs are set to
            false.

            The TLV is sent only after detecting a MED capable device on the
            port.

            For Fabric Engine, default value is True.
          type: boolean
        medPower:
          description: >
            A value of true indicates the MED power requirements TLV is
            advertised.

            This can be enabled only on PoE capable ports.

            The TLV is sent only after detecting a MED capable device on the
            port.

            For Fabric Engine, default value is True.
          type: boolean
        dot1Vlan:
          description: |
            This represents VLAN name TLV that contains the IEEE 802.1Q tag 
            for a VLAN - Switch Engine (EXOS) only.
          allOf:
            - $ref: '#/components/schemas/PortLldpAdvertiseVlanObject'
        dot1PortProtocolVlan:
          description: >
            This represents the port and protocol VLAN ID TLV - Switch Engine
            (EXOS) only.

            A separate TLV is sent for each VLAN.
          allOf:
            - $ref: '#/components/schemas/PortLldpAdvertiseVlanObject'
        dot3Power:
          description: >
            A value of true indicates the Power over Ethernet (PoE) capabilities
            TLV 

            is advertised. It is recommended to enable this only on PoE capable
            ports.

            On Fabric Engine devices, this attribute is not configurable.
          type: boolean
          default: false
        dot3MacPhy:
          description: >
            A value of true indicates the MAC/PHY configuration/status TLV is
            advertised.

            The TLV contains the MAC and physical layer capabilities.
          type: boolean
          default: false
        location:
          description: |
            A value of true indicates the MED location TLV is advertised.
            PortLldpLocation contains the location information.
            For Fabric Engine, default value is True.
          type: boolean
        networkPolicy:
          description: |
            A value of true indicates MED network policy TLV is advertised.
            For Fabric Engine, default value is True.
          type: boolean
        inventory:
          description: >
            A value of true indicates that lldp neighbors learned based on MED
            Inventory information will be advertised.

            This is for Fabric Engine only and default value is true.
          type: boolean
          default: true
    PortLldpLocation:
      description: This object represents location identification information.
      type: object
      properties:
        civicAddress:
          description: >
            Civic based location information.

            Switch Engine uses a flexible format but has a minimum

            requirement of 6 bytes.

            Fabric Engine uses civic address LCI data format.

            A valid request for Fabric Engine should always start with
            country-code label

            followed by 2 characters for the country code. Country-code is not 

            enough for setting the civic address, so another eligible label
            should 

            also be set. 

            All eligible labels that can be set in a civic address are:

            additional-code, additional-information, apartment, block, building,

            city, city-district, county, floor, house-number,
            house-number-suffix,

            landmark, leading-street-direction, name, place-type, pobox, 

            postal-community-name, postal-zip-code, room-number, state, street,

            street-suffix, trailing-street-suffix.
          type: string
          example: country-code RO city Bucharest street Avenue building 10
        ecsElin:
          description: |
            Emergency call service (ECS) emergency line information
            number (ELIN).
          type: string
          maxLength: 25
        coordinate:
          description: >
            Coordinate based location information that comprises of

            latitude, longitude, altitude and reference datum.

            Same format applies to both Switch Engine and Fabric Engine.

            Switch Engine has a strict length requirement of 16 bytes.

            A valid request for Fabric Engine should look like in the example.

            Not all of latitude, longitude, latitude and datum have to be set in
            the same request.
          type: string
          example: >-
            latitude <value> <SOUTH | NORTH> longitude <value> <EAST | WEST>
            altitude <value> <meters | floors> datum <NAD83/MLLW | NAD83/NAVD88
            | WGS84>
    PortLldpMedPolicyAppType:
      description: MED policy application type
      type: string
      enum:
        - GUEST_VOICE
        - GUEST_VOICE_SIGNALING
        - SOFT_PHONE_VOICE
        - STREAMING_VIDEO
        - VIDEO_CONFERENCING
        - VIDEO_SIGNALING
        - VOICE
        - VOICE_SIGNALING
    PortLldpMedPolicyObject:
      description: >
        This object represents the MED (Media Endpoint Discovery) network
        policy 

        advertisement settings for an application, VLAN and port.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PortLldpMedPolicyAppType'
        dscp:
          description: DSCP value to advertise for this policy.
          type: integer
          minimum: 0
          maximum: 63
          format: int32
        priority:
          description: 802.1p Layer 2 priority - Fabric Engine (VOSS) only.
          type: integer
          minimum: 0
          maximum: 7
          format: int32
        tagged:
          description: >
            Tagging option - true if tagged, false if untagged - Fabric Engine
            (VOSS) only.
          type: boolean
        vlanId:
          description: >
            VLAN identifier - The range is 1 to 4095 for Switch Engine (EXOS)
            and 

            0 to 4059 for Fabric Engine (VOSS).
          type: integer
        priorityTagged:
          description: >
            A value of true indicates priority tagging is enabled.

            Use this if the VLAN is configured as untagged - Switch Engine
            (EXOS) only.
          type: boolean
        origin:
          description: >
            Origin of MED network policy advertisement settings - Fabric Engine
            (VOSS) only.
          type: string
          enum:
            - CONFIG
            - AUTO_SENSE
          readOnly: true
    PortLldpMedPolicySettings:
      description: |
        A list containing the MED (Media Endpoint Discovery) network policy 
        advertisement settings for various applications. Up to 8 TLVs can 
        be advertised for a specific application per port-VLAN. The TLV 
        is sent only after detecting a MED capable device on the port.
        Only those that are advertised are present in the list.
        Before adding an PortLldpMedPolicyObject, medCapabilities in
        PortLldpAdvertisementSettings must be enabled first.
      type: array
      items:
        $ref: '#/components/schemas/PortLldpMedPolicyObject'
    PortLldpAllAdvertiseSettings:
      description: |
        This object represents all LLDP advertisement settings.
      type: object
      properties:
        advertise:
          $ref: '#/components/schemas/PortLldpAdvertiseSettings'
        location:
          $ref: '#/components/schemas/PortLldpLocation'
        medPolicy:
          $ref: '#/components/schemas/PortLldpMedPolicySettings'
    PortLldpSettings:
      allOf:
        - $ref: '#/components/schemas/PortLldpBasic'
        - $ref: '#/components/schemas/PortLldpAllAdvertiseSettings'
    PortLldp:
      description: This object represents a LLDP port and its settings.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortName'
        settings:
          $ref: '#/components/schemas/PortLldpSettings'
    LldpPortList:
      type: object
      properties:
        ports:
          description: A list containing the LLDP ports and their settings.
          type: array
          items:
            $ref: '#/components/schemas/PortLldp'
    LldpAllSettings:
      allOf:
        - $ref: '#/components/schemas/LldpSettings'
        - $ref: '#/components/schemas/LldpPortList'
    LinkDownAction:
      type: string
      enum:
        - CLEAR_FIRST_ARRIVAL_MACS
        - RETAIN_FIRST_ARRIVAL_MACS
      example: CLEAR_FIRST_ARRIVAL_MACS
    MacLockingPort:
      description: MAC-locking settings per port.
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        enabled:
          description: A value of true indicates MAC-locking is enabled on this port.
          type: boolean
        maxFaLearnLimit:
          description: >-
            Maximum first arrival MAC addresses allowed to communicate on this
            port.
          type: integer
          minimum: 0
          maximum: 600
        shutDownOnLimit:
          description: >-
            A value of true indicates MAC-locking should disable this port when
            the maximum first arrival limit is exceeded.
          type: boolean
        linkDownAction:
          description: MAC-locking action when port goes down.
          type: string
          $ref: '#/components/schemas/LinkDownAction'
          example: CLEAR_FIRST_ARRIVAL_MACS
        removeAgedMacs:
          description: >-
            A value of true indicates MAC-locking should remove learned MAC
            Addresses when they age out of the switch forwarding database.
          type: boolean
      required:
        - portName
        - enabled
    MacLockingCompleteSettings:
      description: The MAC-locking component level settings for the device.
      x-nos: switch-engine
      type: object
      properties:
        enabled:
          description: >-
            A value of true indicates MAC-locking is globally enabled on this
            switch.
          type: boolean
        ports:
          description: |
            The MAC-locking configuration settings for each port
            on the device.
          type: array
          items:
            $ref: '#/components/schemas/MacLockingPort'
      required:
        - enabled
        - ports
    Ipv4AddressMask:
      description: General IPv4 address with mask length
      type: object
      properties:
        address:
          description: IPv4 address
          type: string
          format: ipv4
        maskLength:
          type: integer
          minimum: 1
          maximum: 32
    Ipv6AddressMask:
      description: General IPv6 address with mask length
      type: object
      properties:
        address:
          description: IPv6 address
          type: string
          format: ipv6
        maskLength:
          type: integer
          minimum: 1
          maximum: 128
    GeneralIpAddressMask:
      description: IP address (IPv4 or IPv6) and mask length using discriminator
      type: object
      properties:
        ipAddressType:
          description: >-
            Specifies the type of IP address and mask length in the following
            property ipv4 or ipv6
          type: string
          enum:
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/Ipv4AddressMask'
        - $ref: '#/components/schemas/Ipv6AddressMask'
      discriminator:
        propertyName: ipAddressType
        mapping:
          IPv4: '#/components/schemas/Ipv4AddressMask'
          IPv6: '#/components/schemas/Ipv6AddressMask'
    MgmtInterfaceSettings:
      description: The management interface settings
      type: object
      properties:
        mode:
          description: |
            Management interface vlan mode.  This setting applies
            to Fabric Engine (VOSS) only.
          type: string
          enum:
            - OOB
        vlanId:
          description: The identifier of the VLAN
          type: integer
          readOnly: true
        enabled:
          description: |
            Management interface vlan enabled state.  This setting
            applies to Fabric Engine (VOSS) only.
          type: boolean
        dhcpClient:
          description: Management interface DHCP client address origin
          type: string
          enum:
            - OOB
            - VLAN
            - CYCLE
            - DISABLE
        addresses:
          description: List of management interface addresses
          type: array
          items:
            $ref: '#/components/schemas/GeneralIpAddressMask'
    MlagPeerId:
      description: This object represents MLAG peer identifier
      type: object
      properties:
        peerId:
          description: >-
            MLAG peer identifier - Name of the MLAG peer for Switch Engine
            (EXOS), value is always "Default" for Fabric Engine (VOSS) since
            only one peer is supported
          type: string
    MlagPeerBasicIpAddress:
      description: >-
        IP address of the MLAG peer - IPv4 or IPv6 for Switch Engine (EXOS),
        IPv4 only for Fabric Engine (VOSS)
      type: object
      properties:
        ipAddressType:
          description: >-
            Specifies the type of IP address in the following property (IPv4 or
            IPv6)
          type: string
          enum:
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/Ipv4Address'
        - $ref: '#/components/schemas/Ipv6Address'
      discriminator:
        propertyName: ipAddressType
        mapping:
          IPv4: '#/components/schemas/Ipv4Address'
          IPv6: '#/components/schemas/Ipv6Address'
    MlagPeerBasic:
      description: MLAG peer basic configuration object
      type: object
      properties:
        peerIpAddress:
          $ref: '#/components/schemas/MlagPeerBasicIpAddress'
        vrName:
          description: Virtual router identifier - Switch Engine (EXOS) only
          type: string
          minLength: 1
          maxLength: 32
    MlagPeerObject:
      description: MLAG peer configuration object
      type: object
      properties:
        lagId:
          description: >-
            MLT identifier of virtual-ist link -  used for simplified VIST -
            Fabric Engine (VOSS) only
          type: integer
          format: int32
        peerSysId:
          description: >-
            ISIS SPBM SMLT peer`s system-id for the SPBM instance - Fabric
            Engine (VOSS) only
          type: string
        virtualBmac:
          description: Virtual Backbone MAC of the VIST pair - Fabric Engine (VOSS) only
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
        vistVlanId:
          description: >-
            VLAN identifier of virtual inter-switch trunk - Fabric Engine (VOSS)
            only
          type: integer
          format: int32
        lacpSmltSysId:
          description: >-
            LACP SMLT system identifier, this should be configured to the same
            value on both peers in case LACP is used on split multi-link trunk
            (SMLT) - Fabric Engine (VOSS) only
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
    MlagPeerConfig:
      allOf:
        - $ref: '#/components/schemas/MlagPeerId'
        - $ref: '#/components/schemas/MlagPeerBasic'
        - $ref: '#/components/schemas/MlagPeerObject'
    MlagPortId:
      description: This object represents MLAG port identifier
      type: object
      properties:
        portId:
          description: MLAG port ID
          $ref: '#/components/schemas/LagId'
    MlagPortObject:
      description: MLAG port object
      type: object
      properties:
        mlagId:
          description: >-
            MLAG ID - Switch Engine (EXOS) only, Fabric Engine (VOSS) uses MLT
            ID
          type: integer
          format: int32
          minimum: 1
          maximum: 65000
    MlagPortConfig:
      allOf:
        - $ref: '#/components/schemas/MlagPortId'
        - $ref: '#/components/schemas/MlagPortObject'
    MlagPortSettings:
      description: A list containing the MLAG ports configured on the device.
      type: array
      items:
        $ref: '#/components/schemas/MlagPortConfig'
    MlagAllConfig:
      description: MLAG peer configuration on the device.
      type: object
      allOf:
        - $ref: '#/components/schemas/MlagPeerConfig'
        - type: object
          properties:
            ports:
              description: A list containing the MLAG ports configured on the device.
              type: array
              items:
                $ref: '#/components/schemas/MlagPortSettings'
    NtpServer:
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralHostOrIp'
        enabled:
          description: 'NTP server enabled state, always true on EXOS'
          type: boolean
          default: true
    NtpSettingsByVr:
      description: Network Time Protocol (NTP) settings for a particular virtual router
      type: object
      properties:
        vrName:
          description: >-
            The virtual router name. This property is ignored in VOSS and the
            following properties are considered global. For EXOS, the enabled
            and broadcastClientEnabled properties are per VR.
          type: string
          readOnly: true
          minLength: 1
          maxLength: 32
        enabled:
          description: >
            Enabled state for the protocol on the VR. Setting this on Switch
            Engine (EXOS) will set the 

            NTP state for each associated VLAN and the VR's global NTP protocol
            state.
          type: boolean
          default: false
        broadcastClientEnabled:
          description: >-
            The broadcast client setting on the VR. This attribute is not
            supported by Fabric Engine.
          type: boolean
          default: false
        pollInterval:
          description: >
            The time interval between NTP updates (seconds) is calculated as 2
            raised to the power of this value.

            This property does not apply to EXOS.
          type: integer
          default: 8
          minimum: 4
          maximum: 17
        servers:
          description: List of NTP servers on the VR
          type: array
          items:
            $ref: '#/components/schemas/NtpServer'
    NtpSettings:
      description: Network Time Protocol (NTP) Settings
      type: object
      properties:
        vrBasedSettings:
          description: >-
            A list of Network Time Protocol (NTP) Settings by virtual router
            (VR)
          type: array
          items:
            $ref: '#/components/schemas/NtpSettingsByVr'
    OspfMetricType:
      description: The OSPF route type corresponding to the metric
      type: string
      enum:
        - ASE_TYPE_1
        - ASE_TYPE_2
    OspfOriginate:
      description: OSPF originate settings
      type: object
      properties:
        default:
          description: |
            A value of true indicates this instance of OSPF may advertise
            the default route. For Switch Engine the advertisement is
            controlled by the setting of the always property. This property is
            not supported by Fabric Engine.
          type: boolean
        always:
          description: |
            A value of true indicates this instance of OSPF always advertises
            the default route if the default property is set to true. Otherwise,
            the default route is advertised only if a reachable default route
            exists in the route table.
          type: boolean
        metric:
          description: The metric for the default route advertised by this OSPF instance
          type: integer
          minimum: 1
          maximum: 65535
        metricType:
          $ref: '#/components/schemas/OspfMetricType'
    OspfArea:
      description: OSPF area settings
      type: object
      properties:
        area:
          description: The area ID for this OSPF instance in the form of an IPv4 address
          type: string
          format: ipv4
        enable:
          description: Enabled state of the OSPF area
          type: boolean
    OspfAreaList:
      description: A list of OspfArea objects
      type: array
      items:
        $ref: '#/components/schemas/OspfArea'
    RedistributeType:
      description: |
        The source protocol for route redistribution. Some
        of the protocols only apply to one of Switch Engine or Fabric Engine
        while others apply to both as indicated in the table below.

        | Protocol      | NOS supported |
        |---------------|---------------|
        | DIRECT        | Both          |
        | STATIC        | Both          |
        | OSPF          | Both          |
        | OSPF_INTRA    | Switch Engine |
        | OSPF_INTER    | Both          |
        | OSPF_EXT1     | Both          |
        | OSPF_EXT2     | Both          |
        | RIP           | Both          |
        | BGP           | Both          |
        | IBGP          | Both          |
        | EBGP          | Switch Engine |
        | ISIS          | Both          |
        | ISIS_L1       | Both          |
        | ISIS_L1_EXT   | Switch Engine |
        | ISIS_L2       | Both          |
        | ISIS_L2_EXT   | Switch Engine |
        | HOST_MOBILITY | Switch Engine |
        | DVR           | Fabric Engine |
      type: string
      enum:
        - DIRECT
        - STATIC
        - OSPF
        - OSPF_INTRA
        - OSPF_INTER
        - OSPF_EXT1
        - OSPF_EXT2
        - RIP
        - BGP
        - IBGP
        - EBGP
        - ISIS
        - ISIS_L1
        - ISIS_L1_EXT
        - ISIS_L2
        - ISIS_L2_EXT
        - HOST_MOBILITY
        - DVR
    OspfRedistributeType:
      description: OSPF redistribute type object
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RedistributeType'
    OspfRedistributeSettings:
      description: OSPF redistribute settings
      type: object
      properties:
        enable:
          description: >
            A value of true indicates this redistribution entry is enabled. For
            Fabric Engine

            a redistribution entry is created and can be separately admin up or
            down. For Switch Engine

            setting this property has no effect. There is no admin up or down
            state associated with entries.
          type: boolean
        metric:
          description: >
            The metric value associated with this entry's routes redistributed
            into OSPF. For Switch Engine

            a metric of 0 indicates the cost will be obtained from the source
            protocol. For example, for BGP

            cost is either the Multi-Exit Descrimintor (MED) or the AS PATH
            length of the BGP route.
          type: integer
          minimum: 0
          maximum: 65535
        metricType:
          $ref: '#/components/schemas/OspfMetricType'
        vrName:
          description: >
            The virtual router from which routes are redistributed into the
            current instance of OSPF.

            This property applies to inter VR route leaking and abscence of this
            parameter indicates that routes

            are redistributed within the VR given by the current OSPF instance.
          type: string
          minLength: 1
          maxLength: 32
    OspfRedistribute:
      allOf:
        - $ref: '#/components/schemas/OspfRedistributeType'
        - $ref: '#/components/schemas/OspfRedistributeSettings'
    OspfRedistributeList:
      description: A list of OspfRedistribute objects
      type: array
      items:
        $ref: '#/components/schemas/OspfRedistribute'
    OspfGetSettings:
      description: Per VR OSPF get settings
      type: object
      properties:
        enable:
          description: Enabled state of OSPF on the VR
          type: boolean
        routerId:
          description: >
            The router ID for this OSPF instance in the form of an IPv4 address.

            A value of 0.0.0.0 (or unset) indicates that the router ID is
            autoderived.

            For Switch Engine the derived value is based on the interface IP
            addresses

            configured on the system. At least one interface IP address must be
            configured

            before OSPF can be enabled. For Fabric Engine the value is derived
            from the

            chassis MAC address.
          type: string
          format: ipv4
        isAutoRouterId:
          description: >
            A value of true indicates that the routerId was automatically
            generated.

            This setting applies to Switch Engine only. If the routerId is not
            configured

            it is selected from the configured VLAN IP addresses on the system.
            The OSPF

            protocol can not be enabled unless at least one address is
            configured and

            enabled for IP forwarding.
          type: boolean
          readOnly: true
        isBoundaryRouter:
          description: >
            A value of true indicates this is an area boundary router. The value
            of this

            parameter is dynamically determined by the protocol and is not
            settable.
          type: boolean
          readOnly: true
        holdTime:
          description: >
            The minimum number of seconds between Shortest Path First (SPF)
            calculations.

            For Fabric Engine the range is 0, 3-60 seconds (default 10 seconds).

            For Switch Engine the range is 0-300 seconds (default 3 seconds).
          type: integer
          minimum: 0
          maximum: 300
        originate:
          $ref: '#/components/schemas/OspfOriginate'
        area:
          $ref: '#/components/schemas/OspfAreaList'
        export:
          $ref: '#/components/schemas/OspfRedistributeList'
    OspfGlobalSettingsWithVr:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/OspfGetSettings'
    OspfGlobalSettingsAllVrs:
      description: |
        The list of OSPF global configuration settings across
        all VR's on the device.
      type: array
      items:
        $ref: '#/components/schemas/OspfGlobalSettingsWithVr'
    OspfLinkType:
      description: |
        The OSPF link type.  A value of AUTO indicates that the link type
        is determined automatically from the interface type.
      type: string
      default: AUTO
      enum:
        - BROADCAST
        - POINT_TO_POINT
        - AUTO
    OspfAuthType:
      description: |
        The OSPF authentication type. Currently SHA1 and SHA2 are supported
        by Fabric Engine only.  The remaining types are supported by both
        Fabric Engine and Switch Engine.
      type: string
      enum:
        - NONE
        - SIMPLE_PASSWORD
        - MD5
        - SHA1
        - SHA2
    OspfAuth:
      description: OSPF authentication settings
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OspfAuthType'
        keyId:
          description: |
            The authentication key ID.
          type: integer
          minimum: 0
          maximum: 255
        keyString:
          description: >
            The authentication key string. For Fabric Engine the maximum
            cleartext

            length is 8 characters. For Switch Engine the maximum cleartext
            length

            is 8 characters for a simple password and 16 characters for md5.

            The maximum length specified in this specification corresponds to
            the

            encrypted length of a 16 character cleartext string. For Switch
            Engine

            only cleartext format is supported for configuration and encrypted
            format

            is supported for retrieval operations.
          type: string
          maxLength: 102
        isEncrypted:
          description: Specifies if the keyString is encrypted (true) or clear text (false)
          type: boolean
    OspfTimers:
      description: OSPF timer settings
      type: object
      properties:
        retransmitTimer:
          description: >
            The length of time (seconds) that the router waits before
            retransmitting an advertisement that is not acknowledged.

            For Fabric Engine the minimum value is 0 seconds.  For Switch Engine
            the minimum value is 1 second.
          type: integer
          minimum: 0
          maximum: 3600
        transitDelay:
          description: >
            The estimated time (seconds) required to transmit a link-state
            update over the interface.

            For Fabric Engine the minimum value is 0 seconds.  For Switch Engine
            the minimum value is 1 second.
          type: integer
          minimum: 0
          maximum: 3600
        helloInterval:
          description: >
            The time interval (seconds) between the hello packets sent by the
            router on the interface.
          type: integer
          minimum: 1
          maximum: 65535
        deadInterval:
          description: >
            The time interval (seconds) between received hello messages to
            declare the neighbor down.  

            For Fabric Engine the dead interval must be at least 4 times the
            hello interval.  For

            Switch Engine the dead interval must be greater then the hello
            interval.
          type: integer
          minimum: 1
          maximum: 2147483647
        waitTimer:
          description: >
            The time interval (seconds) between the interface coming up and the
            election of the Designated Router (DR)

            and the Border Designated Router (BDR). This is usually equal to the
            dead interval value.
          type: integer
          minimum: 1
          maximum: 2147483647
    OspfInterfaceSettings:
      description: Per VLAN interface OSPF settings
      type: object
      properties:
        enable:
          description: Enabled state of OSPF on the interface
          type: boolean
        area:
          description: The OSPF area ID for the interface in the form of an IPv4 address
          type: string
          format: ipv4
        linkType:
          $ref: '#/components/schemas/OspfLinkType'
        passive:
          description: A value of true indicates this interface is a passive OSPF interface
          type: boolean
        cost:
          description: >
            The OSPF cost associated with this interface and advertised in
            router link advertisements.

            For Fabric Engine the minimum value is 0.  For Switch Engine the
            minimum value is 1.
          type: integer
          minimum: 0
          maximum: 65535
        autoCost:
          description: >-
            A value of true indicates the cost is obtained automatically from
            the metric table.
          type: boolean
        mtuIgnore:
          description: >
            A value of true indicates that the MTU of incoming Data Base
            Description (DBD) packets is ignored.

            This setting only applies to Fabric Engine.
          type: boolean
        auth:
          $ref: '#/components/schemas/OspfAuth'
        timers:
          $ref: '#/components/schemas/OspfTimers'
    OspfInterfaceSettingsWithVlan:
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - $ref: '#/components/schemas/OspfInterfaceSettings'
    OspfInterfaceSettingsAllVlans:
      description: |
        The list of OSPF interface configuration settings across
        all OSPF VLAN's on the device.
      type: array
      items:
        $ref: '#/components/schemas/OspfInterfaceSettingsWithVlan'
    OspfComponentLevelSettings:
      description: Component level OSPF get settings
      x-nos: switch-engine
      type: object
      properties:
        global:
          $ref: '#/components/schemas/OspfGlobalSettingsAllVrs'
        interface:
          $ref: '#/components/schemas/OspfInterfaceSettingsAllVlans'
    PowerDetection:
      description: >
        Type of power detection. This type can be set per port level in Switch
        Engine(EXOS) and per device level in Fabric Engine(VOSS). 

        The values of BYPASS, AF_2_POINT_LEGACY, AF_ONLY, AF_4_POINT_LEGACY
        apply to Switch Engine(EXOS) and the values of NONE, LEGACY_CAPACITIVE,
        AF_4_POINT_ONLY, AF_4_POINT_LEGACY

        AF_2_POINT, AF_2_POINT_LEGACY apply to Fabric Engine(VOSS).
      type: string
      enum:
        - BYPASS
        - AF_ONLY
        - NONE
        - LEGACY_CAPACITIVE
        - AF_4_POINT_ONLY
        - AF_4_POINT_LEGACY
        - AF_2_POINT
        - AF_2_POINT_LEGACY
    PowerClassification:
      description: >
        Classification based on power consumption. On Switch Engine (EXOS), it
        can be set per port level. On Fabric Engine (VOSS), it is read-only.
      type: string
      enum:
        - AF
        - AF_HIGH
        - AT
        - BT_TYPE3
        - BT_TYPE4
        - PRE_AT
        - PRE_BT
    SlotPowerSettings:
      description: This object represents the power settings for a slot.
      type: object
      properties:
        slot:
          type: integer
          description: Slot number.
        perpetualPoe:
          type: boolean
          description: >-
            Enable or disable Perpetual POE feature. This setting can be set per
            port level in Fabric Engine(VOSS) and on a device level in Switch
            Engine(EXOS).
        fastPoe:
          type: boolean
          description: >-
            Enable or disable Fast POE feature. This setting can be set both on
            a device and per port level in Fabric Engine(VOSS), as well as in
            Switch Engine(EXOS).
    DevicePowerSettings:
      description: This object represents the power settings for a device.
      type: object
      properties:
        detection:
          $ref: '#/components/schemas/PowerDetection'
        usageThreshold:
          description: >-
            The usage threshold expressed in percentage for comparing the
            measured power and initiating an alarm if the threshold is exceeded.
          type: integer
          minimum: 1
          maximum: 99
        enabled:
          description: >-
            The operational status of the main PSE. This property is
            configurable only in Switch Engine (EXOS).
          type: boolean
          default: true
        classification:
          $ref: '#/components/schemas/PowerClassification'
        slotSettings:
          type: array
          items:
            $ref: '#/components/schemas/SlotPowerSettings'
          minItems: 1
          maxItems: 8
    PsePowerPriority:
      description: >
        Priority of the port from the point of view of a power management
        algorithm.

        This is used by control mechanism that prevents over current situations
        by 

        disconnecting first ports with lower power priority.
      type: string
      enum:
        - LOW
        - HIGH
        - CRITICAL
      default: LOW
    PortPowerSettings:
      description: This object represents the power settings for a port.
      type: object
      properties:
        enable:
          description: Status of PoE on a port.
          type: boolean
          default: true
        powerLimit:
          description: |
            DTE Power limit per port in milliwatts. Range for VOSS is 3000-98000
            and for EXOS ranges are 3000-16800(POE), 3000-30000(POE+),
            3000-60000(POE++ Type 3), 3000-90000(POE++ Type 4).
          type: integer
          minimum: 3000
          maximum: 98000
          format: int32
        priority:
          $ref: '#/components/schemas/PsePowerPriority'
        classification:
          $ref: '#/components/schemas/PowerClassification'
        detection:
          $ref: '#/components/schemas/PowerDetection'
        perpetualPoe:
          type: boolean
          description: >-
            Enable or disable Perpetual POE feature. This setting can be set per
            port level in Fabric Engine(VOSS) and on a device level in Switch
            Engine(EXOS).
        fastPoe:
          type: boolean
          description: >-
            Enable or disable Fast POE feature. This setting can be set both on
            a device and per port level in Fabric Engine(VOSS), as well as in
            Switch Engine(EXOS).
    PortPowerReadSettings:
      description: >-
        This object represents the port power settings (port is specified as a
        property).
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        portSettings:
          $ref: '#/components/schemas/PortPowerSettings'
    PoePowerAllSettings:
      description: PoE Power settings for device and ports
      type: object
      allOf:
        - $ref: '#/components/schemas/DevicePowerSettings'
        - type: object
          properties:
            ports:
              description: A list containing the PoE ports and their settings.
              type: array
              items:
                $ref: '#/components/schemas/PortPowerReadSettings'
    PolicyGlobalSettings:
      description: The policy related global settings for the device.
      type: object
      properties:
        enabled:
          description: >
            The device level administrative state of the policy feature.  This
            setting applies

            to Switch Engine only.
          type: boolean
          default: false
        cepEnabled:
          description: >
            The device level administrative state of the Convergence Endpoint
            (CEP) feature.

            This setting applies to Switch Engine only.
          type: boolean
          default: false
        vlanAuthorization:
          description: >
            A value of True allows the radius tunnel attribute to be used for
            VLAN assignment

            according to the rules specified in the rfc3580ConflictResponse
            property

            described below.
          type: boolean
          default: false
        ruleModel:
          description: >
            The policy rule model for the device. The enabled setting must be
            false to modify

            the rule model.
          type: string
          enum:
            - ACCESS_LIST
            - HIERARCHICAL
          default: HIERARCHICAL
        invalidRequest:
          description: >
            This object contains the setting and counter related to requests to
            apply

            invalid policy.
          type: object
          properties:
            invalidAction:
              type: string
              description: >
                Specifies the action that the edge device should take if asked
                to apply

                an invalid or unknown policy.
              default: APPLY_DEFAULT_ACTION
              enum:
                - APPLY_DEFAULT_ACTION
                - DROP_PACKETS
                - FORWARD_PACKETS
        rfc3580ConflictResponse:
          type: string
          description: >
            "Indicates which field to use in the application of the RADIUS
            response in the event

            that both the proprietary filter-id indicating a policy role and the
            standard (RFC3580) 

            vlan-tunnel-attribute are present. If POLICY_ROLE is selected, then
            the filter-id will be used, 

            if VLAN_TUNNEL is selected, then the vlan-tunnel-attribute will be
            used. A value of 

            VLAN_TUNNEL_WITH_POLICY_ROLE indicates that both attributes should
            be applied, 

            in the following manner: the policy role should be enforced, with
            the exception of the role 

            default-vlan (if present), the returned vlan-tunnel-attribute will
            be used in its place. 

            Modifications of this value will not effect the current status of
            any users currently authenticated. 

            The new state will be applied to new, successful authentications."
          default: POLICY_ROLE
          enum:
            - POLICY_ROLE
            - VLAN_TUNNEL
            - VLAN_TUNNEL_WITH_POLICY_ROLE
        vfpTciOverwriteSlices:
          type: integer
          description: >
            The number of VLAN field processor (VFP) slices allocated for the
            tci-overwrite functionality. This value

            can only be changed if policy is globally disabled, however the
            implementation should toggle policy automatically

            if needed to allow setting this value. This value applies to Switch
            Engine only but is not supported on all platforms

            as given by the capabilities endpoint tci-overwrite property.  The
            total of vfpTciOverwriteSlices and vfpAppSignatureSlices

            can not exceed a value of 4.
          minimum: 0
          maximum: 4
          default: 4
        vfpAppSignatureSlices:
          type: integer
          description: >
            The number of VLAN field processor (VFP) slices allocated for the
            application signature functionality. This value

            can only be changed if policy is globally disabled, however the
            implementation should toggle policy automatically

            if needed to allow setting this value. This value applies to Switch
            Engine only but is not supported on all platforms

            as given by the capabilities endpoint application signature
            property.  The total of vfpTciOverwriteSlices and

            vfpAppSignatureSlices can not exceed a value of 4.
          minimum: 0
          maximum: 4
          default: 0
    PolicyRoleIdObject:
      description: A policy role identifier object.
      type: object
      properties:
        id:
          description: The identifier associated with a policy role.
          type: integer
          minimum: 1
          maximum: 63
      required:
        - id
    PolicyRoleUpdateObject:
      description: >
        The settable parameters associated with a policy role. Policy roles are
        Switch

        Engine specific.
      type: object
      properties:
        name:
          description: The role name that is unique across the customer sites.
          allOf:
            - $ref: '#/components/schemas/PolicyRoleName'
        rules:
          description: >
            The name of the Access Control List (ACL) used by this role to match
            frames. Note,

            each ACL can contain a set of rules with match and action
            conditions.  An empty string

            indicates the ACL name is unset for this role.
          type: string
          minLength: 0
          maxLength: 32
        defaultAction:
          description: >
            The default forwarding action. If set to CONTAIN_TO_VLAN, the value
            of defaultVlan is used;

            otherwise it is ignored.  A value of ALLOW corresponds to a
            defaultVlan value of 4095 in the

            Switch Engine CLI (always forward). A value of DENY corresponds to a
            defaultVlan value of 0 in the Switch

            Engine CLI (always drop). A value of NONE indicates that the
            defaultVlan is administratively disabled.
          type: string
          default: NONE
          enum:
            - NONE
            - ALLOW
            - DENY
            - CONTAIN_TO_VLAN
        defaultVlan:
          description: >
            If the value of defaultAction is CONTAIN_TO_VLAN, this setting
            defines the VLAN

            which users assigned to this role are assigned to. The defaultAction
            of ALLOW or

            DENY correspond to Switch Engine CLI values of 4095 and 0
            respectively.
          type: integer
          minimum: 1
          maximum: 4094
        defaultNsi:
          description: >
            The default NSI (Network Service Identifier) associated with the
            default VLAN for this role.

            A value of 0 indicates no NSI is applied."
          type: integer
          minimum: 0
          maximum: 16777215
        defaultCos:
          description: >-
            Class of Service (COS) associated with this role. A value of 0
            indicates no COS is applied.
          type: integer
          minimum: 0
          maximum: 255
        httpRedirect:
          description: >
            The index of the HTTP redirect entry associated with this role. A
            value of 0 indicates the HTTP redirect

            feature is disable for this role.
          type: integer
          minimum: 0
          maximum: 10
        tciOverwrite:
          description: >
            A value of enabled indicates that the information contained within
            the TCI field of inbound,

            tagged packets will not be used by the device after the ingress
            classification stage.

            The net effect will be that the TCI information may be used to
            classify the packet,

            but will be overwritten (and ignored) by subsequent stages.
          type: string
          default: DISABLE
          enum:
            - ENABLE
            - DISABLE
        egressVlans:
          description: >
            The set of VLAN's which should transmit egress packets as tagged on
            ports for which this role is active.

            An empty list indicates no egress VLAN's are configured on this
            role.
          type: array
          items:
            $ref: '#/components/schemas/VlanIdNonObject'
        forbiddenVlans:
          description: >
            The set of VLANs which are prohibited by this role to egress on
            ports for which this role is active.
          type: array
          items:
            $ref: '#/components/schemas/VlanIdNonObject'
        untaggedVlans:
          description: >
            The set of VLANs which should transmit egress packets as untagged on
            ports for which this role is active.
          type: array
          items:
            $ref: '#/components/schemas/VlanIdNonObject'
        portAuthOverride:
          description: >
            A value of true indicates that all frames arriving on the port will
            have the role applied.

            No further authentication is required on this port until all
            authentication sessions

            for this role are no longer established.
          type: boolean
          default: false
        dynamic:
          description: A value of true indicates that the role was dynamically created
          type: boolean
          default: false
          readOnly: true
    PolicyRoleCreateObject:
      allOf:
        - $ref: '#/components/schemas/PolicyRoleIdObject'
        - $ref: '#/components/schemas/PolicyRoleUpdateObject'
    PolicyRoleList:
      description: |
        The list of the policy roles on the device.
      type: array
      items:
        $ref: '#/components/schemas/PolicyRoleCreateObject'
    PortNameObject:
      description: Port name object
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
    PolicyPortRoleMappingUpdate:
      description: Port based role mapping settable parameters
      type: object
      properties:
        dynamicId:
          description: >-
            The role identifier this entry dynamically maps to.  A value of 0
            indicates no dynamic mapping.
          type: integer
          readOnly: true
        adminId:
          description: The role identifier this entry administratively maps to.
          type: integer
    PolicyPortRoleMappingCreate:
      allOf:
        - $ref: '#/components/schemas/PortNameObject'
        - $ref: '#/components/schemas/PolicyPortRoleMappingUpdate'
    PolicyPortRoleMappingList:
      description: |
        The list of the policy port role mappings on the device.
      type: array
      items:
        $ref: '#/components/schemas/PolicyPortRoleMappingCreate'
    MacAddressAndMaskLength:
      description: |
        Colon separated MAC address in upper or lower case
        and its mask length in bits.
      type: object
      properties:
        macAddress:
          type: string
          pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
          example: '00:04:96:98:65:1C'
        maskLength:
          type: integer
          minimum: 1
          maximum: 48
          example: 24
    PolicyMacRoleMappingCreate:
      allOf:
        - $ref: '#/components/schemas/MacAddressAndMaskLength'
        - $ref: '#/components/schemas/PortNameObject'
        - $ref: '#/components/schemas/PolicyPortRoleMappingUpdate'
    PolicyMacRoleMappingList:
      description: |
        The list of the policy port role mappings on the device.
      type: array
      items:
        $ref: '#/components/schemas/PolicyMacRoleMappingCreate'
    PolicyHttpSocketList:
      description: A list of socket port numbers
      type: object
      properties:
        socketList:
          type: array
          items:
            type: integer
            maxItems: 3
            minimum: 1
            maximum: 65535
    PolicyHttpGroupId:
      description: A policy HTTP group identifier object.
      type: object
      properties:
        groupId:
          description: The identifier associated with a policy HTTP redirect group.
          type: integer
          minimum: 1
          maximum: 10
      required:
        - groupId
    PolicyHttpGroupServerId:
      description: A policy HTTP group server identifier object.
      type: object
      properties:
        serverId:
          description: The server identifier associated with a policy HTTP redirect group.
          type: integer
          minimum: 1
          maximum: 2
      required:
        - serverId
    PolicyHttpGroupUpdate:
      description: Policy HTTP redirect group update object
      type: object
      properties:
        url:
          description: |
            The captive portal HTTP or HTTPS URL that the user is redirected to.
            The format is as follows:
            http://<IPv4Address or Hostname>:<L4Port>/<Path>
          type: string
          format: uri
        enabled:
          description: The administrative state of the redirect group/server entry
          type: boolean
          default: false
      required:
        - url
    PolicyHttpGroupCreate:
      allOf:
        - $ref: '#/components/schemas/PolicyHttpGroupId'
        - $ref: '#/components/schemas/PolicyHttpGroupServerId'
        - $ref: '#/components/schemas/PolicyHttpGroupUpdate'
    PolicyHttpGroupGet:
      allOf:
        - $ref: '#/components/schemas/PolicyHttpGroupCreate'
    PolicyHttpGroupList:
      description: The policy HTTP redirect group list.
      type: object
      properties:
        redirectGroups:
          description: |
            The list of the policy HTTP redirect groups and servers.
          type: array
          items:
            $ref: '#/components/schemas/PolicyHttpGroupGet'
    PolicyHttpGet:
      allOf:
        - $ref: '#/components/schemas/PolicyHttpSocketList'
        - $ref: '#/components/schemas/PolicyHttpGroupList'
    AclName:
      description: |
        An access-list name object. The access-list name
        appears to the left of the decimal in the Switch
        Engine access-list naming format, 
        access-list-name.access-list-entry
      type: object
      properties:
        name:
          description: The access-list name (must be unique on the device).
          type: string
          minLength: 1
          maxLength: 32
    AclMatchCategories:
      description: |
        The match category associated with access-list match.
      type: string
      enum:
        - ETHER_TYPE
        - IP_PROTO
        - ICMP_TYPE
        - ICMP6_TYPE
        - IP_TOS
        - IP_TTL
        - IP_FRAG
        - IP_DEST_SOCKET
        - IP_SRC_SOCKET
        - TCP_DEST_PORT_IP
        - TCP_SRC_PORT_IP
        - UDP_DEST_PORT_IP
        - UDP_SRC_PORT_IP
        - APPLICATION
        - ANY
    EtherTypeAndMask:
      description: |
        This object represents the Ethernet type and mask. The type is a 2
        byte hex field. The optional mask represents the number of bits used
        for matching the type.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        type:
          description: The ethernet type value represented as a two byte hexadecimal string
          type: string
          pattern: '^[0-9a-fA-F]{4}$'
          example: '8100'
        mask:
          description: The number of bits used for matching the ethernet type field
          type: integer
          minimum: 1
          maximum: 16
      required:
        - category
    IpProtoAndMask:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        type:
          description: >
            The numeric value of the IP protocol type. This value specifies the
            type

            of packet contain within the IP header. For example, a type value of
            17

            indicates the next protocol within the IP packet is UDP.
          type: integer
          minimum: 0
          maximum: 255
        mask:
          description: |
            The number of bits to use for matching the IP protocol type.
          type: integer
          minimum: 1
          maximum: 8
      required:
        - category
    IcmpTypeCodeAndMask:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        type:
          description: |
            The numeric value of the ICMP type.  For example,
            types of 0 and 16 represent ICMP echo replies
            and requests respectively.
          type: integer
          minimum: 0
          maximum: 255
        code:
          description: |
            The numeric value of the ICMP code.  The value of the
            code has different meaning depending on the type.
            For example, An ICMP destination unreachable (type 3)
            has several codes including Net Unreachable (code 0), 
            Host Unreachable (code 1), and Port Unreachable (code 3).
          type: integer
          minimum: 0
          maximum: 255
        mask:
          description: |
            The number of bits to use for matching an ICMP type and
            code combination.
          type: integer
          minimum: 1
          maximum: 16
      required:
        - category
    IpTosValueAndMask:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        tos:
          description: |
            The numeric value of the IP Type of Service (TOS) byte.
          type: integer
          minimum: 0
          maximum: 255
        mask:
          description: |
            The number of bits to use for matching the IP TOS.
          type: integer
          minimum: 1
          maximum: 8
      required:
        - category
    IpTtlValueAndMask:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        ttl:
          description: |
            The numeric value of the IP Time To Live (TTL).
          type: integer
          minimum: 0
          maximum: 255
        mask:
          description: |
            The number of bits to use for matching the IP TTL.
          type: integer
          minimum: 1
          maximum: 8
      required:
        - category
    IpFrag:
      type: object
      description: >
        This object represents the IP fragmentation bit match criterion for use
        in

        access-list matching. Specification of this category as a match means
        that

        packets with the IP fragmentation bit set will match this entry
        cirterion. The

        user doesnt need to specify data, the ipFrag field is defined as an
        empty string

        to allow for the use of the descriminator.
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        ipFrag:
          description: >
            The value of the fragmentation bit used for matching against
            received

            packets.
          type: string
          enum:
            - ''
      required:
        - category
    IpSocket:
      type: object
      description: >
        This object represents an IPv4 address with optional layer 4 port (or
        range)

        and an optional mask.  The IPv4 address is a required property in this

        object.
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        address:
          description: IPv4 address used for access-list matching.
          type: string
          format: ipv4
        lowerPort:
          description: |
            The lower value of the layer 4 port used for matching. This value is
            interpreted as a single value for matching if the upperPort is not
            specified.
          type: integer
          minimum: 0
          maximum: 65535
        upperPort:
          description: >
            The upper value of the layer 4 port used for matching against a port
            range.

            This value must be larger then the value of the lowerPort. If the
            lowerPort

            is not specified the request is considered invalid.
          type: integer
          minimum: 0
          maximum: 65535
        mask:
          description: >
            The number of bits to use for matching the combination of IPv4
            address, layer 4

            port, or port range. The maximum mask length is defined in the table
            below.

            If the mask is not specified, full length comparison against the
            entire data

            is performed.


            | Layer 4 port format  | Maximum mask length (bits)

            |----------------------|----------------------------

            | None                 | 32

            | Single Value         | 48

            | Range                | 64
          type: integer
          minimum: 1
          maximum: 64
      required:
        - category
        - address
    Layer4PortRangeAndIP:
      type: object
      description: >
        This object represents a layer 4 (TCP or UDP) port with an optional mask
        and

        post fixed IPv4 address. The port can either be a single value or an
        upper and

        range.  To specify a single port, the layer4UpperPort should not be
        specified.

        The maximum value of the mask depends on the port format (single value
        or range)

        and if an IPv4 is address is specified.
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        lowerPort:
          description: |
            The lower value of the layer 4 port used for matching. This value is
            interpreted as a single value for matching if the upperPort is not
            specified.
          type: integer
          minimum: 0
          maximum: 65535
        upperPort:
          description: >
            The upper value of the layer 4 port used for matching against a port
            range.

            This value must be larger then the value of the lowerPort. If the
            lowerPort

            is not specified the request is considered invalid.
          type: integer
          minimum: 0
          maximum: 65535
        mask:
          description: >
            The number of bits to use for matching the port, port range, or
            combination

            of port and IPv4Address.  The maximum mask length is defined in the
            table below.

            If the mask is not specified, full length comparison against the
            entire data

            is performed.


            | Layer 4 port format  | IPv4 Address     | Maximum mask length
            (bits)

            |----------------------|------------------|---------------------------

            | Single value         | Not specified    | 16

            | Range                | Not specified    | 32

            | Single value         | Specified        | 48

            | Range                | Specified        | 64
          type: integer
          minimum: 1
          maximum: 64
        address:
          description: IPv4 address
          type: string
          format: ipv4
      required:
        - category
        - lowerPort
    AppSigGroups:
      description: |
        The Application Signature group types.
      type: string
      enum:
        - ADVERTISING
        - BETTING_AND_SPORTSBOOKS
        - BUSINESS_APPLICATIONS
        - CERTIFICATE_VALIDATION
        - CLOUD_COMPUTING
        - CLOUD_STORAGE
        - CORPORATE_WEBSITE
        - DATABASES
        - E_COMMERCE
        - EDUCATION
        - FINANCE
        - GAMES
        - HEALTH_CARE
        - LOCATION_SERVICES
        - MAIL
        - NEWS_AND_INFORMATION
        - PEER_TO_PEER
        - PROTOCOLS
        - REAL_TIME_AND_CLOUD_COMMUNICATIONS
        - RESTRICTED_CONTENT
        - SEARCH_ENGINES
        - SOCIAL_NETWORKING
        - SOFTWARE_UPDATES
        - SPORTS
        - STORAGE
        - STREAMING
        - TRAVEL
        - UNKNOWN_APPS
        - VPN_AND_SECURITY
        - WEB_APPLICATIONS
        - WEB_COLLABORATION
        - WEB_CONTENT_SERVICES
        - WEB_FILE_SHARING
    AppGroupAndDisplayName:
      description: >
        This object represents the Application Signature group and display name.
        Policy

        access-list entries can use an application signature consisting of a
        group

        and display name as a match criterion. The possible group names are
        predefined on the system.

        Each group has several built in display names where each display name
        has a predefined

        pattern for matching in the form of a URL (eg. google.com). The user may
        also create custom

        display names within a particular group and add a list of patterns to
        the custom display name.

        The Application Signature functionality is Switch Engine specific and
        not all platforms support

        it as defined in the capabilities endpoint. In addition, VLAN field
        processor (VFP) slices must

        be reserved for Application Signature prior to configuring it.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        appSigGroupType:
          $ref: '#/components/schemas/AppSigGroups'
        appSigDisplayName:
          description: >
            The built in or custom application signature display name associated
            with the group specified

            in the appSigGroupName property. The display name must be one of the
            built in names for the

            group or be a previously defined custom display name for the group.
          type: string
          minLength: 1
          maxLength: 50
      required:
        - category
    MatchAny:
      type: object
      description: >
        This object represents a match criterion of any. This may be used to
        match

        any packets that do not match any previous entries match conditions.
        This match

        condition must be the only match condition in the entry in which it
        appears. This entry

        must be the last entry in the list of entries for a given access-list.
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
        matchAny:
          description: >
            The property corresponding to the match any criteria. The value is
            an empty string

            since the category itself completely defines the condition.
          type: string
          enum:
            - ''
      required:
        - category
    AclMatchEntry:
      description: |
        This object represents an access-list match entry. The format
        of the match data is determined by the value of the category field.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclMatchCategories'
      anyOf:
        - $ref: '#/components/schemas/EtherTypeAndMask'
        - $ref: '#/components/schemas/IpProtoAndMask'
        - $ref: '#/components/schemas/IcmpTypeCodeAndMask'
        - $ref: '#/components/schemas/IpFrag'
        - $ref: '#/components/schemas/IpTtlValueAndMask'
        - $ref: '#/components/schemas/IpTosValueAndMask'
        - $ref: '#/components/schemas/IpSocket'
        - $ref: '#/components/schemas/Layer4PortRangeAndIP'
        - $ref: '#/components/schemas/AppGroupAndDisplayName'
        - $ref: '#/components/schemas/MatchAny'
      discriminator:
        propertyName: category
        mapping:
          ETHER_TYPE: '#/components/schemas/EtherTypeAndMask'
          IP_PROTO: '#/components/schemas/IpProtoAndMask'
          ICMP_TYPE: '#/components/schemas/IcmpTypeCodeAndMask'
          ICMP6_TYPE: '#/components/schemas/IcmpTypeCodeAndMask'
          IP_TOS: '#/components/schemas/IpTosValueAndMask'
          IP_TTL: '#/components/schemas/IpTtlValueAndMask'
          IP_FRAG: '#/components/schemas/IpFrag'
          IP_DEST_SOCKET: '#/components/schemas/IpSocket'
          IP_SRC_SOCKET: '#/components/schemas/IpSocket'
          TCP_DEST_PORT_IP: '#/components/schemas/Layer4PortRangeAndIP'
          TCP_SRC_PORT_IP: '#/components/schemas/Layer4PortRangeAndIP'
          UDP_DEST_PORT_IP: '#/components/schemas/Layer4PortRangeAndIP'
          UDP_SRC_PORT_IP: '#/components/schemas/Layer4PortRangeAndIP'
          APPLICATION: '#/components/schemas/AppGroupAndDisplayName'
          ANY: '#/components/schemas/MatchAny'
    AclActionCategories:
      description: |
        The action category associated with an access-list action.
      type: string
      enum:
        - FORWARD_DROP
        - SYSLOG
        - MIRROR
        - COS
    ForwardOrDrop:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclActionCategories'
        forwardDrop:
          description: |
            A string value representing the drop or forward action for
            an access-list entry.
          type: string
          enum:
            - FORWARD
            - DROP
      required:
        - category
    CosAclAction:
      type: object
      description: |
        This object represents a class of server (COS) action for
        an access-list entry.
      properties:
        category:
          $ref: '#/components/schemas/AclActionCategories'
        cosValue:
          description: |
            The value of the COS to be applied to matching packets.
            A value of -1 indicates COS is not set.
          type: integer
          minimum: 0
          maximum: 255
      required:
        - category
    MirrorAclAction:
      type: object
      description: |
        This object represents a mirror destination action for
        an access-list entry.
      properties:
        category:
          $ref: '#/components/schemas/AclActionCategories'
        mirrorIndex:
          description: |
            The value of the mirror destination index.
          type: integer
          minimum: 1
          maximum: 4
      required:
        - category
    SyslogAclAction:
      type: object
      description: |
        This object represents the syslog action of access-list entry. A value
        of true indicates that access-list matches should be syslogged.
        This object should be omitted from an access-list
        entry for which the logging action is not desired.
      properties:
        category:
          $ref: '#/components/schemas/AclActionCategories'
        syslog:
          description: >
            The value of the syslog action setting for an access-list entry.

            This is an empty string to allow for definition of the descriminator
            object.

            If the SYSLOG category is present in the action list of an ACL
            entry, the setting

            is enabled.  If the SYSLOG category is not present in the action
            list the syslog

            setting is not enabled for the entry.
          type: string
          enum:
            - ''
      required:
        - category
    AclActionEntry:
      description: |
        This object represents an access-list action entry. The format
        of the action data is determined by the value of the category field.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AclActionCategories'
      anyOf:
        - $ref: '#/components/schemas/ForwardOrDrop'
        - $ref: '#/components/schemas/CosAclAction'
        - $ref: '#/components/schemas/MirrorAclAction'
        - $ref: '#/components/schemas/SyslogAclAction'
      discriminator:
        propertyName: category
        mapping:
          FORWARD_DROP: '#/components/schemas/ForwardOrDrop'
          COS: '#/components/schemas/CosAclAction'
          MIRROR: '#/components/schemas/MirrorAclAction'
          SYSLOG: '#/components/schemas/SyslogAclAction'
    AclEntry:
      description: >
        This object represents an access-list entry. The entry is contained
        within a parent

        access-list where each parent access-list must contain at least 1 entry.

        An entry must contain a name, a list of match conditions, and a list of
        actions.

        The action list must contain either FORWARD_DROP or COS. If FORWARD_DROP
        is not

        specified the FORWARD action is used for the entry.


        At least 1 match criterion is required up to a maximum of 5 with the
        following

        restrictions:


        - Fragmentation bit match can not be combined with TCP, UDP, or ICMP
        conditions.

        - TCP and UDP conditions can not be combined in the same entry.

        - ICMP and ICMP6 conditions can not be combined in the same entry.

        - ICMP6 can not be combined with IPV4 conditions in the same entry.

        - ICMP can not be combined with TCP or UDP in the same entry.

        - Ethernet type can only be combined with compatable rules, for example,
          IPv4 (0x0800) cant be combined with ICMP6.
        - IP Protocol can only be combined with compatable types, for example,
          a value of 1 (ICMP) cant be combined with a TCP or UDP match condition.
      type: object
      properties:
        name:
          description: >
            The name of the access-list entry.  This name must be unique within
            a

            parent access-list.  For Switch Engine this name corresponds to the

            portion after the decimal (aclEntryName) in the format
            aclName.aclEntryName
          type: string
          minLength: 1
          maxLength: 32
        dynamic:
          description: >-
            A value of true indicates that the access-list entry was dynamically
            created
          type: boolean
          default: false
          readOnly: true
        aclMatchList:
          description: |
            A list of match conditions associated with this access-list entry.
          type: array
          items:
            $ref: '#/components/schemas/AclMatchEntry'
          minItems: 1
          maxItems: 5
          example:
            - category: ETHER_TYPE
              type: 0800
              mask: 16
            - category: IP_PROTO
              type: 6
              mask: 8
            - category: TCP_DEST_PORT_IP
              lowerPort: 20
              upperPort: 30
              mask: 64
              address: 192.168.10.1
            - category: TCP_SRC_PORT_IP
              lowerPort: 40
              upperPort: 50
              mask: 64
              address: 192.168.20.1
            - category: APPLICATION
              appSigGroupType: ADVERTISING
              appSigDisplayName: AdShuffle
        aclActionList:
          description: |
            A list of actions performed if the match conditions are met for this
            access-list entry.  Each entry must contain at least one of COS or
            FORWARD_DROP actions.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/AclActionEntry'
          example:
            - category: FORWARD_DROP
              forwardDrop: FORWARD
            - category: COS
              cosValue: 255
            - category: MIRROR
              mirrorIndex: 3
            - category: SYSLOG
      required:
        - name
        - aclMatchList
        - aclActionList
    AclNoName:
      description: |
        This object represents an access-list. The access-list
        contains a list of access-list entries. Since an
        access-list must contain at least one entry, the access-list
        is deleted when it's last entry is deleted.
      type: object
      properties:
        entryList:
          description: |
            A list of access-list entry objects.
          type: array
          items:
            $ref: '#/components/schemas/AclEntry'
    Acl:
      allOf:
        - $ref: '#/components/schemas/AclName'
        - $ref: '#/components/schemas/AclNoName'
    AclList:
      description: |
        A list of access-lists objects.
      type: array
      items:
        $ref: '#/components/schemas/Acl'
    AppDisplayNameAndPattern:
      description: >
        This object represents a display name and pattern list for a particular
        application

        signature group. A custom display name can be created with a list of
        patterns. The built

        in display names can not be modified however the group name and display

        name combination can be referenced as a match criterion in a policy
        access-list.
      type: object
      properties:
        groupDisplayName:
          description: >
            The built in or custom application signature display name associated
            with an application

            signature group.
          type: string
          minLength: 1
          maxLength: 50
          example: advert_name1
        groupDisplayNamePattern:
          description: >
            A string consisting of a space separated list of patterns associated
            with the application

            signature group and display name.
          type: string
          minLength: 1
          maxLength: 256
          example: google.com sample.com advert1.com
    AppSigGroupCustomEntry:
      description: |
        This object represents an application signature group with all of its
        custom display names and signature patterns.
      type: object
      properties:
        groupType:
          $ref: '#/components/schemas/AppSigGroups'
        displayNamePatternList:
          description: |
            The list of custom display names and signature patterns
            for a particular application signature group.
          type: array
          items:
            $ref: '#/components/schemas/AppDisplayNameAndPattern'
    AppSigCustomLists:
      description: |
        A list of application signature groups where each entry in the list
        contains a list of custom display names and their signature patterns.
      type: array
      items:
        $ref: '#/components/schemas/AppSigGroupCustomEntry'
    PolicyComponentSettings:
      description: The policy settings for the device.
      x-nos: switch-engine
      type: object
      properties:
        global:
          $ref: '#/components/schemas/PolicyGlobalSettings'
        roles:
          $ref: '#/components/schemas/PolicyRoleList'
        portMapping:
          $ref: '#/components/schemas/PolicyPortRoleMappingList'
        macMapping:
          $ref: '#/components/schemas/PolicyMacRoleMappingList'
        httpRedirect:
          $ref: '#/components/schemas/PolicyHttpGet'
        accessLists:
          $ref: '#/components/schemas/AclList'
        application:
          $ref: '#/components/schemas/AppSigCustomLists'
    PortType:
      description: >
        The port type (ACCESS or TRUNK). An access port can not be assigned to a
        VLAN as tagged.

        For VOSS, tagging can be enabled on the port which sets it as a trunk
        port.  For EXOS,

        there is no explicit configuration of a trunk port so this setting can
        be set to trunk

        or set to access if the port is not assigned to a VLAN as tagged.
      type: string
      enum:
        - ACCESS
        - TRUNK
    PortVlanWriteSettings:
      description: >-
        This object represents the port-vlan settings (port not specified as a
        property).
      type: object
      properties:
        portType:
          $ref: '#/components/schemas/PortType'
        portVlan:
          description: >
            Untagged packets received on this port are assigned to the VLAN
            specified by this property. A value of 0,

            is used to unset this parameter.
          type: integer
          format: int32
        allowDynamicVlans:
          description: >
            A value of true indicates that this port is statically added as a
            tagged uplink port

            to all dynamically created VLAN's. This property only applies to
            Switch Engine.
          type: boolean
        allowedVlans:
          description: >
            The list of VLAN's this port is assigned to the egress list of. 
            This list must be empty or

            not present if a request containing this object specifies the
            portType as ACCESS.
          type: array
          items:
            type: integer
            format: int32
        dynamicVlans:
          description: >
            The list of VLANs, including both static and dynamic ones, in which
            the port has been added dynamically
          type: array
          readOnly: true
          items:
            type: integer
            format: int32
        isBrouter:
          description: >-
            A value of true indicates this port is part of a BROUTER type VLAN.
            This is VOSS specific.
          type: boolean
          default: false
          readOnly: true
        untaggedEgress:
          description: >-
            A value of true indicates that this port will transmit the portVlan
            as untagged on a trunk port.  This is a Fabric Engine specific
            setting.
          type: boolean
          default: false
        pvlan:
          description: >-
            The private vlan setting for the port.  This is a Fabric Engine
            specific setting.
          type: string
          enum:
            - NONE
            - ISOLATED
            - PROMISCUOUS
            - TRUNK
        spbMcastEnabled:
          description: >-
            A value of true indicates that this port is SPB Multicast enabled.
            This is a Fabric Engine specific setting.
          type: boolean
          default: false
    PortVlanReadSettings:
      description: >-
        This object represents the port-vlan settings (port is specified as a
        property).
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        portSettings:
          $ref: '#/components/schemas/PortVlanWriteSettings'
    RadiusGlobalSettings:
      description: RADIUS global configuration
      type: object
      properties:
        enabled:
          description: Enable/Disable this feature.
          type: boolean
          default: false
        accountAttr:
          description: Integer value for accounting attribute (Fabric Engine only).
          type: integer
          minimum: 192
          maximum: 240
          default: 193
        accountEnabled:
          description: Enable/Disable RADIUS accounting feature (Fabric Engine only).
          type: boolean
          default: false
        accountCliCommands:
          description: >-
            Include/Exclude cli-commands in radius acccounting updates (Fabric
            Engine only).
          type: boolean
          default: false
        accessPriorityAttr:
          description: >-
            Integer value for Access-Priority attribute. Specifies the type of
            access available for a user (Fabric Engine only).
          type: integer
          minimum: 192
          maximum: 240
          default: 192
        authInfoAttr:
          description: >-
            Integer value for auth-info vendor specific attribute (Fabric Engine
            only).
          type: integer
          minimum: 0
          maximum: 255
          default: 91
        commandAccessAttr:
          description: >-
            Integer value for Command-Access attribute. Used for restricting CLI
            commands for a user (Fabric Engine only).
          type: integer
          minimum: 192
          maximum: 240
          default: 194
        clearStat:
          description: >-
            Clear Radius Statistic for all servers configured (Fabric Engine
            only).
          type: boolean
          default: false
        cliCommandsAttr:
          description: >-
            Integer value for Cli-Commands attribute. Used for restricting CLI
            commands for a user (Fabric Engine only).
          type: integer
          minimum: 192
          maximum: 240
          default: 195
        cliCommandsCount:
          description: >-
            Integer value for Cli-Cmd-count. Number of cli commands after which
            interim packet is sent out (Fabric Engine only)
          type: integer
          minimum: 1
          maximum: 40
          default: 40
        cliProfileEnabled:
          description: Enable/Disable RADIUS CLI Profiling (Fabric Engine only).
          type: boolean
          default: false
        maxServer:
          description: >-
            Maximum number of RADIUS servers that can be configured on the
            device (Fabric Engine only).
          type: integer
          minimum: 1
          maximum: 10
          default: 10
        mcastAddrAttr:
          description: >-
            Integer value for multicast address vendor specific attribute
            (Fabric Engine only).
          type: integer
          minimum: 0
          maximum: 255
          default: 90
        secureEnabled:
          description: Enable/Disable RADIUS Secure feature (Fabric Engine only).
          type: boolean
          default: false
        igapTimeoutLogFsize:
          description: >-
            Maximum size for the IGAP accounting time-out log file in KB (Fabric
            Engine only).
          type: integer
          default: 512
          readOnly: true
        keepAliveTimer:
          description: >-
            Specifies the interval between checks when the RADIUS server is
            reachable (Fabric Engine only).
          type: integer
          minimum: 30
          maximum: 600
          default: 180
        unreachableTimer:
          description: >-
            Specifies the interval between checks when the RADIUS server is
            unreachable (Fabric Engine only).
          type: integer
          minimum: 30
          maximum: 600
          default: 60
        username:
          description: >-
            The username used for the RADIUS server reachability
            useDummyRadiusRequests option (Fabric Engine only).
          type: string
          default: reachme
          minLength: 1
          maxLength: 16
        password:
          description: >-
            The password used for the RADIUS server reachability
            useDummyRadiusRequests option (Fabric Engine only).
          type: string
          default: reachme
          minLength: 1
          maxLength: 16
        reachabilityMode:
          description: >-
            The method used to test RADIUS server reachablity (Fabric Engine
            only).
          type: string
          enum:
            - USE_STATUS_SERVER_PACKETS
            - USE_DUMMY_RADIUS_REQUESTS
          default: USE_DUMMY_RADIUS_REQUESTS
        dynAuthEnabled:
          description: >-
            Enable/Disable RADIUS dynamic authorization feature. Only for Switch
            Engine devices. For Fabric Engine this is done per server.
          type: boolean
        mgmtAuthEnabled:
          description: >-
            Enable/Disable management authentication. Only for Switch Engine
            devices.
          type: boolean
        mgmtAcctEnabled:
          description: >-
            Enable/Disable management accounting. Only for Switch Engine
            devices.
          type: boolean
        networkAuthEnabled:
          description: >-
            Enable/Disable network authentication. Only for Switch Engine
            devices.
          type: boolean
        networkAcctEnabled:
          description: Enable/Disable network accounting. Only for Switch Engine devices.
          type: boolean
        retries:
          description: Max number of retries for authentication. (Switch Engine only)
          type: integer
          minimum: 0
          maximum: 20
          default: 1
        timeout:
          description: >-
            The time interval in seconds before the client retransmits the
            packet for authentication. (Switch Engine only)
          type: integer
          minimum: 1
          maximum: 240
        retransmitAlgo:
          description: |
            The authentication retransmission algorithm. (Switch Engine only)
            ROUND_ROBIN Simple Round Robin retransmission algorithm
            STANDARD Standard Extreme retransmission algorithm (default)
          type: string
          enum:
            - ROUND_ROBIN
            - STANDARD
          default: STANDARD
        tlsOcspEnabled:
          description: Enable/Disable OCSP. (Switch Engine only)
          type: boolean
        tlsOcspSignerNoCheck:
          description: >
            OFF   Treat as per the extension's presence in OCSP signer's
            certificate. If not present and OCSP signer is not root CA then the
            whole OCSP will fail (Default) ON    Override the
            id-pkix-ocsp-nocheck extension in OCSP signer's certificate and
            force as if it is present. Hence trust this signer's certificate
            (Switch Engine only)
          type: string
          enum:
            - 'ON'
            - 'OFF'
        tlsOcspNonce:
          description: >-
            Cryptographically binds a OCSP request and a OCSP response with
            extension id-pkix-ocsp-nonce, to prevent replay attacks. (Switch
            Engine only)
          type: boolean
        tlsOcspOverrideUrl:
          description: >
            Override the OCSP server in AuthorityInformationAccess section of
            RADIUS server's certificate. On no response, fall back to
            AuthorityInformationAccess server. (Switch Engine only)
          type: string
        tlsTcpTimeout:
          description: >-
            The maximum time in seconds that transmitted data may remain
            unacknowledged before TCP closes the connection. Default value is 0,
            which means system default it's used. (Switch Engine only)
          anyOf:
            - type: integer
              minimum: 20
              maximum: 900
            - type: integer
              enum:
                - 0
          default: 0
    AAAServerUpdate:
      description: RADIUS AAA server host update for Fabric Engine devices
      type: object
      properties:
        accountPort:
          description: The port the client uses to send accounting requests to this server.
          type: integer
          minimum: 1
          maximum: 65536
          default: 1813
        authPort:
          description: >-
            The port the client is using to send authentication requests to this
            server.
          type: integer
          minimum: 1
          maximum: 65536
          default: 1812
        secret:
          description: >-
            The identifier of the RADIUS authentication client. Secret password
            used to authenticate.
          type: string
          minLength: 0
          maxLength: 32
        retries:
          description: Maximum number of retries to authenticate.
          type: integer
          minimum: 0
          maximum: 6
          default: 1
        timeout:
          description: >-
            The time interval in seconds before the client retransmits the
            packet.
          type: integer
          minimum: 1
          maximum: 180
          default: 8
        enabled:
          description: Enable or disable this server.
          type: boolean
          default: true
        accountEnabled:
          description: Enable or disable Radius Accounting on this server.
          type: boolean
          default: true
        priority:
          description: >-
            Server priority, used to control which server to choose first to
            send authentication request.
          type: integer
          minimum: 1
          maximum: 10
          default: 10
        secureEnabled:
          description: Enable or disable Radius Secure for this server.
          type: boolean
          default: false
        secureMode:
          description: Protocol used for secure RADIUS connections.
          type: string
          enum:
            - TLS
            - DTLS
          default: TLS
        secureProfile:
          description: Security profile name to be used for this server host.
          type: string
          minLength: 1
          maxLength: 16
          default: default
        secureLogLevel:
          description: >-
            Specifies the debug level on RADIUS secure server. It must be set
            from critical, error, warning, info or debug, where a value of
            critical logs only serious errors and debug logs everything.
          type: string
          enum:
            - CRITICAL
            - ERROR
            - WARNING
            - INFO
            - DEBUG
          default: ERROR
    AAAServer:
      description: RADIUS AAA server host configuration for Fabric Engine devices
      type: object
      allOf:
        - $ref: '#/components/schemas/GeneralHostOrIp'
        - $ref: '#/components/schemas/AAAServerUpdate'
        - type: object
          properties:
            usedBy:
              description: >
                Which feature is RADIUS authentication used for. Eg DOT1X, ALL,
                SNMP, WEB, LOGIN, ENDPOINT_TRACKING.  The values of SNMP, WEB,
                ENDPOINT_TRACKING apply only for Fabric Engine(VOSS) devices.
                Value of ALL applies only for Switch Engine(EXOS) devices. Value
                DOT1X refers to Fabric Engine EAPOL and Switch Engine Netlogin.
                Value LOGIN refers to Fabric Engine CLI and Switch Engine
                Mgmt-access.
              type: string
              enum:
                - DOT1X
                - ALL
                - LOGIN
                - ENDPOINT_TRACKING
                - SNMP
                - WEB
          required:
            - hostType
            - address
            - usedBy
            - secret
    AuthAcctCommonAttributes:
      type: object
      properties:
        secret:
          description: Secret key for a RADIUS server.
          type: object
          properties:
            value:
              description: >-
                The identifier of the RADIUS authentication client. Secret
                password. For a plain text password, max length is 32.
              type: string
              minLength: 0
              maxLength: 128
            isEncrypted:
              description: >-
                Specifies if the secret password is encrypted (true) or clear
                text (false). (Switch Engine only)
              type: boolean
        retries:
          description: Maximum number of retries to authenticate.
          type: integer
          minimum: 0
          maximum: 20
          default: 1
        timeout:
          description: >-
            The time interval in seconds before the client retransmits the
            packet.
          type: integer
          minimum: 1
          maximum: 240
        secureMode:
          description: Protocol used for secure RADIUS connections. NONE means UDP is used.
          type: string
          enum:
            - TLS
            - NONE
          default: TLS
        name:
          description: RADIUS server hostname.
          type: string
        clientAddress:
          description: >-
            Specifies the client address for which the RADIUS server is
            configured. It must be an address already configured on the device.
          type: string
        clientAddressType:
          description: Client address type (IPv4 or IPv6).
          type: string
          enum:
            - IPv4
            - IPv6
        serverStatus:
          description: Status for the server host.
          type: string
          enum:
            - ACTIVE
            - NOT_IN_SERVICE
            - NOT_READY
            - CREATE_AND_GO
            - CREATE_AND_WAIT
            - DESTROY
          readOnly: true
        tlsConnectionStatus:
          description: Specifies the status of the TLS connection.
          type: string
          enum:
            - NOT_CONNECTED
            - CONNECTING
            - TCP_CONNECTED
            - SSL_CONNECTED
            - LIVE
            - UNKNOWN
          readOnly: true
    AcctServerUpdate:
      description: RADIUS acct server host update for Switch Engine devices
      type: object
      allOf:
        - $ref: '#/components/schemas/AuthAcctCommonAttributes'
        - type: object
          properties:
            port:
              description: >-
                The port the client uses to send accounting requests to this
                server.
              type: integer
              minimum: 1
              maximum: 65536
              default: 1813
            updateInterval:
              description: Interval between updates. Used for accouting servers.
              type: integer
            intervalMinimum:
              description: Used for accounting servers.
              type: integer
    RadiusServerIndex:
      type: object
      properties:
        index:
          description: Index of the RADIUS server.
          type: integer
      required:
        - index
    RadiusServerPrimary:
      type: object
      properties:
        primary:
          description: Specifies if the RADIUS server is primary server.
          type: boolean
      required:
        - primary
    RadiusServerSecondary:
      type: object
      properties:
        secondary:
          description: Specifies if the RADIUS server is secondary server.
          type: boolean
      required:
        - secondary
    RadiusServerIndexForSE:
      description: 'Radius server index (primary, secondary or an integer index)'
      type: object
      anyOf:
        - $ref: '#/components/schemas/RadiusServerIndex'
        - $ref: '#/components/schemas/RadiusServerPrimary'
        - $ref: '#/components/schemas/RadiusServerSecondary'
    AcctServer:
      description: RADIUS accounting server host configuration for Switch Engine devices
      type: object
      allOf:
        - $ref: '#/components/schemas/GeneralHostOrIp'
        - $ref: '#/components/schemas/AcctServerUpdate'
        - $ref: '#/components/schemas/RadiusServerIndexForSE'
        - type: object
          properties:
            vrName:
              description: The VR Name for which the RADIUS server is configured.
              type: string
            usedBy:
              description: >
                Which feature is RADIUS authentication used for. Eg DOT1X, ALL,
                SNMP, WEB, LOGIN, ENDPOINT_TRACKING.  The values of SNMP, WEB,
                ENDPOINT_TRACKING apply only for Fabric Engine(VOSS) devices.
                Value of ALL applies only for Switch Engine(EXOS) devices. Value
                DOT1X refers to Fabric Engine EAPOL and Switch Engine Netlogin.
                Value LOGIN refers to Fabric Engine CLI and Switch Engine
                Mgmt-access.
              type: string
              enum:
                - DOT1X
                - ALL
                - LOGIN
                - ENDPOINT_TRACKING
                - SNMP
                - WEB
          required:
            - hostType
            - port
            - secret
            - secureMode
            - clientAddress
            - clientAddressType
            - vrName
            - usedBy
            - address
    AuthServerUpdate:
      description: RADIUS auth server host update for Switch Engine devices
      type: object
      allOf:
        - $ref: '#/components/schemas/AuthAcctCommonAttributes'
        - type: object
          properties:
            port:
              description: >-
                The port the client is using to send authentication requests to
                this server.
              type: integer
              minimum: 1
              maximum: 65536
              default: 1812
            maxSessions:
              description: Maximum number of sessions.
              type: integer
    AuthServer:
      description: RADIUS auth server host configuration for Switch Engine devices
      type: object
      allOf:
        - $ref: '#/components/schemas/GeneralHostOrIp'
        - $ref: '#/components/schemas/AuthServerUpdate'
        - $ref: '#/components/schemas/RadiusServerIndexForSE'
        - type: object
          properties:
            vrName:
              description: The VR Name for which the RADIUS server is configured.
              type: string
            usedBy:
              description: >
                Which feature is RADIUS authentication used for. Eg DOT1X, ALL,
                SNMP, WEB, LOGIN, ENDPOINT_TRACKING.  The values of SNMP, WEB,
                ENDPOINT_TRACKING apply only for Fabric Engine(VOSS) devices.
                Value of ALL applies only for Switch Engine(EXOS) devices. Value
                DOT1X refers to Fabric Engine EAPOL and Switch Engine Netlogin.
                Value LOGIN refers to Fabric Engine CLI and Switch Engine
                Mgmt-access.
              type: string
              enum:
                - DOT1X
                - ALL
                - LOGIN
                - ENDPOINT_TRACKING
                - SNMP
                - WEB
          required:
            - hostType
            - port
            - secret
            - secureMode
            - clientAddress
            - clientAddressType
            - vrName
            - usedBy
            - address
    DynAuthServerUpdate:
      description: RADIUS Dynamic Authorization Server update settings
      type: object
      properties:
        enabled:
          description: >-
            Enable or disable packet receive from this RADIUS Dynamic
            Authorization Client. The NAS will not listen for requests from the
            client unless this object is true. (Fabric Engine only)
          type: boolean
          default: false
        port:
          description: >-
            The UDP port number the server/NAS listens on for requests from the
            RADIUS Dynamic Authorization Client configured in this entry.
          type: integer
          minimum: 0
          maximum: 65535
          default: 3799
        secret:
          description: Secret key for a RADIUS server.
          type: object
          properties:
            value:
              description: >-
                The secret shared between RADIUS Dynamic Authorization Client
                and Server. For a plain text password, max length is 32.
              type: string
              minLength: 0
              maxLength: 128
            isEncrypted:
              description: >-
                Specifies if the secret password is encrypted (true) or clear
                text (false). (Switch Engine only)
              type: boolean
        replayProtection:
          description: Enable or disable RADIUS replay protection. (Fabric Engine only)
          type: boolean
        clientAddress:
          description: >-
            This is used for Switch Engine devices only and specifies the client
            address for which the RADIUS server is configured. It must be an
            address already configured on the device. This is a required field
            for creating an entry
          type: string
        clientAddressType:
          description: >-
            Client address type (IPv4 or IPv6). This is Switch Engine only and
            it's a required field for creating an entry.
          type: string
          enum:
            - IPv4
            - IPv6
        serverStatus:
          description: Status for the server host (Switch Engine only)
          type: string
          enum:
            - ACTIVE
            - NOT_IN_SERVICE
            - NOT_READY
            - CREATE_AND_GO
            - CREATE_AND_WAIT
            - DESTROY
          readOnly: true
        nasIp:
          description: >-
            Configure  Network Access Server (NAS) IP Address requirement.
            Needed for dynamic-authorization servers (Switch Engine only)
          type: string
    DynAuthServer:
      description: >-
        RADIUS Dynamic Authorization Clients. RADIUS Dynamic Authorization
        Clients are entities which can send Disconnect and Change Of
        Authorization requests to a RADIUS Dynamic Authorization Server.
      type: object
      allOf:
        - $ref: '#/components/schemas/GeneralHostOrIp'
        - $ref: '#/components/schemas/DynAuthServerUpdate'
        - type: object
          properties:
            index:
              description: >-
                Index of the RADIUS server. This is a required field for
                creating an entry (Switch Engine only)
              type: integer
            vrName:
              description: >-
                The VR Name for which the RADIUS server is configured. This
                property is used only for Switch Engine devices, as for Fabric
                Engine all the servers are configured for MgmtRouter VR.
              type: string
          required:
            - hostType
            - address
            - secret
    RadiusServerHost:
      description: RADIUS server host configuration
      type: object
      properties:
        serverMode:
          description: >
            It specifies the use for the configured server.  The server can be
            used for authentication and authorization, accounting or for dynamic
            client authorization.  For Fabric Engine devices only AAA and
            DYN_AUTH can be set.  For Switch Engine devices only AUTH, ACCT and
            DYN_AUTH can be set.
          type: string
          enum:
            - AUTH
            - ACCT
            - DYN_AUTH
            - AAA
      required:
        - serverMode
      anyOf:
        - $ref: '#/components/schemas/AAAServer'
        - $ref: '#/components/schemas/AcctServer'
        - $ref: '#/components/schemas/AuthServer'
        - $ref: '#/components/schemas/DynAuthServer'
      discriminator:
        propertyName: serverMode
        mapping:
          AAA: '#/components/schemas/AAAServer'
          ACCT: '#/components/schemas/AcctServer'
          AUTH: '#/components/schemas/AuthServer'
          DYN_AUTH: '#/components/schemas/DynAuthServer'
    RadiusGlobalAndServersList:
      description: RADIUS global configuration and servers list
      type: object
      allOf:
        - $ref: '#/components/schemas/RadiusGlobalSettings'
        - type: object
          properties:
            servers:
              description: List of RADIUS servers.
              type: array
              items:
                $ref: '#/components/schemas/RadiusServerHost'
    RadiusCertsHashes:
      description: Certificate profile hashes for Secure RADIUS use.
      type: object
      properties:
        rootCertHash:
          description: The SHA-256 hash of root certificate used for RADSEC.
          type: string
          maxLength: 64
          readOnly: true
        certHash:
          description: The SHA-256 hash of client certificate used for RADSEC.
          type: string
          maxLength: 64
          readOnly: true
        name:
          description: RADIUS secure profile name.
          type: string
          minLength: 1
          maxLength: 16
    RadiusConfigurationElement:
      description: Device's entire (root level) RADIUS configuration
      type: object
      properties:
        globalAndServersList:
          $ref: '#/components/schemas/RadiusGlobalAndServersList'
        secureProfiles:
          x-nos: fabric-engine
          type: array
          items:
            $ref: '#/components/schemas/RadiusCertsHashes'
    SnmpV1V2AccessView:
      description: |
        The SNMP access view. The values of NOTIFY, READ_ONLY_NOTIFY,
        and READ_WRITE_NOTIFY apply only to Fabric Engine (VOSS).
      type: string
      enum:
        - READ_ONLY
        - READ_WRITE
        - NOTIFY
        - READ_ONLY_NOTIFY
        - READ_WRITE_NOTIFY
    SnmpSecurityLevel:
      description: |
        The SNMP security level.  This property only
        applies to Fabric Engine (VOSS).
      type: string
      enum:
        - AUTH_NO_PRIV
        - AUTH_PRIV
        - NO_AUTH_NO_PRIV
    SnmpAccess:
      description: An SNMP access object
      type: object
      properties:
        community:
          description: The SNMP community string
          type: string
          minLength: 1
          maxLength: 32
        accessView:
          $ref: '#/components/schemas/SnmpV1V2AccessView'
        vrName:
          description: |
            The name of the Virtual Router.  This property only
            applies to Fabric Engine (VOSS).
          type: string
          minLength: 1
          maxLength: 32
        securityLevel:
          $ref: '#/components/schemas/SnmpSecurityLevel'
        index:
          description: |
            The index associated with this entry.  This property only
            applies to Fabric Engine (VOSS).
          type: string
          minLength: 1
          maxLength: 32
        securityName:
          description: |
            The security name associated with this entry. This property only
            applies to Fabric Engine (VOSS).
          type: string
          minLength: 1
          maxLength: 32
    SnmpAccessList:
      description: A list of SNMP Access objects
      type: array
      items:
        $ref: '#/components/schemas/SnmpAccess'
    SnmpTrapReceiver:
      description: |
        This object represents the IPv4 or IPv6 host to recieve
        SNMP notifications.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        name:
          description: |
            The user name associated with this entry. This property represents
            the security name for Fabric Engine (VOSS) and the community for
            Switch Engine (EXOS).
          type: string
          minLength: 1
          maxLength: 32
        port:
          description: |
            The UDP port number associated with this user.
          type: integer
          minimum: 1
          maximum: 65535
        vrName:
          description: |
            The name of the Virtual Router.  This property only
            applies to Switch Engine (EXOS).
          type: string
          minLength: 1
          maxLength: 32
        version:
          description: |
            The SNMP version. This property applies to Fabric Engine (VOSS).
          type: string
          enum:
            - v1
            - v2c
        inform:
          description: |
            This property specifies the notify type (applies to Fabric Engine).
          type: boolean
    SnmpTrapReceiverList:
      description: A list of SNMP trap receiver objects
      type: array
      items:
        $ref: '#/components/schemas/SnmpTrapReceiver'
    SnmpV1V2Set:
      description: |
        This object represents the settable SNMP version 1 and 2 settings.
      type: object
      properties:
        enable:
          description: Enabled state for SNMP
          type: boolean
          default: false
        access:
          $ref: '#/components/schemas/SnmpAccessList'
        trapReceiver:
          $ref: '#/components/schemas/SnmpTrapReceiverList'
    SnmpV3AccessView:
      description: |
        The SNMP access view. The field applies only to Fabric Engine (VOSS).
      type: string
      enum:
        - READ_ONLY
        - READ_WRITE
        - NOTIFY
        - READ_ONLY_NOTIFY
        - READ_WRITE_NOTIFY
    SnmpV3Type:
      description: |
        The SNMP version 3 type.
      type: string
      enum:
        - NO_AUTH
        - PRIV
        - AUTH
    Secret:
      description: This object represents an SNMP secret
      type: object
      properties:
        value:
          description: |
            The value of the SNMP password.
          type: string
          format: password
          minLength: 1
          maxLength: 32
        isEncrypted:
          description: |
            A value of true indicates the password is encrypted.  This property
            applies to Switch Engine (EXOS) only.
          type: boolean
    SnmpV3EncryptionMethod:
      description: |
        The SNMP version 3 encryption method. The values of AES_192,
        AES_256 and 3_DES apply only to Switch Engine (EXOS).
      type: string
      enum:
        - DES
        - AES_128
        - AES_192
        - AES_256
        - 3_DES
    SnmpV3AuthMethod:
      description: |
        The SNMP version 3 authentication method.
      type: string
      enum:
        - MD5
        - SHA
    SnmpV3Access:
      description: An SNMP version 3 access object
      type: object
      properties:
        username:
          description: The user name for this entry
          type: string
          minLength: 1
          maxLength: 32
        access:
          $ref: '#/components/schemas/SnmpV3AccessView'
        type:
          $ref: '#/components/schemas/SnmpV3Type'
        authenticationPassword:
          $ref: '#/components/schemas/Secret'
        encryptionPassword:
          $ref: '#/components/schemas/Secret'
        encryptionMethod:
          $ref: '#/components/schemas/SnmpV3EncryptionMethod'
        authenticationMethod:
          $ref: '#/components/schemas/SnmpV3AuthMethod'
    SnmpV3AccessList:
      description: A list of SNMP version 3 access objects
      type: array
      items:
        $ref: '#/components/schemas/SnmpV3Access'
    SnmpV3TrapReceiver:
      description: |
        This object represents the IPv4 or IPv6 host to recieve
        SNMP version 3 notifications.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        vrName:
          description: |
            The name of the Virtual Router.
          type: string
          minLength: 1
          maxLength: 32
        port:
          description: |
            The UDP port number associated with this user.
          type: integer
          minimum: 1
          maximum: 65535
        username:
          description: |
            The user name associated with this entry.
          type: string
          minLength: 1
          maxLength: 32
        securityLevel:
          $ref: '#/components/schemas/SnmpSecurityLevel'
        inform:
          description: |
            This property specifies the notify type (applies to Fabric Engine).
          type: boolean
    SnmpV3TrapReceiverList:
      description: A list of SNMP version 3 trap receiver objects
      type: array
      items:
        $ref: '#/components/schemas/SnmpV3TrapReceiver'
    SnmpV3Set:
      description: |
        This object represents the settable SNMP version 3 settings.
      type: object
      properties:
        enable:
          description: Enabled state for SNMP version 3
          type: boolean
          default: false
        access:
          $ref: '#/components/schemas/SnmpV3AccessList'
        trapReceiver:
          $ref: '#/components/schemas/SnmpV3TrapReceiverList'
    SnmpGetSettings:
      description: |
        This object represents the SNMP retrievable settings for the device.
      type: object
      properties:
        contact:
          description: |
            The contact associated with this device. For example,
            an email address or telephone number.
          type: string
          minLength: 0
          maxLength: 255
        location:
          description: |
            The location associated with this device.
          type: string
          minLength: 0
          maxLength: 255
        name:
          description: |
            The system name for this device.
          type: string
          minLength: 0
          maxLength: 255
        v1v2:
          $ref: '#/components/schemas/SnmpV1V2Set'
        v3:
          $ref: '#/components/schemas/SnmpV3Set'
    SntpServer:
      type: object
      properties:
        server:
          $ref: '#/components/schemas/GeneralHostOrIp'
        vrName:
          description: The name of the VR
          type: string
          minLength: 1
          maxLength: 32
    SntpSettings:
      description: Simple Network Time Protocol (SNTP) settings
      x-nos: switch-engine
      type: object
      properties:
        enabled:
          description: Enabled state for SNTP
          type: boolean
          default: false
        broadcastVrName:
          description: >
            The name of the VR to listen for broadcasts on if a server is not
            configured
          type: string
          minLength: 1
          maxLength: 32
        updateInterval:
          description: |
            The time interval (seconds) between polls for time information
            from the SNTP servers.
          type: integer
          default: 64
          minimum: 16
          maximum: 16284
        servers:
          description: List of SNTP servers on the device
          type: array
          items:
            $ref: '#/components/schemas/SntpServer'
    SpbmCfmGlobal:
      description: SPBM CFM global settings.
      type: object
      properties:
        enabled:
          description: Global CFM status for SPBM VLANs.
          type: boolean
          default: false
        level:
          description: Global CFM maintenance level for SPBM VLANs.
          type: integer
          minimum: 0
          maximum: 7
          default: 4
        mepId:
          description: Global CFM maintenance end point ID value for SPBM VLANs.
          type: integer
          minimum: 1
          maximum: 8191
          default: 1
    SpbmGlobalSettings:
      description: SPBM global settings object.
      type: object
      properties:
        enabled:
          description: SPBM global status.
          type: boolean
          default: false
        nicknameServerEnabled:
          description: Nick-name Server enabled state. Disabled via duplicate detection.
          type: boolean
          default: false
        nicknameServerPrefix:
          description: >
            The prefix is the value of the first octet of the Nick-name. There
            are 256 possible 

            Nick-name prefixes in total: 0.00.00 - F.F0.00 corresponding to 256
            ranges: 0.0x.xx - 

            F.Fx.xx, with 4k Nick-names each. This configuration is only used
            when the SPBM 
             Nick-name Server feature is enabled.
          type: string
    IsisSettingsRemote:
      description: ISIS global settings for remote area.
      type: object
      properties:
        manualAreaAddress:
          description: |
            A manually configured area address for this system. This 
            attribute is available in both areas.
          type: string
    IsisSettings:
      description: ISIS global settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisSettingsRemote'
        - type: object
          properties:
            ipSourceAddress:
              description: |
                ISIS SPBM IP address. Define an existing router interface
                for management (ping/traceroute). This attribute is 
                available in home area.
              type: string
              format: ipv4
            ipTunnelSourceAddress:
              description: |
                ISIS IP tunnel source address. This attribute is 
                available in home area.
              type: string
              format: ipv4
            ipTunnelVrf:
              description: |
                VRF name associated with IP tunnel. This attribute is 
                available in home area.
              type: string
              minLength: 0
              maxLength: 16
            ipTunnelOverlayEnabled:
              description: |
                A value of True will provide the ability of setting the 
                tunnel-source-address on interfaces belonging to a VRF 
                with I-SID attached. This attribute is available in home 
                area.
              type: boolean
              default: false
            backboneEnabled:
              description: |
                A value of True will allow a non DVR BEB to join the DVR 
                backbone tree in order to receive redistributed DVR Host 
                Routes from all the different DVR Controllers in the SPB 
                Network. This attribute is available in home area.
              type: boolean
              default: false
            sysName:
              description: |
                The hostname listed in LSP, or the system name if host
                name is not configured.
              type: string
    IsisSystemSettingsRemote:
      description: ISIS system settings for remote area.
      type: object
      properties:
        sysAdminState:
          description: |
            The administrative state of this Intermediate System. 
            Setting this object to the value 'on' when its current 
            value is 'off' enables the Intermediate System. This 
            attribute is available in both areas.
          type: string
          enum:
            - 'OFF'
            - 'ON'
          default: 'OFF'
        sysId:
          description: |
            The ID for this Intermediate System. This value is 
            appended to each of the area addresses to form the 
            Network Entity Titles. This attribute is available
            in both areas.
          type: string
    IsisSystemSettings:
      description: ISIS system settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisSystemSettingsRemote'
        - type: object
          properties:
            sysLevelSetOverloadEnabled:
              description: |
                A value of True will set the overload bit for the level.
                The overload bit will continue to be set if the
                implementation runs out of memory, independent of
                this variable. It may also be set manually independent
                of this variable, using the sysLevelSetOverloadUntil.
                This attribute is available in home area.
              type: boolean
              default: false
            sysLevelSetOverloadThreshold:
              description: |
                If this object is non-zero, the overload bit is set at
                this level when the sysAdminState variable goes to
                state 'on' for this Intermediate System. The overload bit
                remains set for sysLevelSetOverloadThreshold seconds.
                When sysLevelSetOverloadUntil seconds have elapsed,
                the overload flag remains set if the implementation has
                run out of memory, or if it is set manually using the
                isisSysLevelSetOverload object. If sysLevelSetOverload
                is false, the system clears the overload bit when 
                sysLevelSetOverloadUntil seconds have elapsed, if the 
                system has not run out of memory. This attribute is 
                available in home area.
              type: integer
    IsisMultiAreaGlobalSettings:
      description: >-
        ISIS multi-area global settings. These settings are available in both
        area types.
      type: object
      properties:
        areaName:
          description: >
            The ISIS system area-name. This attribute is available in both
            areas 

            and if the device does not support multi-area, it won`t be included

            in the home response.
          type: string
          minLength: 0
          maxLength: 255
        areaVNodeNickname:
          description: >
            Virtual node's nickname is used to calculate ISID multicast mac
            address.

            Values to be represented as x.xx.xx. This attribute is available in
            both 

            areas and if the device does not support multi-area, it won`t be
            included

            in the home response.
          type: string
        areaVNodeSysId:
          description: >
            The ISIS system id of the virtual node. This attribute is available
            in both 

            areas and if the device does not support multi-area, it won`t be
            included

            in the home response.
          type: string
        areaVNodeSysName:
          description: >
            The ISIS system name of the virtual node. This attribute is
            available in both 

            areas and if the device does not support multi-area, it won`t be
            included

            in the home response.
          type: string
          minLength: 0
          maxLength: 255
    IsisGlobalSettings:
      description: ISIS global settings for home area.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisSettings'
        - $ref: '#/components/schemas/IsisSystemSettings'
        - $ref: '#/components/schemas/IsisMultiAreaGlobalSettings'
    SpbmInstanceUpdateSettingsRemote:
      description: SPBM instance update settings for remote area
      type: object
      properties:
        nodeNickname:
          description: >
            SPBM node`s nickname. It is used to calculate ISID multicast mac
            address.
          type: string
    SpbmInstanceVlansSettings:
      description: SPBM instance vlans settings
      type: object
      properties:
        vlans:
          description: ISIS SPBM instance data vlans. There can be only 2 vlans set.
          type: array
          items:
            $ref: '#/components/schemas/VlanIdNonObject'
        primaryVlan:
          description: >
            Primary VLAN id for this SPBM instance. This attribute makes sense
            only

            if the vlans attribute contains 2 vlans. Otherwise it would be 0.
          type: integer
          minimum: 1
          maximum: 4094
    SpbmInstanceOrigin:
      description: SPBM instance origin.
      type: string
      enum:
        - AUTO_SENSE
        - CONFIG
        - DYNAMIC
      readOnly: true
    SpbmInstanceUpdateSettings:
      description: SPBM instance update settings
      type: object
      allOf:
        - $ref: '#/components/schemas/SpbmInstanceUpdateSettingsRemote'
        - $ref: '#/components/schemas/SpbmInstanceVlansSettings'
        - type: object
          properties:
            lsdbTrapEnabled:
              description: A value of True indicates trap is enabled on this SPBM instance
              type: boolean
              default: false
            ipShortcutEnabled:
              description: A value of True indicates IPv4 shortcut is enabled.
              type: boolean
              default: false
            ipv6ShortcutEnabled:
              description: A value of True indicates IPv6 shortcut is enabled.
              type: boolean
              default: false
            multicastEnabled:
              description: A value of True indicates multicast is enabled.
              type: boolean
              default: false
            multicastFwdCacheTimeout:
              description: Multicast forward cache in seconds.
              type: integer
              minimum: 10
              maximum: 86400
              default: 210
            stpMultihoming:
              description: A value of True indicates Fabric Multi-Homing is enabled.
              type: boolean
              default: false
            origin:
              $ref: '#/components/schemas/SpbmInstanceOrigin'
    SpbmInstanceId:
      description: SPBM instance ID.
      type: integer
      minimum: 1
      maximum: 100
    SpbmInstanceSettings:
      description: SPBM instance settings for home area.
      type: object
      allOf:
        - $ref: '#/components/schemas/SpbmInstanceUpdateSettings'
        - $ref: '#/components/schemas/SpbmInstanceVlansSettings'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SpbmInstanceId'
      required:
        - id
    IsisGlobalAndSpbmSettings:
      description: ISIS global settings for home area.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisGlobalSettings'
        - type: object
          properties:
            spbm:
              $ref: '#/components/schemas/SpbmInstanceSettings'
    IsisGlobalSettingsRemote:
      description: ISIS global settings for home area.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisSettingsRemote'
        - $ref: '#/components/schemas/IsisSystemSettingsRemote'
        - $ref: '#/components/schemas/IsisMultiAreaGlobalSettings'
    SpbmInstanceSettingsRemote:
      description: SPBM instance settings for remote area.
      type: object
      allOf:
        - $ref: '#/components/schemas/SpbmInstanceUpdateSettingsRemote'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SpbmInstanceId'
      required:
        - id
    IsisGlobalAndSpbmSettingsRemote:
      description: ISIS global settings for home area.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisGlobalSettingsRemote'
        - type: object
          properties:
            spbm:
              $ref: '#/components/schemas/SpbmInstanceSettingsRemote'
    IsisAreaType:
      description: ISIS area type.
      type: string
      enum:
        - HOME
        - REMOTE
      default: HOME
    IsisGlobalAndSpbmSettingsPerArea:
      description: ISIS global settings and SPBM instance settings per area type.
      type: object
      properties:
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      anyOf:
        - $ref: '#/components/schemas/IsisGlobalAndSpbmSettings'
        - $ref: '#/components/schemas/IsisGlobalAndSpbmSettingsRemote'
      discriminator:
        propertyName: areaType
        mapping:
          HOME: '#/components/schemas/IsisGlobalAndSpbmSettings'
          REMOTE: '#/components/schemas/IsisGlobalAndSpbmSettingsRemote'
    IsisCircuitAuthKey:
      description: |
        Authentication key to be used to authenticate
        IIH sent/received on the circuit/interface.
      type: object
      properties:
        value:
          description: >-
            Authentication key. Currently, the configured authentication key is
            always encrypted upon retrieval on Fabric Engine.
          type: string
          minLength: 0
          maxLength: 255
        isEncrypted:
          description: >-
            Specifies if the authentication key is encrypted (true) or clear
            text (false). Currently, this attribute is read-only on Fabric
            Engine.
          type: boolean
      required:
        - value
    IsisCircuitAuthKeyId:
      description: |
        Authentication key id related to IIH key
        This can be set only if the authKeyType is HMAC_MD5.
        The value of 0 indicates key ID is not configured.
      type: integer
      minimum: 0
      maximum: 255
    IsisCircuitAuthKeyType:
      description: >
        Authentication type for IIH to be sent/received on the
        circuit/interface.
      type: string
      enum:
        - NONE
        - SIMPLE
        - HMAC_MD5
        - HMAC_SHA_256
      default: NONE
    IsisCircuitEnabled:
      description: ISIS circuit state.
      type: boolean
      default: false
    IsisCircuitL1HelloMultiplier:
      description: |
        This value is multiplied by the corresponding HelloTimer
        and the result in seconds (rounded up) is used as the
        holding time in transmitted hellos, to be used by
        receivers of hello packets from this IS
      type: integer
      minimum: 1
      maximum: 600
      default: 3
    IsisCircuitL1HelloTimer:
      description: |
        Maximum period, in milliseconds, between IIH PDUs
        on multiaccess networks at this level for LANs.
        The value at L1 is used as the period between
        Hellos on L1L2 point to point circuits.  Setting
        this value at level 2 on an L1L2 point to point
        circuit will result in an error of InconsistentValue.
        This object follows the resettingTimer behavior."
      type: integer
      minimum: 1000
      maximum: 600000
      default: 9000
    IsisCircuitL1ISPriority:
      description: |
        The priority for becoming LAN Designated
        Intermediate System at this level.
      type: integer
      minimum: 0
      maximum: 127
      default: 64
    IsisCircuitBasicObject:
      description: ISIS configuration per interface.
      type: object
      properties:
        authKey:
          $ref: '#/components/schemas/IsisCircuitAuthKey'
        authKeyId:
          $ref: '#/components/schemas/IsisCircuitAuthKeyId'
        authKeyType:
          $ref: '#/components/schemas/IsisCircuitAuthKeyType'
        enabled:
          $ref: '#/components/schemas/IsisCircuitEnabled'
        l1HelloMultiplier:
          $ref: '#/components/schemas/IsisCircuitL1HelloMultiplier'
        l1HelloTimer:
          $ref: '#/components/schemas/IsisCircuitL1HelloTimer'
        l1ISPriority:
          $ref: '#/components/schemas/IsisCircuitL1ISPriority'
    IsisCircuitSpbmInstIfType:
      description: ISIS circuit type.
      type: string
      enum:
        - POINT_TO_POINT
      default: POINT_TO_POINT
      readOnly: true
    IsisCircuitSpbmInstL1Metric:
      description: |
        The metric value of this circuit for this level.
      type: integer
      minimum: 1
      maximum: 16777215
      default: 10
    IsisCircuitSpbmInstL1MetricAutoEnabled:
      description: The l1 metric auto state of this circuit for this level.
      type: boolean
    IsisCircuitSpbmBasicObject:
      description: ISIS SPBM interface configuration.
      type: object
      properties:
        enabled:
          description: SPBM instance state
          type: boolean
          default: true
          readOnly: true
        interfaceType:
          $ref: '#/components/schemas/IsisCircuitSpbmInstIfType'
        l1Metric:
          $ref: '#/components/schemas/IsisCircuitSpbmInstL1Metric'
        l1MetricAuto:
          $ref: '#/components/schemas/IsisCircuitSpbmInstL1MetricAutoEnabled'
        l1MetricOperational:
          description: The operational metric value of this circuit for this level.
          type: integer
          readOnly: true
        origin:
          $ref: '#/components/schemas/SpbmInstanceOrigin'
    IsisCircuitSpbmSettings:
      description: ISIS SPBM configuration per interface.
      type: object
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SpbmInstanceId'
        - $ref: '#/components/schemas/IsisCircuitSpbmBasicObject'
    IsisCircuitSettings:
      description: ISIS configuration per interface.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisCircuitBasicObject'
        - type: object
          properties:
            spbm:
              $ref: '#/components/schemas/IsisCircuitSpbmSettings'
    IsisCircuitSettingsLagList:
      description: ISIS configuration list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
              lagId:
                $ref: '#/components/schemas/LagId'
          - $ref: '#/components/schemas/IsisCircuitSettings'
    IsisCircuitSettingsPortList:
      description: ISIS configuration list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
              port:
                $ref: '#/components/schemas/PortName'
          - $ref: '#/components/schemas/IsisCircuitSettings'
    IsidNonObject:
      description: >
        A value that uniquely identifies the Layer 2 and Layer 3 services
        instances network-wide.

        Values greater than 16000000 are for Layer 2 instances dynamically
        added. For set operations,

        the ISID maximum value is 15999999
      type: integer
      minimum: 1
      maximum: 16777215
      format: int32
    Isid:
      description: ISID (service instance identifier) settings.
      type: object
      properties:
        isid:
          $ref: '#/components/schemas/IsidNonObject'
    IsidName:
      description: A value that uniquely identifies the ISID.
      type: string
      minLength: 0
      maxLength: 64
    IsidOrigin:
      description: Type of ISID origin.
      type: string
      enum:
        - INVALID
        - CONFIG
        - DISCOVER-LOCAL
        - DISCOVER-REMOTE
        - MANAGEMENT
        - EAP-LOCAL
        - EAP-REMOTE
        - AUTO-SENSE
        - REDIST
        - RADIUSL2VSN
      readOnly: true
    IsidGetSummaryObject:
      description: ISIS get summary settings.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IsidName'
        origin:
          type: array
          items:
            $ref: '#/components/schemas/IsidOrigin'
    CvlanGetSettingsObject:
      description: CVLAN settings
      type: object
      properties:
        platformVlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    CvlanGetObject:
      description: CVLAN get object
      type: object
      allOf:
        - $ref: '#/components/schemas/Isid'
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - $ref: '#/components/schemas/CvlanGetSettingsObject'
    CvlanList:
      description: A list of CVLAN instances
      type: array
      items:
        $ref: '#/components/schemas/CvlanGetObject'
    LagIds:
      description: A list of LAG ids
      type: array
      items:
        $ref: '#/components/schemas/LagId'
    PortMembers:
      description: A list of ports
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    TuniGetSettingsObject:
      description: TUNI get settings.
      type: object
      properties:
        lagIds:
          $ref: '#/components/schemas/LagIds'
        portMembers:
          $ref: '#/components/schemas/PortMembers'
    TuniGetObject:
      description: TUNI get object
      type: object
      allOf:
        - $ref: '#/components/schemas/Isid'
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - $ref: '#/components/schemas/TuniGetSettingsObject'
    TuniList:
      description: A list of TUNI instances
      type: array
      items:
        $ref: '#/components/schemas/TuniGetObject'
    SuniCvid:
      description: |
        A value that uniquely identifies the customer vid
        of this SUNI end point. 4095 is not used. 4096 is reserved for
        untagged case
      type: integer
      minimum: 1
      maximum: 4096
      format: int32
    SuniBpdu:
      description: >-
        A value of True will enable bpdu for untagged end point. This is
        applicable only for untagged traffic(cvid 4096).
      type: boolean
      default: false
    SuniCvidInterfacesObject:
      description: SUNI enpoints settings.
      type: object
      properties:
        lagIds:
          $ref: '#/components/schemas/LagIds'
        portMembers:
          $ref: '#/components/schemas/PortMembers'
        cvid:
          $ref: '#/components/schemas/SuniCvid'
        bpduEnabled:
          $ref: '#/components/schemas/SuniBpdu'
    SuniGetSettingsObject:
      description: SUNI get settings.
      type: object
      properties:
        platformVlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/SuniCvidInterfacesObject'
    SuniGetObject:
      description: SUNI get object
      type: object
      allOf:
        - $ref: '#/components/schemas/Isid'
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - $ref: '#/components/schemas/SuniGetSettingsObject'
    SuniList:
      description: A list of SUNI instances
      type: array
      items:
        $ref: '#/components/schemas/SuniGetObject'
    IsidList:
      description: ISID list configured on the device.
      type: object
      properties:
        cvlan:
          $ref: '#/components/schemas/CvlanList'
        tuni:
          $ref: '#/components/schemas/TuniList'
        suni:
          $ref: '#/components/schemas/SuniList'
    IsidDestination:
      description: >
        Specifies an ISID number to represent a local Layer 3 VSN to which

        the ISIS accept policy applies. A value of 0 represents the global
        routing table(GRT).
      type: integer
      minimum: 0
      maximum: 15999999
      format: int32
    RouteMapName:
      description: >
        Route map name. The ISIS routes are selectively accepted based on the
        route policy.

        An empty string will allow to delete a route map added previously.
      type: string
      minLength: 0
      maxLength: 64
    IsisAcceptDefaultPolicy:
      description: ISIS default accept policy
      type: object
      properties:
        routeMap:
          $ref: '#/components/schemas/RouteMapName'
        backboneRouteMap:
          $ref: '#/components/schemas/RouteMapName'
    IsisAcceptPolicyUpdateSettings:
      description: ISIS accept policy settings
      type: object
      properties:
        enabled:
          description: A value of True will enable filtering.
          type: boolean
          default: false
        routeMap:
          $ref: '#/components/schemas/RouteMapName'
        backboneRouteMap:
          $ref: '#/components/schemas/RouteMapName'
    FilterIsid:
      description: >
        Specifies an ISID number to represent a local or remote Layer 3 VSN used
        for filtering incoming ISIS routes. 

        A value of 0 represents the global routing table(GRT).
      type: integer
      minimum: 0
      maximum: 15999999
    IsisAcceptIsidPolicy:
      description: ISIS ISID accept policy
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisAcceptPolicyUpdateSettings'
        - type: object
          properties:
            filterIsid:
              $ref: '#/components/schemas/FilterIsid'
    IsisAcceptIsidListPolicyUpdateSettings:
      description: ISIS ISID list accept policy settings
      type: object
      properties:
        enabled:
          description: A value of True will enable ISID list filtering.
          type: boolean
          default: false
        routeMap:
          $ref: '#/components/schemas/RouteMapName'
        backboneRouteMap:
          $ref: '#/components/schemas/RouteMapName'
    FilterIsidList:
      description: >
        Name of ISID list. The ISID list contains all the ISID ids from which
        routes will be accepted.
      type: string
      minLength: 1
      maxLength: 32
    IsisAcceptIsidListPolicy:
      description: ISIS ISID list accept policy
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisAcceptIsidListPolicyUpdateSettings'
        - type: object
          properties:
            filterIsidListName:
              $ref: '#/components/schemas/FilterIsidList'
    IsisAcceptNicknamePolicyUpdateSettings:
      description: ISIS nickname accept policy update settings
      type: object
      properties:
        enabled:
          description: A value of True will enable nickname entry and filtering.
          type: boolean
          default: false
        routeMap:
          $ref: '#/components/schemas/RouteMapName'
        backboneRouteMap:
          $ref: '#/components/schemas/RouteMapName'
    SpbmNickname:
      description: SPBM nickname in format x.xx.xx - 2.5 bytes
      type: string
    IsisAcceptNicknamePolicy:
      description: ISIS nickname accept policy
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
        - type: object
          properties:
            nickname:
              $ref: '#/components/schemas/SpbmNickname'
    IsisAcceptNicknameIsidPolicy:
      description: ISIS nickname ISID accept policy
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
      properties:
        nickname:
          $ref: '#/components/schemas/SpbmNickname'
        filterIsid:
          $ref: '#/components/schemas/IsidDestination'
    IsisAcceptNicknameIsidListPolicy:
      description: ISIS nickname ISID list accept policy
      allOf:
        - $ref: '#/components/schemas/IsisAcceptNicknamePolicyUpdateSettings'
        - type: object
          properties:
            nickname:
              $ref: '#/components/schemas/SpbmNickname'
            filterIsidListName:
              $ref: '#/components/schemas/FilterIsidList'
    IsisAcceptPolicies:
      description: ISIS accept policies
      type: object
      properties:
        defaultPolicy:
          $ref: '#/components/schemas/IsisAcceptDefaultPolicy'
        isidPolicy:
          description: ISID accept policies.
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptIsidPolicy'
        isidListPolicy:
          description: ISID list accept policies.
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptIsidListPolicy'
        nicknamePolicy:
          description: Nickname accept policies.
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptNicknamePolicy'
        nicknameIsidPolicy:
          description: Nickname and ISID accept policies.
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptNicknameIsidPolicy'
        nicknameIsidListPolicy:
          description: Nickname and ISID list policies.
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptNicknameIsidListPolicy'
    IsisAcceptPoliciesWithIsidDestination:
      description: ISIS accept policies per ISID
      type: object
      properties:
        isidDestination:
          $ref: '#/components/schemas/IsidDestination'
        ipv4:
          $ref: '#/components/schemas/IsisAcceptPolicies'
        ipv6:
          $ref: '#/components/schemas/IsisAcceptPolicies'
    AddressType:
      description: The type of IP address (IPv4 or IPv6)
      type: string
      enum:
        - IPv4
        - IPv6
    L3VsnMvpnPerVrfSettings:
      description: >-
        This object represents a MVPN node settings. This setting is Fabric
        Engine only.
      type: object
      properties:
        enabled:
          description: The status of MVPN on a VRF.
          type: boolean
          default: false
        forwardCacheTimeout:
          description: MVPN Forward Cache Timeout in seconds.
          type: integer
          format: int32
          minimum: 10
          maximum: 86400
          default: 210
    L3VsnSettings:
      description: This object represents a VPN node settings.
      allOf:
        - $ref: '#/components/schemas/Isid'
        - type: object
          properties:
            vpnEnabled:
              description: The enabled status of IP VPN node.
              type: boolean
              default: false
            ipvpnType:
              $ref: '#/components/schemas/AddressType'
            isidName:
              $ref: '#/components/schemas/IsidName'
            mvpn:
              $ref: '#/components/schemas/L3VsnMvpnPerVrfSettings'
    L3Vsn:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/L3VsnSettings'
    IsisLogicalIfId:
      description: ISIS logical interface ID.
      type: integer
      minimum: 1
      maximum: 255
    IsisInterfaceSettingsByArea:
      description: ISIS configuration list
      type: object
      allOf:
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
        - $ref: '#/components/schemas/IsisCircuitSettings'
      required:
        - areaType
    IsisLogicalIfType:
      description: |
        Indicates the entry is for Layer2 or Layer3.
      type: string
      enum:
        - IP
        - LAYER2
      readOnly: true
    IsisLogicalIfOrigin:
      description: |
        Indicates how the logical interface was created.
      type: string
      enum:
        - CONFIG
        - ZTF
      readOnly: true
    IsisLogicalIfBasic:
      description: ISIS logical interface configuration.
      type: object
      properties:
        interfaceType:
          $ref: '#/components/schemas/IsisLogicalIfType'
        isisMtu:
          description: >-
            The value specifies MTU of ISIS control packets on logical interface
            tunnel. This attribute cannot be configured on XA1400.
          type: integer
          minimum: 750
          maximum: 1600
          default: 1600
        mtu:
          description: >-
            The value specifies MTU of logical interface tunnel. This attribute
            can only be configured on XA1400.
          type: integer
          minimum: 750
          maximum: 9000
          default: 1950
        name:
          description: An administratively-assigned name for the logical interface.
          type: string
          minimum: 1
          maximum: 64
        origin:
          $ref: '#/components/schemas/IsisLogicalIfOrigin'
    IsisL3LogicalIfBasic:
      description: ISIS logical interface L3 configuration.
      type: object
      properties:
        destIpAddr:
          description: The logical interface Destination IP address.
          type: string
          format: ipv4
        nextHopVrName:
          description: >-
            Next hop vr name to reach logical tunnel dest-ip. This attribute
            cannot be configured on XA1400.
          type: string
          minLength: 1
          maxLength: 32
        srcIpAddr:
          description: >-
            The logical interface Source IP address. This attribute cannot be
            configured on XA1400.
          type: string
          format: ipv4
    IsisL2LogicalIfBasic:
      description: ISIS logical interface L2 configuration.
      type: object
      properties:
        destIfName:
          description: >-
            The interface name to which this logical interface corresponds.
            Applies for LAYER2 type only and it can be port or LAG name.
          type: string
          readOnly: true
    IsisLogicalIfSettings:
      description: ISIS logical interface configuration.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisLogicalIfBasic'
        - $ref: '#/components/schemas/IsisL3LogicalIfBasic'
        - $ref: '#/components/schemas/IsisL2LogicalIfBasic'
    IsisLogicalIfSettingsAllList:
      description: ISIS configuration list
      type: array
      items:
        allOf:
          - type: object
            properties:
              logicalIfId:
                $ref: '#/components/schemas/IsisLogicalIfId'
              areas:
                description: ISIS area configuration
                type: array
                items:
                  $ref: '#/components/schemas/IsisInterfaceSettingsByArea'
          - $ref: '#/components/schemas/IsisLogicalIfSettings'
    IsisL2MultiAreaMulticastSnoopRedistUpdateObject:
      description: ISIS L2 multi-area multicast snooping redistribute update object
      type: object
      properties:
        routePolicy:
          description: >
            Specified the name of the route policy used to configure L2
            multi-area multicast snooping redistribute.
          type: string
          minLength: 0
          maxLength: 64
        enabled:
          description: >-
            A value of True enables L2 multi-area multicast snooping
            redistribution.
          type: boolean
          default: false
    IsisRedistDirection:
      description: Specifies the ISIS redistribution configuration direction
      type: string
      enum:
        - HOME_TO_REMOTE
        - REMOTE_TO_HOME
        - ALL_DIRECTIONS
    IsisL2MultiAreaMulticastSnoopIsidCreateObject:
      description: >-
        ISIS L2 multi-area multicast snooping redistribute for specific ISID
        create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopRedistUpdateObject'
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
            direction:
              $ref: '#/components/schemas/IsisRedistDirection'
      required:
        - isid
    L2IsidList:
      description: |
        Name of L2 ISID list. This list contains ISID instances.
      type: string
      minLength: 1
      maxLength: 32
    IsisL2MultiAreaMulticastSnoopIsidListCreateObject:
      description: >-
        ISIS L2 multi-area multicast snooping redistribute for specific ISID
        list create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopRedistUpdateObject'
        - type: object
          properties:
            isidListName:
              $ref: '#/components/schemas/L2IsidList'
            direction:
              $ref: '#/components/schemas/IsisRedistDirection'
      required:
        - isidListName
    IsisL2MultiAreaMulticastSnoopRedist:
      description: ISIS L2 multi-area multicast snooping redistribute get object
      type: object
      properties:
        byIsid:
          description: >-
            Returns all L2 multi-area multicast snooping redistribution for
            specified ISID instances.
          type: array
          items:
            $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopIsidCreateObject'
        byIsidListName:
          description: >-
            Returns all L2 multi-area multicast snooping redistribution for
            specified ISID list instances.
          type: array
          items:
            $ref: >-
              #/components/schemas/IsisL2MultiAreaMulticastSnoopIsidListCreateObject
    IsisL2MultiAreaIsidRedistObject:
      description: ISIS L2 multi-area ISID redistribute object
      type: object
      properties:
        permitType:
          description: >-
            Used to set inter-area L2 ISID redistribution policy to permit or
            deny.
          type: string
          enum:
            - PERMIT
            - DENY
        exceptIsidList:
          description: >
            Used to configure inter-area L2 ISID redistribution exception
            isid-list name. 

            ISID values contained by this list will not be subject to the
            permit/deny rule.
    IsisAllRedistL2MultiArea:
      description: ISIS SPBM redistribute settings for L2 multi-area
      type: object
      properties:
        multicastSnoop:
          $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopRedist'
        isid:
          $ref: '#/components/schemas/IsisL2MultiAreaIsidRedistObject'
    IsidSource:
      description: >
        Specifies an ISID number to represent a local Layer 3 VSN to which

        the redistribution of routes applies. A value of 0 represents the global
        routing table(GRT).
      type: integer
      minimum: 0
      maximum: 15999999
      format: int32
    IsisL3MultiAreaRedistUpdateObject:
      description: ISIS L3 multi-area redistribute update object
      type: object
      properties:
        routePolicy:
          description: >
            Specified the name of the route policy used to associate a route
            policy to an L3 multi-area redistribute entry.
          type: string
          minLength: 0
          maxLength: 64
        enabled:
          description: A value of True enables L3 multi-area redistribution.
          type: boolean
          default: false
    IsisL3MultiAreaRedistGetObject:
      description: ISIS L3 multi-area redistribute create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL3MultiAreaRedistUpdateObject'
        - type: object
          properties:
            direction:
              $ref: '#/components/schemas/IsisRedistDirection'
    IsisL3MultiAreaRedist:
      description: ISIS L3 multi-area redistribute get object
      type: object
      properties:
        isidSource:
          $ref: '#/components/schemas/IsidSource'
        ipv4Multicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
        ipv4Unicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
        ipv6Unicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
    IsisL3RedistUpdateObject:
      description: ISIS L3 redistribute update object
      type: object
      properties:
        enabled:
          description: >-
            A value of True enables the redistribution of the specified protocol
            into the SPBM network.
          type: boolean
          default: false
        metric:
          description: Cost to apply to redistributed routes.
          type: integer
          minimum: 0
          maximum: 65535
          default: 1
        metricType:
          description: |
            Specifies the type of route to import from the protocol.
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
          default: INTERNAL
        routePolicy:
          description: |
            Configures the route policy to apply the redistributes routes.
          type: string
          minLength: 0
          maxLength: 64
        subnets:
          description: >
            Indicates whether the subnets are advertised individually or
            aggregated

            to their classful subnet. Choose suppress to advertise subnets

            aggregated to their classful subnet. Choose allow to advertise the

            subnets individually with the learned or configured mask of the
            subnet.

            This is applicable only for IPv4 redistribution.
          type: string
          enum:
            - ALLOW
            - SUPPRESS
            - NONE
          default: ALLOW
    IsisL3RedistProtocol:
      description: Specifies the protocol from which the routes are redistributed in ISIS
      type: string
      enum:
        - DIRECT
        - BGP
        - OSPF
        - RIP
        - STATIC
    IsisL3RedistCreateObject:
      description: ISIS L3 redistribute create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL3RedistUpdateObject'
        - type: object
          properties:
            protocol:
              $ref: '#/components/schemas/IsisL3RedistProtocol'
      required:
        - protocol
    IsisL3Redist:
      description: ISIS L3 redistribute get object
      type: object
      properties:
        isidSource:
          $ref: '#/components/schemas/IsidSource'
        ipv4RedistributeList:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3RedistCreateObject'
        ipv6RedistributeList:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3RedistCreateObject'
    IsisStaticIsidRedistUpdateObject:
      description: ISIS redistribute static ISID routed-multicast update object
      type: object
      properties:
        enabled:
          description: >-
            A value of True enables the redistribution of the specified protocol
            into the SPBM network.
          type: boolean
          default: false
    IsisStaticIsidRedistCreateObject:
      description: ISIS redistribute static ISID routed-multicast create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisStaticIsidRedistUpdateObject'
        - type: object
          properties:
            direction:
              $ref: '#/components/schemas/IsisRedistDirection'
            isidListName:
              $ref: '#/components/schemas/L2IsidList'
      required:
        - isidListName
    IsisStaticIsidRedist:
      description: ISIS static ISID redistribute get object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisStaticIsidRedistCreateObject'
    IsisDvrBbRedist:
      description: ISIS Distributed Virtual Routing(DvR) redistribute object
      type: object
      properties:
        enabled:
          description: A value of True will enable DvR backbone redistribution.
          type: boolean
          default: false
    IsisAllRedistMultiArea:
      description: ISIS SPBM redistribute settings for multi-area
      type: object
      properties:
        staticIsid:
          type: array
          items:
            $ref: '#/components/schemas/IsisStaticIsidRedist'
        dvr:
          $ref: '#/components/schemas/IsisDvrBbRedist'
    IsisAllRedist:
      description: ISIS SPBM redistribute settings for all types of redistribution
      type: object
      properties:
        l2MultiArea:
          $ref: '#/components/schemas/IsisAllRedistL2MultiArea'
        l3MultiArea:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedist'
        l3:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3Redist'
        multiArea:
          $ref: '#/components/schemas/IsisAllRedistMultiArea'
    SpbmConfigurationElement:
      description: Device's entire (root level) SPBM configuration
      x-nos: fabric-engine
      type: object
      properties:
        cfm:
          $ref: '#/components/schemas/SpbmCfmGlobal'
        global:
          $ref: '#/components/schemas/SpbmGlobalSettings'
        isisGlobal:
          description: SPBM ISIS global setting per area
          type: array
          items:
            $ref: '#/components/schemas/IsisGlobalAndSpbmSettingsPerArea'
        isisLag:
          $ref: '#/components/schemas/IsisCircuitSettingsLagList'
        isisPort:
          $ref: '#/components/schemas/IsisCircuitSettingsPortList'
        l2Isid:
          $ref: '#/components/schemas/IsidList'
        l3AcceptPolicy:
          description: ISIS accept policies information
          type: array
          items:
            $ref: '#/components/schemas/IsisAcceptPoliciesWithIsidDestination'
        l3vsn:
          description: The L3VSN settings for each VRF.
          type: array
          items:
            $ref: '#/components/schemas/L3Vsn'
        logicalIf:
          $ref: '#/components/schemas/IsisLogicalIfSettingsAllList'
        redistribution:
          $ref: '#/components/schemas/IsisAllRedist'
    StackingSettings:
      description: Stacking settings
      x-nos: switch-engine
      type: object
      properties:
        enabled:
          description: >-
            The stacking admin enabled setting is used to form the stack after
            physically cabled appropriately. Stacking enablement is operational
            after reboot.
          type: boolean
        ports:
          type: object
          properties:
            enabled:
              description: >-
                The stack ports admin enabled setting is used to change
                universal ports (U1/U2) to/from stacking-port and ethernet-port
                use cases. Stack ports enablement is operational after reboot.
              type: boolean
    StormControlActionType:
      description: >-
        Storm control action which is taken in addition to dropping packets
        above the specified rate.
      type: string
      enum:
        - NONE
        - SHUTDOWN
        - TRAP
        - LOG
    StormControlSettings:
      description: Storm control settings
      type: object
      properties:
        enabled:
          description: Storm control enabled state on the current port.
          type: boolean
          default: false
        actions:
          description: >-
            Storm control actions taken in addition to dropping packets above
            the specified rate.
          type: array
          items:
            $ref: '#/components/schemas/StormControlActionType'
        rate:
          description: Allowed traffic rate in packets per seconds.
          type: integer
          format: int32
    PortsStormControlSettings:
      type: object
      description: >
        The storm control settings for lists of ports for unicast, broadcast and
        multicast traffic type.

        On Fabric Engine (VOSS) only "broadcastStormControl" and
        "multicastStormControl" are supported.
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        unicastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
        broadcastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
        multicastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
    StpName:
      description: |
        STP instance name. 
        For Fabric Engine (VOSS) STP instance range is 0-63. 
        For Fabric Engine (VOSS) - in MSTP mode, stp instance
        name and MSTI id should match.
      type: string
      minLength: 1
      maxLength: 32
    StpNameObject:
      description: STP name object
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StpName'
    StpInstanceSettings:
      description: STP instance (domain) settings.
      type: object
      properties:
        enabled:
          description: |
            The admin enabled setting that indicates if STP is enabled
            in this STP domain.
          type: boolean
        forwardTime:
          description: |
            The time in seconds that the ports in this STP domain spend in the
            listening and learning states when the switch is the root bridge.
          type: integer
          minimum: 4
          maximum: 30
          default: 15
          format: int32
        holdCount:
          description: |
            The maximum number of BPDUs transmitted per second. This is used by
            the Port Transmit state machine to limit BPDU transmission rate.
          type: integer
          minimum: 1
          maximum: 10
          default: 6
          format: int32
        maxAge:
          description: The maximum age of a BPDU in seconds.
          type: integer
          minimum: 6
          maximum: 40
          default: 20
          format: int32
        maxHops:
          description: |
            The maximum hop count of a BPDU until the BPDU is discarded
            in this STP domain. This is specific to MSTP.
            For Switch Engine, the minimum allowed value is 6.
          type: integer
          minimum: 1
          maximum: 40
          default: 20
          format: int32
        mode:
          description: >
            The version of STP the bridge is currently running.

            This attribute is applicable for SET operations only to Switch
            Engine (EXOS).
          type: string
          enum:
            - STP
            - MSTP
            - RSTP
        msti:
          description: >
            MSTP instance for MSTP domain. This is valid when the mode is MSTP.

            A value of 0 indicates the CIST (Common and Internal Spanning Tree).

            For Fabric Engine, the maximum allowed value is 63.

            This attribute is applicable for SET operations only to Switch
            Engine (EXOS).
          type: integer
          minimum: 0
          maximum: 4094
          default: 0
          format: int32
        priority:
          description: |
            The bridge priority of the STP domain. For MSTP, the value
            must be in steps of 4096. The maximum value for MSTP is 61440.
            For RSTP, the value can be in steps of 1 for Switch Engine,
            but the value must be in steps of 4096 for Fabric Engine.
          type: integer
          minimum: 0
          maximum: 65535
          default: 32768
          format: int32
    StpInstance:
      allOf:
        - $ref: '#/components/schemas/StpNameObject'
        - $ref: '#/components/schemas/StpInstanceSettings'
    BpduProtection:
      description: |
        Bridge Procotol Data Unit (BPDU) Protection setting.
        GUARD - Controls whether a port explicitly configured as edge
        will disable itself upon reception of a BPDU.
        DISABLED - Turn off BPDU protection.
      type: string
      enum:
        - GUARD
        - DISABLED
    BpduEncapMode:
      description: |
        Port BPDU encapsulation mode - Switch Engine (EXOS) only.
        This port mode is separate from the STP domain mode. For example,
        a port can be configured to accept the PVST+ (Per VLAN Spanning Tree)
        BPDU encapsulation, while the domain mode is "STP".
        STP - This is the default port mode.
        EMISTP - Extreme Multiple Spanning Tree Protocol mode is proprietary.
        It is an extension of STP that allows a physical port to belong to
        multiple STP domains by assigning the port to multiple VLANs.
        PVST_PLUS - Per VLAN Spanning Tree mode is a mode in which the STP
        domain has a one-to-one relationship with VLANs.
      type: string
      enum:
        - STP
        - EMISTP
        - PVST_PLUS
      default: STP
    PortStpSettings:
      description: This object represents the STP settings for a port.
      type: object
      properties:
        enabled:
          description: |
            Current STP state of the port for the associated STP domain/instance
            which can be enabled or disabled.
          type: boolean
        isEdgePort:
          description: |
            A value of True indicates that the port is directly connected to a
            user terminal rather than other switches.
          type: boolean
        autoEdgeEnabled:
          description: |
            The admin enabled setting that indicates if auto-edge detection
            is enabled on this port - Switch Engine (EXOS) only.
          type: boolean
          default: true
        priority:
          description: |
            The value of the priority field which is contained in the first
            (in network byte order) octet of the (2 octet long) Port ID.
            The value must be in steps of 16.
          type: integer
          minimum: 0
          maximum: 240
          default: 128
          format: int32
        bpduProtection:
          $ref: '#/components/schemas/BpduProtection'
        bpduRestrictEnabled:
          description: |
            This is a loop prevention mechanism configured with bpduProtection.
            When set to True, this port is disabled as soon as an STP BPDU
            is received. This setting applies to Switch Engine (EXOS) only.
            For Fabric Engine (VOSS), this setting is not configurable but
            is always on when bpduProtection is turned on.
          type: boolean
        recoveryTimeout:
          description: >
            The time period in seconds after which a disabled port is
            re-enabled.

            A value of 0 indicates the port will not be re-enabled.

            For Switch Engine, the default value is 0 (port remains disabled)
            and

            the allowed range of values are 60 to 600 seconds.

            For Fabric Engine, the default value is 60 seconds and

            the allowed range of values are 10 to 65535 seconds.
          type: integer
          minimum: 0
          maximum: 65535
          format: int32
        pathCost:
          description: |
            The contribution of this port to the path cost of paths towards the 
            spanning tree root which include this port.
          type: integer
          minimum: 1
          maximum: 200000000
          format: int32
        mode:
          $ref: '#/components/schemas/BpduEncapMode'
    StpPort:
      description: This object represents the ports settings for STP domain.
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
        settings:
          $ref: '#/components/schemas/PortStpSettings'
    StpInstanceWithPorts:
      description: STP instance settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StpInstance'
        - type: object
          properties:
            ports:
              type: array
              items:
                $ref: '#/components/schemas/StpPort'
    PortStpVlans:
      description: The port list from a VLAN id part of a STP domain
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    StpVlanIdWithPorts:
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            ports:
              $ref: '#/components/schemas/PortStpVlans'
    StpComponentGet:
      description: STP instance settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StpInstanceWithPorts'
        - type: object
          properties:
            vlans:
              type: array
              items:
                $ref: '#/components/schemas/StpVlanIdWithPorts'
    SeverityLevels:
      type: string
      description: >
        The type of Severity (Applicability to each NOS is shown below).

        |        Type             |  Fabric Engine (VOSS)   |  Switch Engine
        (EXOS) |

        |-------------------------|-------------------------|-----------------------|

        |    EMERGENCY            |   FATAL                 | 
        CRITICAL             |

        |    ALERT                |   FATAL                 | 
        CRITICAL             |

        |    CRITICAL             |   FATAL                 | 
        CRITICAL             |

        |    ERROR                |   ERROR                 | 
        ERROR                |

        |    WARNING              |   WARNING               | 
        WARNING              |

        |    NOTICE               |   INFO                  | 
        NOTICE               |

        |    INFORMATIONAL        |   INFO                  | 
        INFO                 |

        |    DEBUG                |   INFO                  | 
        DEBUG-DATA           |
      enum:
        - EMERGENCY
        - ALERT
        - CRITICAL
        - ERROR
        - WARNING
        - NOTICE
        - INFORMATIONAL
        - DEBUG
      example: NOTICE
    SyslogServer:
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        vrName:
          description: Syslog server VR name (Switch Engine only)
          type: string
          minLength: 1
          maxLength: 32
        hostId:
          description: Syslog server host id (Fabric Engine only)
          type: string
          minLength: 1
          maxLength: 10
        port:
          description: >-
            UDP port used for syslog server (Fabric Engine range is 514-530).
            Default port for syslog is 514.
          type: integer
          minimum: 0
          maximum: 65535
          example: 500
        enabled:
          description: Syslog server enabled state
          type: boolean
        facility:
          description: Syslog server facility
          type: string
          enum:
            - LOCAL0
            - LOCAL1
            - LOCAL2
            - LOCAL3
            - LOCAL4
            - LOCAL5
            - LOCAL6
            - LOCAL7
        logLevel:
          description: >-
            Fabric Engine (VOSS) supports all combinations of Severities
            (starting with, only and combination of severities). Switch Engine
            (EXOS) supports starting with and only severity. logLevel will
            contain either one severity or a set of consecutive severities
            ending in Critical. 

             Examples of valid logLevel for VOSS: [ERROR], [ERROR,CRITICAL,ALERT,EMERGENCY], [ERROR,ALERT] 

             Examples of valid logLevel for EXOS: [ERROR], [ERROR,CRITICAL,ALERT,EMERGENCY]
          type: array
          items:
            $ref: '#/components/schemas/SeverityLevels'
          example:
            - ERROR
            - CRITICAL
            - ALERT
            - EMERGENCY
    SyslogSettings:
      description: Syslog settings
      type: object
      properties:
        enabled:
          description: Syslog global enabled state (Fabric Engine only)
          type: boolean
        servers:
          description: List of syslog servers
          type: array
          items:
            $ref: '#/components/schemas/SyslogServer'
    TimezoneSettings:
      description: Time zone settings for the device
      type: object
      properties:
        hours:
          description: Offset from GMT in hours
          type: integer
        minutes:
          description: Offset from GMT in minutes
          type: integer
        id:
          description: Time zone identifier
          type: string
          example: PST
    VlanType:
      type: object
      description: |
        The object definition for the VLAN type (required at VLAN creation for
        Fabric Engine).
      properties:
        vlanType:
          description: >
            The type of VLAN (Applicability to each NOS is shown below):

            |    Type                         |   NOS           |  Description

            |---------------------------------|-----------------|----------------------------------------

            |    PORT_MSTP_RSTP               |   Fabric Engine |  VLAN by
            port                         |

            |    PROTOCOL_MSTP_RSTP           |   Fabric Engine |  VLAN by
            protocol                     |

            |    PVLAN_MSTP_RSTP              |   Fabric Engine |  Private VLAN
            by port                 |

            |    SPBM_BVLAN                   |   Fabric Engine |  SPBM backbone
            VLAN (B-VLAN)          |

            |    VLAN                         |   Switch Engine |  Virtual Local
            Area Network           |

            |    VMAN                         |   Switch Engine |  Virtual
            Metropolitan Area Network    |

            |    BROUTER                      |   Fabric Engine |  Brouter
            VLAN                         |

            |    PVLAN_ISOLATED_SUBSCRIBER    |   Switch Engine |  Private VLAN
            isolated subscriber     |

            |    PVLAN_NONISOLATED_SUBSCRIBER |   Switch Engine |  Private VLAN
            non-isolated subscriber |

            |    PVLAN_NETWORK                |   Switch Engine |  Private VLAN
            network                 |

            Note:

            Type is required for VLAN creation on Fabric Engine.  The default
            type for

            Switch Engine is VLAN. BROUTER type cannot be used for VLAN
            creation.

            Only one VLAN of type PROTOCOL_MSTP_RSTP can be configured on Fabric
            Engine.

            vlanType of PVLAN_ISOLATED_SUBSCRIBER, PVLAN_NONISOLATED_SUBSCRIBER,
            and

            PVLAN_NETWORK must also include the privateVlanName attribute.
          type: string
          enum:
            - PORT_MSTP_RSTP
            - PROTOCOL_MSTP_RSTP
            - PVLAN_MSTP_RSTP
            - SPBM_BVLAN
            - VLAN
            - VMAN
            - BROUTER
            - PVLAN_ISOLATED_SUBSCRIBER
            - PVLAN_NONISOLATED_SUBSCRIBER
            - PVLAN_NETWORK
    VlanCreateSettings:
      type: object
      properties:
        name:
          description: >
            VLAN name (For Switch Engine the maximum length is 32 characters).
            An empty string may be

            returned by the implementation in cases where a name is not
            associated with the VLAN.
          type: string
          minLength: 0
          maxLength: 64
        stpName:
          description: >
            The name of the STP instance this VLAN is assigned to.  For Fabric
            Engine an empty or not present string

            indicates the VLAN is assigned to STP instance 0.  For Switch Engine
            an empty or not present string indicates

            the VLAN is not assigned to an STP domain.
          type: string
          minLength: 0
          maxLength: 32
        primaryId:
          description: The primary VLAN ID of private VLAN (applies to Switch Engine only).
          type: integer
          format: int32
          readOnly: true
        secondaryIdList:
          description: >-
            The list of secondary VLAN IDs of private VLAN. Readonly for Switch
            Engine. For Fabric Engine, only one value is allowed to be set in
            the secondaryIdList for type PVLAN_MSTP_RSTP.
          type: array
          items:
            type: integer
            format: int32
    VlanUpdateSettings:
      type: object
      properties:
        name:
          description: VLAN name (EXOS maximum length is 32 characters)
          type: string
          minLength: 0
          maxLength: 64
    VlanInterfaceAdditionalSummarySettings:
      type: object
      description: VLAN interface additional settings used for component level GET.
      properties:
        isMgmtInterface:
          description: management interface flag (applies to Fabric Engine only).
          type: boolean
        isLoopback:
          description: >-
            Loopback flag (True if the VLAN interface is a loopback). This
            attribute is not supported on Fabric Engine.
          type: boolean
        dynamic:
          description: >-
            A value of true indicates that the associated VLAN was dynamically
            created
          type: boolean
          default: false
          readOnly: true
        ipInterfaceEnabled:
          description: >
            This is Fabric Engine (VOSS) specific and indicates if the IP is
            enabled on this interface.

            This does not affect the state of the interface itself, only its
            connection to an IP stack.
          type: boolean
          default: false
        l2ForwardingEnabled:
          description: >
            This is Switch Engine (EXOS) specific and indicates if L2 fowarding
            is enabled on this VLAN.
          type: boolean
          default: false
        enabled:
          description: >
            This is Switch Engine (EXOS) specific and indicates if this VLAN is
            enabled.
          type: boolean
          default: true
        l3Mtu:
          description: >
            This indicates the MTU value for a frame. For Switch Engine(EXOS)
            the values are between 1500 and 9216

            For Fabric Engine (VOSS), the IPv4 MTU is 1500 and is fixed, but for
            IPv6 the range is between 1280 and 

            9500 depending on the system MTU.
          type: integer
          format: int32
          minimum: 1280
          maximum: 9500
    VlanInterfaceMvpnSettings:
      description: >-
        VLAN interface MVPN I-SID settings used only for VLAN updates and device
        level GET. The VRF association can not be changed while MVPN I-SID is
        configured on the VLAN. These attributes are applicable to Fabric Engine
        only.
      type: object
      properties:
        isid:
          description: |
            I-SID used for SPB multicast with no IP address.
            Set to 0 to enable SPB multicast in the global routing table(GRT).
            Set to -1 in order to remove MVPN I-SID.
          type: integer
          minimum: -1
          maximum: 15999999
        macOffset:
          description: >
            MVPN I-SID MAC offset. Can only be set together with the I-SID
            value.
          type: integer
          minimum: 0
          maximum: 511
      required:
        - isid
    VlanInterfaceAdditionalDetailSettings:
      description: >-
        VLAN interface additional detail settings used only for VLAN updates and
        device level GET.
      type: object
      properties:
        ipArpGratuitousProtectEnabled:
          description: >
            A value of true indicates gratuitous ARP protection is enabled on
            the VLAN.

            This parameter applies to Switch Engine only.
          type: boolean
        ipArpInspectionEnabled:
          description: >
            A value of true indicates IP ARP inspection is enabled on the VLAN.

            ARP inspection intercepts and discards the ARP packets with invalid
            IP to MAC address bindings.

            The address binding table is created using the information gathered
            from the DHCP requests and 

            replies when DHCP snooping is enabled. 

            This parameter applies to Fabric Engine only.
          type: boolean
        ipArpLearnFromArpPortList:
          description: >
            The port list on VLAN for which ARP learning from ARP is enabled.

            This is done by tracking ARP requests and replies, which is known as
            ARP learning.

            This parameter applies to Switch Engine only.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        ipArpLearnFromDhcpPortList:
          description: >
            The port list on VLAN for which ARP learning from DHCP is enabled.

            This is done by using DHCP bindings database created when DHCP
            snooping is enabled.

            This parameter applies to Switch Engine only.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        ipRoutingEnabled:
          description: >
            A value of true indicates IP routing is enabled on the VLAN. This
            setting is only applicable to

            Switch Engine (EXOS). This attribute is IPv4 only.
          type: boolean
        qosQueue:
          description: >
            This is Switch Engine specific. The QOS queue assigned to the VLAN.
            Values of 1

            through 8 correspond to QOS profiles QP1 through Q8 respectively.
            QOS profiles

            QP2 through QP7 do not exist by default and must be created by the
            user

            before assigning to a VLAN.  A value of 0 indicates no QOS queue is
            assigned

            to the VLAN.
          type: integer
          minimum: 0
          maximum: 8
        dhcpEnabled:
          description: >
            A value of true indicates that the VLAN is configured to be a DHCP
            client.

            This attribute is IPv4 only.
          type: boolean
          default: false
        mvpnIsid:
          $ref: '#/components/schemas/VlanInterfaceMvpnSettings'
        ntpEnabled:
          description: >
            A value of true indicates that the VLAN is configured to be a NTP
            client.  This setting is only

            applicable to Switch Engine (EXOS). This attribute is IPv4 only.
          type: boolean
          default: false
        spbMcastEnabled:
          description: >-
            A value of true indicates that this VLAN is SPB Multicast enabled.
            This is a Fabric Engine specific setting.
          type: boolean
          default: false
    VlanInterfaceIpAddress:
      description: >-
        This object represents an IPv4 or IPv6 address configured on a VLAN
        interface
      type: object
      properties:
        address:
          $ref: '#/components/schemas/GeneralIpAddressMask'
        name:
          description: The name associated with the IP address (VOSS only)
          type: string
          maxLength: 32
        dynamic:
          description: A value of true indicates this address was learned via DHCP
          type: boolean
          default: false
          readOnly: true
    VlanIpAddressList:
      type: object
      description: A list of IPv4 and IPv6 addresses configured on the VLAN interface
      properties:
        addressList:
          type: array
          items:
            $ref: '#/components/schemas/VlanInterfaceIpAddress'
    PrivateVlanName:
      description: This object represents a private VLAN name
      type: object
      properties:
        privateVlanName:
          description: >-
            The private VLAN name associated with this VLAN. When specified, the
            vlanType must be PVLAN_ISOLATED_SUBSCRIBER,
            PVLAN_NONISOLATED_SUBSCRIBER, or PVLAN_NETWORK. Switch Engine only.
          type: string
          minLength: 0
          maxLength: 32
    VlanCreateObject:
      allOf:
        - $ref: '#/components/schemas/VlanId'
        - $ref: '#/components/schemas/VlanType'
        - $ref: '#/components/schemas/VlanCreateSettings'
        - $ref: '#/components/schemas/VlanUpdateSettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalSummarySettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalDetailSettings'
        - $ref: '#/components/schemas/VlanIpAddressList'
        - $ref: '#/components/schemas/PrivateVlanName'
    VlanInterfaceGetSettings:
      allOf:
        - $ref: '#/components/schemas/VlanCreateObject'
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalSummarySettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalDetailSettings'
        - $ref: '#/components/schemas/PrivateVlanName'
    VrType:
      description: >
        The virtual router type (VR or VRF). For Switch Engine (EXOS) VRF's are
        associated with

        a parent VR and allow multiple instances of a protocol to operate as
        part of a single process.  VRF's

        also support Layer 3 VPN's. Fabric Engine (VOSS) does not support VR
        value.
      type: string
      enum:
        - VR
        - VRF
    VrfIdentifier:
      description: Virtual Router Forwarding (VRF) Identifier information
      type: object
      properties:
        name:
          description: VRF name
          type: string
          minLength: 1
          maxLength: 32
        id:
          description: VRF identifier
          type: integer
          format: int32
        isMgmt:
          description: >-
            VRF management setting (True indicates this VRF is the management
            VRF).
          type: boolean
        ipRoutingEnabled:
          description: |
            A value of true indicates IP routing is enabled on this VRF. This
            setting is only applicable to Fabric Engine (VOSS).
          type: boolean
        dynamic:
          description: A value of true indicates this VRF was created dynamically.
          type: boolean
          readOnly: true
          default: false
        vrType:
          $ref: '#/components/schemas/VrType'
      required:
        - name
    VrfWithVlanSummary:
      description: Virtual Router Forwarding (VRF) settings with summary VLAN information
      allOf:
        - $ref: '#/components/schemas/VrfIdentifier'
        - type: object
          properties:
            vlanIdList:
              description: List of VLAN Interface ID's on the VRF
              type: array
              items:
                type: integer
                format: int32
    VrfListWithVlanSummary:
      description: List of VRF's on the device with summarized VLAN information
      type: array
      items:
        $ref: '#/components/schemas/VrfWithVlanSummary'
    VrrpVrId:
      description: This object represents a VRRP virtual router ID
      type: object
      properties:
        vrId:
          description: The VRRP virtual router ID
          type: integer
          format: int32
          minimum: 1
          maximum: 255
      required:
        - vrId
    VrrpVirtualRouterUpdateSettings:
      description: >-
        VRRP settings for a virtual router instance (excludes the virtual router
        ID)
      type: object
      properties:
        enabled:
          description: A value of true indicates that this VRRP virtual router is enabled.
          type: boolean
          default: false
        version:
          description: >
            The VRRP version for this virtual router.  The default for Switch
            Engine (EXOS) is

            'V3-V2-Compatible'. Fabric Engine (VOSS) does not provide support
            for V3-V2-Compatible.
          type: string
          enum:
            - V2
            - V3
            - V3-V2-Compatible
        backupRouting:
          description: |
            A value of true indicates that the backup routes traffic instead of
            switching it to the master.  This is a configurable setting in both
            Fabric Engine (VOSS) and Switch Engine (EXOS) and is referred to as
            Fabric Routing in the latter NOS.
          type: boolean
          default: false
        priority:
          description: >
            The priority value used in advertisements sent from the local router

            for this VRRP instance. A higher priority value determines master
            election

            for the instance. Switch Engine (EXOS) supports a maximum

            value of 255 which indicates that the sending router is the owner

            (i.e. it is locally configured on an interface) of the virtual IP
            address.

            Fabric Engine (VOSS) supports a maximum value of 254.
          type: integer
          minimum: 1
          maximum: 255
          default: 100
        advertisementInterval:
          allOf:
            - type: object
              description: The advertisement interval for the VRRP instance
              properties:
                units:
                  description: >
                    The time units of the advertisement interval.  For Fabric
                    Engine (VOSS)

                    the interval ranges are [1-255] seconds for version 2 and
                    [1-40] seconds

                    for version 3. Fabric Engine (VOSS) supports only SECONDS
                    for this attribute.

                    Fabric Engine (VOSS) has a separate 'fast advertisement
                    interval'

                    which is expressed in milliseconds [200-1000]. For Switch
                    Engine (EXOS)

                    the interval can be expressed in seconds [1-40] or
                    centiseconds [10-4095].
                  type: string
                  enum:
                    - SECONDS
                    - CENTISECONDS
                    - MILLISECONDS
                value:
                  description: >-
                    The advertisement interval in the units specified by the
                    parameter 'units'
                  type: integer
                  minimum: 1
                  maximum: 4095
        preemptHoldTimer:
          description: >
            The time interval (seconds) for a higher priority backup to preempt
            the master

            and become master itself. For Fabric Engine a value of 0 indicates
            the timer does

            not run and the allowable range is specified by the minimum and
            maximum values shown

            below. For Switch Engine a value of 0 indicates the timer is 3 times
            the advertisement

            interval and the allowable range is [0-3600] seconds.
          type: integer
          minimum: 0
          maximum: 21600
          default: 0
        preemptEnabled:
          description: >
            A value of true indicates a higher priority backup will
            automatically become the

            master according to the value of the preemptHoldTimer. A value of
            false

            indicates the backup will not become the master unless the current
            master fails.
          type: boolean
          default: true
    VrrpVIPList:
      description: >
        The list of virtual IP addresses for this virtual router.

        Fabric Engine and Switch Engine supports multiple virtual IP addresses

        per virtual router. On Switch Engine all virtual IP addresses on a given

        virtual router must be the same address type (IPv4 or IPv6). Fabric
        Engine

        supports both IPv4 and IPv6 address types on a single virtual router.
      type: array
      items:
        $ref: '#/components/schemas/GeneralIpAddress'
      example:
        - ipAddressType: IPv4
          address: 192.168.10.1
        - ipAddressType: IPv6
          address: '2001:10::1'
    VrrpVirtualRouterAllSettings:
      description: The complete set of VRRP virtual router settings
      allOf:
        - $ref: '#/components/schemas/VrrpVirtualRouterUpdateSettings'
        - type: object
          properties:
            virtualIpAddresses:
              $ref: '#/components/schemas/VrrpVIPList'
    VrrpVirtualRouterSettings:
      allOf:
        - $ref: '#/components/schemas/VrrpVrId'
        - $ref: '#/components/schemas/VrrpVirtualRouterAllSettings'
    VrrpVlanSettingsObject:
      type: object
      properties:
        vrrpVirtualRouterSettings:
          description: VRRP settings for a virtual router
          type: array
          items:
            $ref: '#/components/schemas/VrrpVirtualRouterSettings'
    VrrpSettingsWithVlan:
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - $ref: '#/components/schemas/VrrpVlanSettingsObject'
    VrrpSettingsAllVlans:
      description: VRRP settings for all VLAN's
      type: array
      items:
        $ref: '#/components/schemas/VrrpSettingsWithVlan'
    DeviceConfigurationElement:
      description: Device's entire (root level) configuration
      type: object
      properties:
        accounts:
          $ref: '#/components/schemas/UsernameList'
        authentication:
          $ref: '#/components/schemas/AuthenticationAllSettings'
        cdp:
          description: The port CDP settings
          type: array
          items:
            $ref: '#/components/schemas/PortCdp'
        certificates:
          $ref: '#/components/schemas/AllCertsHash'
        dhcpRelay:
          $ref: '#/components/schemas/DhcpRelayRootGetSettings'
        dhcpSnoop:
          $ref: '#/components/schemas/DhcpSnoopSettings'
        dns:
          $ref: '#/components/schemas/DnsSettings'
        elrp:
          $ref: '#/components/schemas/ElrpSettings'
        ethernetInterface:
          description: The ethernet interfaces settings for the device
          type: array
          items:
            $ref: '#/components/schemas/EthernetInterfaceComponentLevel'
        fabricAttach:
          $ref: '#/components/schemas/FabricAttachAllSettings'
        forwarding:
          $ref: '#/components/schemas/DeviceForwardingSettings'
        globalAutosense:
          $ref: '#/components/schemas/GlobalAutoSenseSettings'
        igmp:
          $ref: '#/components/schemas/IgmpAllSettings'
        instantPort:
          $ref: '#/components/schemas/PortProfileGlobal'
        ipRoute:
          $ref: '#/components/schemas/StaticRouteListAllVrs'
        lag:
          description: The LAG settings for the device
          type: array
          items:
            $ref: '#/components/schemas/LagConfigs'
        lldp:
          $ref: '#/components/schemas/LldpAllSettings'
        macLocking:
          $ref: '#/components/schemas/MacLockingCompleteSettings'
        mgmtInterface:
          $ref: '#/components/schemas/MgmtInterfaceSettings'
        mlag:
          description: The MLAG settings
          type: array
          items:
            $ref: '#/components/schemas/MlagAllConfig'
        ntp:
          $ref: '#/components/schemas/NtpSettings'
        ospf:
          $ref: '#/components/schemas/OspfComponentLevelSettings'
        poePower:
          $ref: '#/components/schemas/PoePowerAllSettings'
        policy:
          $ref: '#/components/schemas/PolicyComponentSettings'
        portAutosense:
          description: The port auto-sense settings
          x-nos: fabric-engine
          type: array
          items:
            $ref: '#/components/schemas/PortsAutoSenseSettings'
        portVlan:
          description: The port VLAN settings for the device
          type: array
          items:
            $ref: '#/components/schemas/PortVlanReadSettings'
        radius:
          $ref: '#/components/schemas/RadiusConfigurationElement'
        snmp:
          $ref: '#/components/schemas/SnmpGetSettings'
        sntp:
          $ref: '#/components/schemas/SntpSettings'
        spbm:
          $ref: '#/components/schemas/SpbmConfigurationElement'
        stacking:
          $ref: '#/components/schemas/StackingSettings'
        stormControl:
          description: The storm-control settings for the device
          items:
            $ref: '#/components/schemas/PortsStormControlSettings'
        stp:
          description: The STP settings for the device
          type: array
          items:
            $ref: '#/components/schemas/StpComponentGet'
        syslog:
          $ref: '#/components/schemas/SyslogSettings'
        timezone:
          $ref: '#/components/schemas/TimezoneSettings'
        vlanInterface:
          description: The VLAN Interface settings for the device
          type: array
          items:
            $ref: '#/components/schemas/VlanInterfaceGetSettings'
        vrf:
          $ref: '#/components/schemas/VrfListWithVlanSummary'
        vrrp:
          $ref: '#/components/schemas/VrrpSettingsAllVlans'
    RouteProtectionSettings:
      description: The route protection settings for the device.
      type: object
      properties:
        enablePing:
          description: |
            A value of true indicates sending of ICMP echo requests to
            verify the reachability of a static route gateway is globally
            enabled. This feature must also be enabled separately on each
            desired static route. If replies are not received within a
            specified time period, a previously active route transitions
            to the down state.  Newly configured static routes transition
            to the active state when a reply is received. This feature
            only applies to Switch Engine (EXOS) and is enabled by default.
          type: boolean
          default: true
    SystemImageGetSettings:
      type: object
      description: The system settings for image-partition management.
      properties:
        primary:
          description: >
            Fabric Engine(VOSS): Primary image name set on device. This image
            will be loaded on reboot. 


            Switch Engine(EXOS): Image name loaded on primary partition.
          type: string
        secondary:
          description: >
            Fabric Engine(VOSS): Secondary image name set on device. This image
            will be loaded on reboot if the primary image fails (backup image). 


            Switch Engine(EXOS): Image name loaded on secondary partition.
          type: string
        selectedImage:
          description: >
            Specifies if the image selected is loaded from primary or secondary
            partition. 

            The system will not boot into another image on a failure to boot
            from selected. Applicable only for Switch Engine (EXOS).
          type: string
          enum:
            - PRIMARY
            - SECONDARY
    SystemImageUpdateSettings:
      type: object
      description: The system settings for image-partition management.
      properties:
        name:
          description: >-
            Name of the image that will be loaded after device reboots.
            Applicable only for Fabric Engine (VOSS).
          type: string
        selectedImage:
          description: >-
            Specifies if the image selected is loaded from primary or secondary
            partition. Applicable only for Switch Engine (EXOS).
          type: string
          enum:
            - PRIMARY
            - SECONDARY
    SystemImagesSettings:
      description: List of available images on the device.
      type: array
      items:
        type: string
    SystemConfigFileChoiceSettings:
      type: object
      description: The system settings for config-file management.
      properties:
        primary:
          description: >
            Primary config-file set on the device. This file will be selected
            for config load on boot-up.
          type: string
        backup:
          description: >
            Secondary config-file set on the device. This file will be used for
            config load if load with the primary fails. This attribute is Fabric
            Engine (VOSS) applicable only.
          type: string
    CoreFileSettings:
      description: 'Settings of a core file (name, size, time of creation).'
      type: object
      properties:
        name:
          description: The name of the core file.
          type: string
          minLength: 1
          maxLength: 64
        size:
          description: The size in bytes of the core file.
          type: integer
        created:
          description: The time when the core file was created.
          type: string
          format: date-time
    CoreFilesSettings:
      description: Settings of all core files.
      type: object
      properties:
        slot:
          description: 'The slot number. For Fabric Engine, this value will always be 1.'
          type: integer
          minimum: 1
          maximum: 8
        files:
          type: array
          items:
            $ref: '#/components/schemas/CoreFileSettings'
    CoreFileUploadSettings:
      description: Information for uploading the core file.
      type: object
      properties:
        URL:
          description: The URL where the core file will be uploaded.
          type: string
        username:
          description: The username used for authentication.
          type: string
        password:
          description: The password used for authentication.
          type: string
        operation:
          description: The operation used to upload the core file.
          type: string
          enum:
            - POST
            - PUT
    OpenapiState:
      description: OpenAPI's Application State
      type: object
      properties:
        version:
          type: object
          properties:
            application:
              description: The OpenAPI application version
            schema:
              description: The OpenAPI schema version
    ChassisIdSubtype:
      description: >
        The type of encoding used to identify the chassis associated with the
        local system as described by IEEE 802.1AB-2005 9.5.2.2.
      type: string
      enum:
        - CHASSIS_COMPONENT
        - INTERFACE_ALIAS
        - INTERFACE_NAME
        - LOCAL
        - PORT_COMPONENT
        - MAC_ADDRESS
        - NETWORK_ADDRESS
      readOnly: true
    SystemSettings:
      description: System settings
      type: object
      properties:
        chassisId:
          description: >-
            The string value used to identify the chassis component associated
            with the local system as described by IEEE 802.1AB-2005 9.5.2.3.
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
        chassisIdSubtype:
          $ref: '#/components/schemas/ChassisIdSubtype'
        inletsVersion:
          description: The Inlets version.
          type: string
          readOnly: true
        isDigitalTwin:
          description: Digital Twin state
          type: boolean
          readOnly: true
        iqAgentVersion:
          description: The IQAgent version.
          type: string
          readOnly: true
        numSlots:
          description: The number of slots in the chassis available for plug-in cards.
          type: integer
          minimum: 1
          maximum: 12
          readOnly: true
        openApiAppVersion:
          description: The OpenAPI application version.
          type: string
          readOnly: true
        openApiSchemaVersion:
          description: The OpenAPI schema version.
          type: string
          readOnly: true
        sysDescription:
          description: >-
            System description. This value should include the full name and
            version identification of the system's hardware type, software
            operating-system, and networking software.
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        sysName:
          description: >-
            System name. An administratively-assigned name for this managed
            node. By convention, this is the node's fully-qualified domain
            name.  If the name is unknown, the value is the zero-length string.
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        telegrafVersion:
          description: The Telegraf version.
          type: string
          readOnly: true
        isStack:
          description: Stack state. This attribute is Switch Engine (EXOS) applicable only.
          type: boolean
          readOnly: true
    AdminStatus:
      description: >-
        Device administrative status. UP, DOWN, TESTING and RESET are applicable
        to Fabric Engine, ENABLED is applicable to Switch Engine.
      type: string
      enum:
        - UP
        - DOWN
        - TESTING
        - RESET
        - ENABLED
      readOnly: false
    NodeState:
      description: >
        Node state - Switch Engine (EXOS) only. Configuration commands are
        prevented when the stack's backup node is in BACKUP state.
        Administrative failover operations are prevented when the stack's backup
        node is in BACKUP or BACKUP_CONFIG_SYNCED states. It is safe to perform
        a failover when the stack's backup node is in BACKUP_IN_SYNC state.
      type: string
      enum:
        - UNKNOWN
        - INIT
        - FAIL
        - DOWN
        - PRIMARY
        - BACKUP
        - BACKUP_CONFIG_SYNCED
        - BACKUP_IN_SYNC
        - STANDBY
        - OTHER
        - INVALID
      readOnly: true
    OperationStatus:
      description: >-
        Device operational status. DOWN is applicable to both Fabric Engine and
        Switch Engine. UP, TESTING, UNKNOWN, DORMANT, UP_MASTER, UP_DORMANT and
        UP_WARMSTANDBY are applicable to Fabric Engine. The others are
        applicable to Switch Engine.
      type: string
      enum:
        - UP
        - DOWN
        - TESTING
        - UNKNOWN
        - DORMANT
        - UP_MASTER
        - UP_DORMANT
        - UP_WARMSTANDBY
        - EMPTY
        - PRESENT
        - FAILED
        - POWEROFF
        - POWEREDOFF
        - MISMATCH
        - POWERON
        - POWERON_DONE
        - EPOST
        - EPOST_DONE
        - DOWNLOADING
        - DOWNLOADED
        - BOOTING
        - BOOTING_DONE
        - DIAG
        - DIAG_DONE
        - OFFLINING
        - OFFLINE
        - INIT
        - INIT_DONE
        - VLAN_SYNC
        - VLAN_SYNCED
        - FDB_SYNC
        - FDB_SYNCED
        - ACL_SYNC
        - ACL_SYNCED
        - RT_SYNC
        - RT_SYNCED
        - OPERATIONAL
        - REBOOTING
      readOnly: true
    VimSettings:
      description: This object represents settings for one VIM.
      type: object
      properties:
        adminStatus:
          $ref: '#/components/schemas/AdminStatus'
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        partNumber:
          description: VIM part number
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
        serialNumber:
          description: VIM serial number
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
        type:
          description: VIM type
          type: string
          readOnly: true
    CardSettings:
      description: This object represents settings for one Card.
      type: object
      properties:
        slotNumber:
          description: Device Slot Number
          type: integer
          readOnly: true
        adminStatus:
          $ref: '#/components/schemas/AdminStatus'
        baseMacAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        brandName:
          description: Device brand name
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        firmwareVersion:
          description: >-
            The vendor-specific firmware revision For details see ANSI/TIA-1057,
            Section 10.2.6.2.
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        hardwareRev:
          description: Device hardware revision level.
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        macAddrCapacity:
          description: MAC address capacity.
          type: integer
          format: int32
          readOnly: true
        modelName:
          description: Device model name
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        numPorts:
          description: The total number of ports currently installed in the chassis.
          type: integer
          minimum: 0
          maximum: 255
          readOnly: true
        nodeState:
          $ref: '#/components/schemas/NodeState'
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        partNumber:
          description: Device part number or PEC code
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
        isPowerEnabled:
          description: >-
            Administrately turn on or off power on this slot. only applicable on
            Standby CP & IO and SF Card
          type: boolean
          readOnly: false
        serialNumber:
          description: Device unique serial number
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
        sysBuildTime:
          description: System build time.
          type: string
          readOnly: true
        sysUpTime:
          description: >-
            The time (in hundredths of a second) since the network management
            portion of the system was last re-initialized.
          type: integer
          readOnly: true
        vims:
          description: >-
            A list containing all VIMs present on the device and their settings.
            If no VIM is inserted or the base system does not support VIMs, the
            list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/VimSettings'
    CardList:
      type: object
      properties:
        cards:
          description: A list containing each Card configured on the device.
          type: array
          items:
            $ref: '#/components/schemas/CardSettings'
    SystemState:
      description: The device state information.
      allOf:
        - $ref: '#/components/schemas/SystemSettings'
        - $ref: '#/components/schemas/CardList'
    SystemCliCommandRequest:
      description: NOS CLI commans to execute
      type: array
      items:
        description: CLI Command
        type: string
    SystemCliCommandExecution:
      description: Multi-status of NOS CLI command execution
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              cliInput:
                description: Input CLI command
                type: string
              cliOutput:
                description: CLI Command output
                type: string
              statusCode:
                description: HTTP status code
                type: integer
                enum:
                  - 200
                  - 400
                  - 409
        metadata:
          type: object
          properties:
            succeeded:
              type: integer
            failed:
              type: integer
            skipped:
              type: integer
    BulkApiRequests:
      description: API Requests to execute
      type: array
      items:
        description: API Request
        type: object
        properties:
          operation:
            description: The type of HTTP operation to execute
            type: string
            enum:
              - GET
              - POST
              - PATCH
              - PUT
              - DELETE
          uri:
            description: >
              The URI of the request including the base path and query
              paramters, 

              for exampple "/rest/openapi/v0/configuration/ntp"
            type: string
          body:
            description: |
              The body for this request if applicable
          index:
            description: |
              A numerical index of the API request.
              Should be set in increasing order.
            type: integer
            minimum: 1
          dependsOn:
            description: |
              This field can be used to execute a command only
              if another command before it has executed succesfully.
              Its value should be an index of a previous command in the BULK.
              If the index given is wrong, it will be silently ignored and the
              bulk command will be executed.
            type: integer
            minimum: 1
          context:
            description: >
              Opaque information set by the client application that will be
              returned as is with the responses.

              This might be useful for clients to help in parsing the response
              bodies for example.
            type: string
        required:
          - operation
          - uri
          - index
    BulkApiReplies:
      description: Replies to the API requests
      type: array
      items:
        description: API Response
        type: object
        properties:
          status_code:
            description: >
              Status code of the individual API request.

              Code 409 is used to say this request was skipped(due to dependsOn
              logic)
            type: integer
          body:
            description: |
              The body of the reply if applicable
          index:
            description: >
              The same index number that was supplied with the request.

              This is used for identification purposes between request and
              reply.
            type: integer
            minimum: 1
          context:
            description: |
              Opaque information set by the client per request in the bulk.
              This is not interpreted by the server in any way.
            type: string
        required:
          - status_code
          - index
    StatusApiReply:
      description: Replies to the API requests
      type: object
      properties:
        progress:
          description: >
            A percentage from 0 to 100, representing how far along the request
            is.

            The meaning of the percentage is both request specific and
            implementation specific.
          type: integer
          minimum: 0
          maximum: 100
    RebootSettings:
      description: The settings for rebooting the device.
      type: object
      properties:
        delay:
          description: >
            Schedule a delayed reboot in minutes. For Fabric Engine, delay can
            be set only between 10-360 minutes. For Switch Engine, delay can be
            0-1200 days
          type: integer
          minimum: 0
          maximum: 1728000
        coredump:
          description: >
            Create a core file before rebooting the switch. Coredump and delayed
            reboot can not be set in parallel. Applicable only for Fabric
            Engine(VOSS).
          type: boolean
        slot:
          description: >
            Specify the slot number to reboot. If unspecified, the whole system,
            including stack nodes and BPEs will be rebooted. Applicable only for
            Switch Engine(EXOS).
          type: integer
          minimum: 1
          maximum: 162
        rolling:
          description: >
            Does a rolling reboot of stack nodes on a stack-setup. Applicable
            only for Switch Engine(EXOS).
          type: boolean
    RebootRollingState:
      description: >-
        The status of rolling reboot in the device.  Applicable only for Switch
        Engine (EXOS).
      type: object
      properties:
        inProgress:
          description: >
            A value of true indicates that a rolling reboot is currently
            in-progress.
          type: boolean
        messages:
          description: |
            Status messages from the rolling reboot process.  Sample response:
              ID: 23487923
              INFO: Rolling reboot started.
              OLD: 32.6.2.3
              NEW: 32.6.2.9
              INFO: Standby slot 3 will now be rebooted.
              INFO: Slot 3 rebooted successfully. Backup slot 2 will now be rebooted.
              ERROR: An unexpected node booted in slot 3
              INFO: Rolling reboot canceled.
          type: array
          items:
            description: |
              A message from the reboot process in the form "tag: value"
            type: string
    SystemRebootState:
      description: The device reboot state information.
      properties:
        rollingRebootState:
          $ref: '#/components/schemas/RebootRollingState'
    SystemSaveConfigFile:
      description: The settings for saving a config-file.
      type: object
      properties:
        name:
          description: >-
            File name used to save configuration.  If name is ommitted, the
            config is saved to the currently selected config file.  Name must be
            present if configType is XSF
          type: string
          example: new_config
        verbose:
          description: >
            Save current and default configuration. This is Fabric Engine
            specific option. For Switch Engine, verbose is fixed based on the
            config type - True for CFG and False for XSF
          type: boolean
          example: false
        configType:
          description: >-
            Type of configuration file to generate. This is Switch Engine
            specific
          type: string
          enum:
            - XSF
            - CFG
          default: CFG
    LedLocatorSettings:
      description: The LED settings for locating the device.
      type: object
      properties:
        timeout:
          description: >
            Specify the duration of LED display in seconds. Default is 300
            seconds. A value of 0 indicates no timeout and LEDs will blink until
            explicitly disabled.
          type: integer
          minimum: 0
          maximum: 604800
        slot:
          description: >
            Specify the slot number. If unspecified, this includes the whole
            system, including stack nodes. Applicable only for Switch
            Engine(EXOS).
          type: integer
          minimum: 1
          maximum: 8
    LedLocatorDisableSettings:
      description: The settings for disabling the device LED locator.
      type: object
      properties:
        slot:
          description: >
            Specify the slot number. If unspecified, this includes the whole
            system, including stack nodes. Applicable only for Switch
            Engine(EXOS).
          type: integer
          minimum: 1
          maximum: 8
    AuthTokenGenerate:
      description: Data used to generate Auth Token
      type: object
      properties:
        username:
          description: Username
          type: string
          minLength: 1
          maxLength: 32
        password:
          description: Password for specific user
          type: string
          minimum: 0
          maximum: 80
    AuthTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: The authentication token
        ttl:
          type: integer
          description: >-
            Indicate the period for which the token will be valid. Time is
            represented in seconds.
      example:
        token: >-
          .eJxTMjcyNzcz1IVSZslmaWbGZoZmybrGhsYGRqkg0tgQSBsZm4B5hsbGSgA38QuX.ZQLi_w.193L3lCJ-8VvhcfMsXn3O4d44Vw
        ttl: 86400
    PingInterfaceSettingsGigabitEthernet:
      description: Gigabit Ethernet Interface type used for ping
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
    PingInterfaceSettingsTunnel:
      description: Tunnel Interface type used for ping
      type: object
      properties:
        tunnelId:
          description: Tunnel ID used for sending ping
          type: integer
          minimum: 1
          maximum: 2000
    PingInterfaceSettingsVlan:
      description: VLAN Interface type used for ping
      type: object
      properties:
        vlanId:
          description: >
            VLAN ID used for sending ping. 

            For Switch Engine (EXOS) , VLAN ID is used only for ping IPv6
            linklocal addresses.

            For Fabric Engine (VOSS), vlanId is in range 1-4059.
          type: integer
          minimum: 1
          maximum: 4095
    InterfaceType:
      description: Interface type
      type: string
      enum:
        - GIGABITETHERNET
        - TUNNEL
        - VLAN
    PingInterfaceSettings:
      description: |
        Outgoing interface used for transmitting the ping.
        For Switch Engine (EXOS): Outgoing interface can 
        only be set only for ping IPv6 linklocal address. 
        In this case, outgoing VLAN id must be provided.
        For Fabric Engine (VOSS) - This attribute can't be
        combined with sourceIpAddress and managementType.
      properties:
        interfaceType:
          $ref: '#/components/schemas/InterfaceType'
      anyOf:
        - $ref: '#/components/schemas/PingInterfaceSettingsGigabitEthernet'
        - $ref: '#/components/schemas/PingInterfaceSettingsTunnel'
        - $ref: '#/components/schemas/PingInterfaceSettingsVlan'
      discriminator:
        propertyName: interfaceType
        mapping:
          GIGABITETHERNET: '#/components/schemas/PingInterfaceSettingsGigabitEthernet'
          TUNNEL: '#/components/schemas/PingInterfaceSettingsTunnel'
          VLAN: '#/components/schemas/PingInterfaceSettingsVlan'
    PingSettings:
      type: object
      description: >
        The ping command parameters.

        If the context is not specified through the vrf or managementType
        attribute,

        the ping will be sent using the default context.
      properties:
        sourceIpAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        count:
          description: |
            Number of times to ping(for IPV4/IPV6)
            For Fabric Engine (VOSS) the interval is  1-9999.
          type: integer
          minimum: 1
          maximum: 65535
          default: 1
        datasize:
          description: >
            Size of ping data (for IPV4/IPV6).

            For Fabric Engine (VOSS) the interval is 28-9216 for IPv4 and
            28-51200 for IPv6.

            For Switch Engine (EXOS) the interval is 0-65507.
          type: integer
          minimum: 0
          maximum: 65507
        scopeId:
          description: >
            Scope Circuit ID (for IPV6 only). This attribute is applicable for
            Fabric Engine (VOSS) only.

            This attribute can't be combined with managementType.
          type: integer
          minimum: 1
          maximum: 9999
        transmissionInterval:
          description: |
            Interval between transmissions - in seconds (for IPV4/IPV6).
            For Switch Engine (EXOS) the interval is 1-30.
          type: integer
          minimum: 1
          maximum: 60
          default: 1
        timeoutInterval:
          description: >
            Interval of time set for writing before timeout - in seconds (for
            IPV4/IPV6). 

            This attribute is applicable for Fabric Engine (VOSS) only.
          type: integer
          minimum: 1
          maximum: 120
          default: 5
        managementType:
          description: >
            Nls management type. This attribute is applicable for Fabric Engine
            (VOSS) only. 

            For Fabric Engine (VOSS) - this attribute can't be combined with
            sourceIpAddress,

            scopeId, vrf and interface attributes.

            The AUTO value is used to specify that a request is sent without
            specifying the 

            exact mgmt interface.      

            When managementType is set to OOB/VLAN/CLIP, the sourceIpAddress of
            the given packet

            is set to match the IP of the given mgmt interface.
          type: string
          enum:
            - OOB
            - VLAN
            - CLIP
            - AUTO
        vrf:
          description: >
            Name of the VRF context. For Fabric Engine (VOSS) -  this attribute
            can't be combined

            with managementType attribute.

            In order to send a PING command in grt context, vrf will be
            "GlobalRouter". In this case

            only sourceIpAddress and interface attributes are available.
          type: string
          minLength: 1
          maxLength: 32
        interface:
          $ref: '#/components/schemas/PingInterfaceSettings'
    GeneralPingHostOrIp:
      description: |
        Host name or IP (IPv4 or IPv6) identifier using discriminator.
      type: object
      properties:
        hostType:
          description: >-
            Specifies the type of identifier in the following property
            (hostname, IPv4, or IPv6)
          type: string
          enum:
            - hostname
            - IPv4
            - IPv6
      anyOf:
        - $ref: '#/components/schemas/HostName'
        - $ref: '#/components/schemas/Ipv4Address'
        - $ref: '#/components/schemas/Ipv6Address'
      discriminator:
        propertyName: hostType
        mapping:
          hostname: '#/components/schemas/HostName'
          IPv4: '#/components/schemas/Ipv4Address'
          IPv6: '#/components/schemas/Ipv6Address'
    IcmpPacketResponse:
      description: |
        Response received for an ICMP packet sent.
      type: object
      properties:
        icmpSequence:
          description: ICMP sequence number.
          type: integer
        host:
          $ref: '#/components/schemas/GeneralPingHostOrIp'
        bytesReceived:
          description: >
            Number of bytes received. In mgmt context, the value for this field
            is  greater by 8 bytes than the actual value passed in the request
            for the  field dataSize. The extra 8 bytes represent the ICMP header
            data.
          type: integer
        TTL:
          description: |
            Time to live received in ICMP response.
            Present when ping is sent in mgmt context.
          type: integer
        roundtripTime:
          description: >
            Roundtrip time (in milliseconds).

            The time measurement process starts when a browser sends a ICMP
            packet

            request to a server and is completed when the ICMP response is
            received

            from the server.
          type: number
          format: float
    PingResponseCommandExecution:
      description: Response for a given ping command.
      type: object
      properties:
        icmpPackets:
          type: array
          items:
            $ref: '#/components/schemas/IcmpPacketResponse'
        packetsTransmitted:
          description: Number of transmitted packets.
          type: integer
        packetsReceived:
          description: Number of received packets.
          type: integer
        packetLoss:
          description: Packet loss (in %).
          type: string
        time:
          description: |
            Total time for ping command to be executed (in milliseconds).
            Present when ping is sent in mgmt context.
          type: integer
        isTimeout:
          description: >
            This attribute indicates that a timeout was received. In case of a
            timeout,

            only this attribute will be available.

            In case of sending a ping in grt or vrf context with count 1, only
            this attribute

            can be retrieved in the response.
          type: boolean
    TracerouteSettings:
      type: object
      description: >
        The traceroute command parameters.

        If the context is not specified through the vrf or managementType
        attribute,

        the traceroute will be sent using the default context.
      properties:
        sourceIpAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        probePacketSize:
          description: >-
            Probe packet size. This attribute is applicable for Fabric Engine
            (VOSS) only.
          type: integer
          minimum: 1
          maximum: 1176
        TTL:
          description: >
            For Switch Engine (EXOS) - The starting TTL value, so only routes
            with TTL >= value 

            are displayed. Max TTL is always 30, cannot be changed. Setting TTL
            is optional

            for SE. If omitted, it is set to default value of 1. This attribute
            is in range (0-30).

            For Fabric Engine (VOSS) - Maximum number for hops. This attribute
            is in range (1-255).
          type: integer
          minimum: 0
          maximum: 255
        probesPerTTL:
          description: >-
            Number of probes per TTL. This attribute is applicable for Fabric
            Engine (VOSS) only.
          type: integer
          minimum: 1
          maximum: 255
          default: 3
        waitTime:
          description: >-
            Wait time per probe. This attribute is applicable for Fabric Engine
            (VOSS) only.
          type: integer
          minimum: 1
          maximum: 255
          default: 5
        udpPort:
          description: Base udp port
          type: integer
          minimum: 1
          maximum: 65535
        managementType:
          description: >
            Nls management type. This attribute is applicable for Fabric Engine
            (VOSS) only. 

            For Fabric Engine (VOSS) - this attribute can't be combined with vrf
            and sourceIpAddress attributes.

            The AUTO value is used to speficy that a request is sent without
            specifing the exact mgmt interface.      

            When managementType is set to OOB/VLAN/CLIP, the sourceIpAddress of
            the given packet is set to match

            the IP of the given mgmt interface.
          type: string
          enum:
            - OOB
            - VLAN
            - CLIP
            - AUTO
        vrf:
          description: >
            Name of the VRF context. For Fabric Engine (VOSS) -  this attribute
            can't be combined

            with managementType attribute.

            In order to send a traceroute command in grt context, vrf will be
            "GlobalRouter". In this case

            only sourceIpAddress attribute is available.
          type: string
          minLength: 1
          maxLength: 32
    RoundTripTime:
      description: >
        RTT (in milliseconds) is a time constant that is calculated by taking
        the time a 

        packet needs to get from source to destination and back. 

        If timeout was reached before getting a response for a packet, 

        a "*" is returned.
      type: string
      example: '0.12'
    TracerouteResponseProbePacket:
      description: |
        Information about the round trip time and additional 
        annotations (if any) for the probe packet received 
        from the server.
      type: object
      properties:
        RTT:
          description: The round trip time
          $ref: '#/components/schemas/RoundTripTime'
        annotation:
          description: |
            After the trip time, some additional annotation can be provided:
            !H, !N, or !P (host, network or protocol unreachable), 
            !S (source route failed), !F (fragmentation needed), 
            !X (communication administratively prohibited), 
            !V (host precedence violation), !C (precedence cutoff in effect), 
            or !<num> (ICMP unreachable code <num>).
          type: string
          pattern: ^!.*
          example: '!C'
    TracerouteResponseHopServer:
      description: >
        Information about the server that was reached by traceroute in a certain
        hop. If a server can't be reached, then only the serverName will be
        returned and it will be equal to an asterisk (" * ").
      type: object
      properties:
        serverName:
          description: |
            Name of (one of) the server(s) from the current hop. 
            If it has no name set, then serverName is IP address 
            from the current hop. If resolving a host name returns 
            both IPv4 and IPv6 addresses, traceroute will use IPv4.
          type: string
        serverIpAddr:
          $ref: '#/components/schemas/GeneralPingHostOrIp'
        probePackets:
          description: |
            Information about the round trip time and additional 
            annotations (if any) for each probe packet received 
            from the current server.
          type: array
          items:
            $ref: '#/components/schemas/TracerouteResponseProbePacket'
    TracerouteResponseHop:
      description: |
        Response for a next hop found in traceroute command.
      type: object
      properties:
        hopNumber:
          description: |
            The number of the hop along the route.
          type: integer
        servers:
          description: |
            Servers that were reached by traceroute 
            in the current hop.
          type: array
          items:
            $ref: '#/components/schemas/TracerouteResponseHopServer'
    TracerouteResponseCommandExecution:
      description: >
        Response for a given traceroute command. This response contains a list
        of details for each next hop.
      type: array
      items:
        $ref: '#/components/schemas/TracerouteResponseHop'
    DhcpRelayState:
      description: Statistics of DHCP Relay.
      type: object
      properties:
        numRequests:
          description: The total number of DHCP requests received.
          type: integer
          format: int32
        numReplies:
          description: The total number of DHCP replies received.
          type: integer
          format: int32
    DhcpRelayVrfsState:
      description: Statistics of DHCP Relay with VR name
      allOf:
        - $ref: '#/components/schemas/VrName'
        - type: object
          properties:
            dhcpRelayVrfState:
              $ref: '#/components/schemas/DhcpRelayState'
    PortNameOrNone:
      type: string
      description: |-
        Name of the interface, slot and port are required 
         to ensure deterministic results, sub_port is optional. This definition allows for the string 'None' to accomodate situations in which the port name parameter is undefined.

         [slot]:[port][:sub_port]                 
         '1:1:1'    slot=1, port=1, sub_port=1    
         '12:101'   slot=12, port=101
      pattern: '^((\d{1,3}):(\d{1,3}):?(\d{1,2})?|None){1}$'
      example: None
    DhcpSnoopFingerprintingOptionCode:
      description: >-
        Option code as defined by RFC 2132. Support is available for options 12,
        55 and 60. Option 12 is the host name option and specifies the name of
        the client. Option 55 is the parameter request list and is used by a
        DHCP client to request values for specified configuration parameters.
        The values are comma separated and each one is a valid DHCP option code
        as defined by RFC 2132. Option 60 is the vendor class identifier. This
        option is used by DHCP clients to optionally identify the vendor type
        and configuration of a DHCP client.
      type: integer
      minimum: 0
      maximum: 255
    DhcpSnoopFingerprintingOptionValue:
      description: >-
        Values received for the Option code as defined by RFC 2132. Support is
        available for options 12, 55 and 60.
      type: string
    DhcpSnoopFingerprintingOption:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/DhcpSnoopFingerprintingOptionCode'
        value:
          $ref: '#/components/schemas/DhcpSnoopFingerprintingOptionValue'
    DhcpSnoopFingerprintingOptionList:
      type: array
      items:
        $ref: '#/components/schemas/DhcpSnoopFingerprintingOption'
    DhcpSnoopClientState:
      description: |
        DHCP Snoop client state information.  The clientPortNumber and
        serverPortNumber refer to the switch port that the client
        and server reside on respectively. Violations occur if DHCP
        Offer or Ack packets are received on non trusted ports.
        serverPortNumber is not supported on Fabric Engine.
      type: object
      properties:
        clientIpAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        clientMacAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        clientPortNumber:
          $ref: '#/components/schemas/PortNameOrNone'
        serverPortNumber:
          $ref: '#/components/schemas/PortName'
        leaseTime:
          description: >-
            The length of time in seconds for which the client IP address
            assignment is valid.
          type: integer
          format: int32
        options:
          $ref: '#/components/schemas/DhcpSnoopFingerprintingOptionList'
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    DhcpSnoopClientStateList:
      description: DHCP Snoop client state list
      type: array
      items:
        $ref: '#/components/schemas/DhcpSnoopClientState'
    DhcpSnoopViolationState:
      description: DHCP Snoop violation state information.
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        portNumber:
          $ref: '#/components/schemas/PortName'
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    DhcpSnoopViolationStateList:
      description: >-
        DHCP Snoop violation state list. For Fabric Engine, violation is
        returned by Telegraf instead and this attribute is not supported using
        NOS API.
      type: array
      items:
        $ref: '#/components/schemas/DhcpSnoopViolationState'
    DhcpSnoopVlanState:
      description: DHCP Snoop VLAN state information.
      type: object
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        origin:
          description: >-
            Indicates how DHCP Snoop was enabled. This setting applies to Fabric
            Engine only.
          type: string
          enum:
            - CONFIG
            - RADIUS
    DhcpSnoopVlanStateList:
      description: DHCP Snoop VLAN state list
      type: array
      items:
        $ref: '#/components/schemas/DhcpSnoopVlanState'
    DhcpSnoopState:
      description: DHCP Snoop state per VLAN.
      type: object
      properties:
        clients:
          $ref: '#/components/schemas/DhcpSnoopClientStateList'
        violations:
          $ref: '#/components/schemas/DhcpSnoopViolationStateList'
        vlans:
          $ref: '#/components/schemas/DhcpSnoopVlanStateList'
    IpAddress:
      description: Free format IP address (IPv4 or IPv6)
      type: string
    ElrpGlobalSettings:
      description: ELRP settings
      type: object
      properties:
        enabled:
          description: ELRP protocol enabled/disabled
          type: boolean
          default: false
          example: true
      required:
        - enabled
    ElrpSpecificVlanSettings:
      description: >
        An object containing the ELRP configuration for a specific VLAN
        including 

        the list of all ports on which ELRP is enabled on this VLAN.
      type: object
      properties:
        enabled:
          description: ELRP enabled on this VLAN.
          type: boolean
          default: false
          example: true
        reporting:
          description: ELRP reporting settings for this VLAN.
          type: string
          $ref: '#/components/schemas/ElrpReportingType'
        actionType:
          description: Type of disable port action.
          type: string
          $ref: '#/components/schemas/ElrpPortDownType'
        temporaryDuration:
          description: >-
            Length of time in seconds that a port is kept down when TEMPORARY
            disable port action is configured.  This value is ignored when NONE
            or PERMANENT disable port action is configured.
          type: integer
          minimum: 15
          maximum: 600
          default: 30
          example: 30
        actionPort:
          description: >-
            Port on which ELRP action is to be taken.  This field is ignored
            when the port action type is NONE.
          type: string
          $ref: '#/components/schemas/ElrpActionPort'
        ports:
          description: List of ELRP enabled ports on this VLAN.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
      required:
        - enabled
    ElrpDisabledPort:
      description: |
        An object containing a port that has been disabled by ELRP 
        and the VLAN on that port on which a loop was detected.
      type: object
      properties:
        port:
          description: Port disabled by ELRP.
          $ref: '#/components/schemas/PortName'
        vlanId:
          description: VLAN on which a loop was detected.
          $ref: '#/components/schemas/VlanIdNonObject'
      required:
        - port
        - vlanId
    ElrpState:
      description: ELRP settings
      type: object
      properties:
        disabledPorts:
          description: List of ports disabled by ELRP.
          type: array
          items:
            $ref: '#/components/schemas/ElrpDisabledPort'
      required:
        - disabledPorts
    EthernetInterfaceAdminState:
      description: This object represents admin state for an ethernet interface.
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
        enabled:
          description: A value of true indicates the port is enabled.
          type: boolean
          default: true
    MacAddress:
      description: Colon separated MAC address in upper or lower case
      type: object
      properties:
        macAddress:
          type: string
          pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
          example: '00:04:96:98:65:1C'
    EthernetInterfaceUtilizationState:
      description: |
        This object represents the utilization of an ethernet interface.
        This attribute is applicable to Switch Engine (EXOS) only.
      type: object
      properties:
        rx:
          description: The percentage of bandwidth used for ingress.
          type: number
          format: float
        tx:
          description: The percentage of bandwidth used for egress.
          type: number
          format: float
        maxRx:
          description: 'The maximum percentage of bandwidth reached, used for ingress.'
          type: number
          format: float
        maxTx:
          description: 'The maximum percentage of bandwidth reached, used for egress.'
          type: number
          format: float
    EthernetInterfaceState:
      description: This object represents state settings for an ethernet interface.
      type: object
      allOf:
        - $ref: '#/components/schemas/MacAddress'
        - type: object
          properties:
            localName:
              description: |
                The textual name of the interface.  The value of this
                object should be the name of the interface as assigned by
                the local device and should be suitable for use in commands
                entered at the device's `console'.
              type: string
            ifIndex:
              description: |
                A unique value, greater than zero, for each interface.  It
                is recommended that values are assigned contiguously
                starting from 1.  The value for each interface sub-layer
                must remain constant at least from one re-initialization of
                the entity's network management system to the next re-
                initialization.
              type: integer
              minimum: 0
              maximum: 2147483647
            type:
              description: >-
                The type of interface. Fabric Engine (VOSS) supports only
                ETHERNET value.
              type: string
              enum:
                - ETHERNET
                - SOFTWARE_LOOPBACK
                - STACK_PORT
            connectorType:
              description: Type of port connector.
              type: string
              enum:
                - RJ45
                - TRANSCEIVER
            operState:
              description: |
                The current operational state of the interface.  The
                testing state indicates that no operational packets can
                be passed.  If admin state is down then oper state
                should be down. If admin state is changed to up
                then oper state should change to up and the interface is
                ready to transmit and receive network traffic. It should
                change to dormant if the interface is waiting for
                external actions (such as a serial line waiting for an
                incoming connection). It should remain in the down state
                if and only if there is a fault that prevents it from going
                to the up state; It should remain in the notPresent
                state if the interface has missing (typically, hardware)
                components.
              type: string
              enum:
                - UP
                - DOWN
                - TESTING
                - UNKNOWN
                - DORMANT
                - NOT-PRESENT
                - LOWER-LAYER-DOWN
            operSpeed:
              description: >
                Indicate this port's current speed value. Fabric Engine (VOSS)
                does not support speed

                values 20G and 50G.
              type: string
              enum:
                - 0M
                - 10M
                - 100M
                - 1G
                - 2.5G
                - 5G
                - 10G
                - 20G
                - 25G
                - 40G
                - 50G
                - 100G
            operDuplex:
              description: Indicate this port's current duplex value.
              type: string
              enum:
                - HALF
                - FULL
            utilization:
              $ref: '#/components/schemas/EthernetInterfaceUtilizationState'
            congPkts:
              description: >
                Indicates the number of packets dropped on this port due to
                congestion.

                This attribute is applicable to Switch Engine (EXOS) only.
              type: integer
              format: int64
              readOnly: true
    EthernetInterfaceStateComponentLevel:
      description: >-
        This object represents the component-level settings of all Ethernet
        Interface.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortName'
        settings:
          $ref: '#/components/schemas/EthernetInterfaceState'
    FabricAttachNsi:
      description: This object represents a NSI/ISID
      type: object
      properties:
        nsi:
          description: The NSI/ISID of a vlan
          type: integer
          minimum: 0
          maximum: 16777215
    FabricAttachElementAssignAuthStatus:
      description: |
        Fabric Attach discovered element assignment authentication status.
        This setting applies to Fabric Engine only.
      type: string
      enum:
        - NONE
        - PASS
        - FAIL
        - SKIPPED
      readOnly: true
    FabricAttachElementOperAssignAuthStatus:
      description: >-
        Operational Fabric Attach assignment authentication status for the
        associated interface. "NONE" indicates that no packets have been
        received yet. "SUCCESS_NO_AUTH" indicates success with no-auth on either
        local or remote. "SUCCESS_AUTH" indicates success with authentication on
        both local and remote. "FAIL_MISMATCHED_KEYS" indicates failure due to
        key mismatch. "FAIL_LOCAL_AUTH_REMOTE_NO_AUTH" indicates failure due to
        local authentication and remote no-authentication.
        "FAIL_LOCAL_NO_AUTH_REMOTE_AUTH" indicates failure due to local
        no-authentication and remote authentication. This setting applies to
        Fabric Engine only.
      type: string
      enum:
        - NONE
        - SUCCESS_NO_AUTH
        - SUCCESS_AUTH
        - FAIL_MISMATCHED_KEYS
        - FAIL_LOCAL_AUTH_REMOTE_NO_AUTH
        - FAIL_LOCAL_NO_AUTH_REMOTE_AUTH
      readOnly: true
    FabricAttachElementAuthStatus:
      description: |
        Fabric Attach discovered element authentication status. This
        setting applies to Fabric Engine only.
      type: string
      enum:
        - NONE
        - PASS
        - FAIL
        - SKIPPED
      readOnly: true
    FabricAttachElementOperAuthStatus:
      description: >-
        Operational Fabric Attach elements authentication status for the
        associated interface. "NONE" indicates that no packets have been
        received yet. "SUCCESS_NO_AUTH" indicates success with no-auth on either
        local or remote. "SUCCESS_AUTH" indicates success with authentication on
        both local and remote. "FAIL_MISMATCHED_KEYS" indicates failure due to
        key mismatch. "FAIL_LOCAL_AUTH_REMOTE_NO_AUTH" indicates failure due to
        local authentication and remote no-authentication.
        "FAIL_LOCAL_NO_AUTH_REMOTE_AUTH" indicates failure due to local
        no-authentication and remote authentication. This setting applies to
        Fabric Engine only.
      type: string
      enum:
        - NONE
        - SUCCESS_NO_AUTH
        - SUCCESS_AUTH
        - FAIL_MISMATCHED_KEYS
        - FAIL_LOCAL_AUTH_REMOTE_NO_AUTH
        - FAIL_LOCAL_NO_AUTH_REMOTE_AUTH
      readOnly: true
    FabricAttachElementProvision:
      description: >-
        Exports the provision mode associated with the discovered Fabric Attach
        element.
      type: string
      enum:
        - PROVISION_MODE_DISABLED
        - PROVISION_MODE_SPBM
        - PROVISION_MODE_VLAN
      readOnly: true
    FabricAttachElementTag:
      description: >-
        Exports the tag state associated with the discovered Fabric Attach
        element.
      type: string
      enum:
        - TRAFFIC_TAGGED
        - TRAFFIC_TAGGED_AND_UNTAGGED
      readOnly: true
    FabricAttachElementType:
      description: >-
        Fabric Attach element type as advertised through LLDP. UNKNOWN applies
        to Switch Engine Only
      type: string
      enum:
        - OTHER
        - SERVER
        - PROXY
        - SERVER_NO_AUTH
        - PROXY_NO_AUTH
        - CLIENT_WAP_TYPE1
        - CLIENT_WAP_TYPE2
        - CLIENT_SWITCH
        - CLIENT_ROUTER
        - CLIENT_IP_PHONE
        - CLIENT_IP_CAMERA
        - CLIENT_IP_VIDEO
        - CLIENT_SECURITY_DEVICE
        - CLIENT_VIRTUAL_SWITCH
        - CLIENT_SRVR_ENDPT
        - CLIENT_ONA_SDN
        - CLIENT_ONA_SPB_OVER_IP
        - UNKNOWN
      readOnly: true
    FabricAttachStateElementSettingsByPort:
      description: This object represents the fabric attach state settings for the port.
      type: object
      properties:
        assignAuthStatus:
          $ref: '#/components/schemas/FabricAttachElementAssignAuthStatus'
        assignOperAuthStatus:
          $ref: '#/components/schemas/FabricAttachElementOperAssignAuthStatus'
        authStatus:
          $ref: '#/components/schemas/FabricAttachElementAuthStatus'
        mgmtVlan:
          description: >-
            Identifies the Fabric Attach element VLAN as advertised through
            LLDP.
          type: integer
          minimum: 0
          maximum: 4095
          readOnly: true
        operAuthStatus:
          $ref: '#/components/schemas/FabricAttachElementOperAuthStatus'
        provision:
          $ref: '#/components/schemas/FabricAttachElementProvision'
        systemId:
          description: >-
            Exports the Chassis ID associated with the discovered Fabric Attach
            element as advertised through LLDP.
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        tag:
          $ref: '#/components/schemas/FabricAttachElementTag'
        type:
          $ref: '#/components/schemas/FabricAttachElementType'
    PortFabricAttachStateElementSettings:
      description: >-
        This object represents the port fabric attach state settings (port is
        specified as a property).
      allOf:
        - type: object
          properties:
            portName:
              $ref: '#/components/schemas/PortName'
        - $ref: '#/components/schemas/FabricAttachStateElementSettingsByPort'
    FabricAttachAssignmentOrigin:
      description: |
        Origin information for the Fabric Attach nsi <-> vlan assignment.
        This setting applies to Fabric Engine only.
      type: string
      enum:
        - PROXY
        - CLIENT
        - RADIUS_CLIENT
        - ZERO_TOUCH_CLIENT
        - OTHER
      readOnly: true
    FabricAttachAssignmentType:
      description: >
        Fabric Attach assignment type. This setting applies to Switch Engine
        only.
      type: string
      enum:
        - STATIC
        - DYNAMIC
        - ZERO_TOUCH_CLIENT
      readOnly: true
    FabricAttachStateAssignmentSettingsByPort:
      description: This object contains the nsi <-> vlan assignments for the port.
      type: object
      properties:
        nsi:
          description: |
            nsi component of the nsi <-> VLAN assignment.
          type: integer
          minimum: 0
          maximum: 16777215
        nsiName:
          description: >-
            A value that uniquely identifies the nsi. This setting applies to
            Fabric Engine only.
          type: string
          minLength: 0
          maxLength: 64
        origin:
          $ref: '#/components/schemas/FabricAttachAssignmentOrigin'
        type:
          $ref: '#/components/schemas/FabricAttachAssignmentType'
        state:
          $ref: '#/components/schemas/FabricAttachAssignmentState'
        vlanId:
          description: >-
            A value that uniquely identifies the Customer VLAN. For Switch
            Engine, the 4095 value is for Management VLAN.
          type: integer
          minimum: 1
          maximum: 4095
    FabricAttachStateAssignmentSettings:
      description: >-
        This object contains the nsi <-> vlan assignments for the Fabric Attach
        application.
      allOf:
        - type: object
          properties:
            portName:
              $ref: '#/components/schemas/PortNameOrNone'
        - properties:
            assignmentList:
              type: array
              items:
                $ref: '#/components/schemas/FabricAttachStateAssignmentSettingsByPort'
    FabricAttachState:
      description: The Fabric Attach state information.
      allOf:
        - type: object
          description: Fabric Attach state information
          properties:
            discoveryElements:
              type: array
              items:
                $ref: '#/components/schemas/PortFabricAttachStateElementSettings'
            vlanAssignments:
              type: array
              items:
                $ref: '#/components/schemas/FabricAttachStateAssignmentSettings'
    FabricAttachStateByPort:
      description: The Fabric Attach state information.
      allOf:
        - type: object
          description: Fabric Attach state information
          properties:
            discoveryElement:
              $ref: '#/components/schemas/FabricAttachStateElementSettingsByPort'
            vlanAssignments:
              type: array
              items:
                $ref: '#/components/schemas/FabricAttachStateAssignmentSettingsByPort'
    MacFdbEntryFlag:
      description: >-
        Forwarding Database entry flags. <table><thead><tr><td> Type </td><td>
        Description </td></tr></thead> <tbody><tr><td> DYNAMIC </td><td> dynamic
        entry </td></tr> <tr><td> STATIC </td><td> static entry </td></tr>
        <tr><td> PERMANENT </td><td> permanent entry </td></tr> <tr><td>
        NET_LOGIN </td><td></td></tr> <tr><td> MAC </td><td></td></tr> <tr><td>
        IP </td><td></td></tr> <tr><td> IPX </td><td></td></tr> <tr><td>
        LOCK_MAC </td><td> lockdown MAC </td></tr> <tr><td> LOCK_TIMEOUT_MAC
        </td><td> lockdown-timeout MAC </td></tr> <tr><td> MIRROR
        </td><td></td></tr> <tr><td> EGRESS_BLACKHOLE </td><td></td></tr>
        <tr><td> INGRESS_BLACKHOLE </td><td></td></tr> <tr><td> MAC_VLAN
        </td><td> MAC based VLAN</td></tr> <tr><td> PVLAN </td><td> private VLAN
        created entry</td></tr> <tr><td> VLAN_TRANSLATION </td><td></td></tr>
        <tr><td> DROP </td><td> drop packet </td></tr> <tr><td> HW_AGING
        </td><td> hardware aging </td></tr> <tr><td> BMAC </td><td> IEEE 802.1ah
        backbone MAC </td></tr> <tr><td> SW_DEL </td><td> software controlled
        deletion </td></tr> <tr><td> MSRP </td><td></td></tr> <tr><td> VXLAN
        </td><td></td></tr> <tr><td> EVPN </td><td></td></tr></tbody></table>
      type: string
      enum:
        - DYNAMIC
        - STATIC
        - PERMANENT
        - NET_LOGIN
        - MAC
        - IP
        - IPX
        - LOCK_MAC
        - LOCK_TIMEOUT_MAC
        - MIRROR
        - EGRESS_BLACKHOLE
        - INGRESS_BLACKHOLE
        - MAC_VLAN
        - PVLAN
        - VLAN_TRANSLATION
        - DROP
        - HW_AGING
        - BMAC
        - SW_DEL
        - MSRP
        - VXLAN
        - EVPN
    BasicMacFdbState:
      description: State information for the Forwarding Database entries.
      type: object
      properties:
        macAddress:
          description: >-
            A unicast MAC address for which the bridge has forwarding and/or
            filtering information.
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
        cvid:
          description: >-
            Used to identify customer vid of the switched uni port that this
            entry is associated with. 4095 value is not used. 4096 value is
            reserved for untagged case. 0 means there is no switched uni
            association. This attribute applies to Fabric Engine only.
          type: integer
          minimum: 0
          maximum: 4096
        interfaceName:
          description: >-
            Either the value 0, or the port name or associated LAG ID of the
            port on which a frame having a source address equal to the value of
            the corresponding MAC addrress has been seen. A value of 0 indicates
            that the port number has not been learned but that the bridge does
            have some forwarding/filtering information about this address. A
            value of 'cpp' indicates a self-assigned MAC address.
          type: string
        interfaceType:
          description: >-
            This attribute indicates the interface type on which the MAC is
            learnt. LAG type is applicable for Fabric Engine only.
          type: string
          enum:
            - ETHERNET
            - LAG
            - UNKNOWN
        status:
          description: >-
            This attribute indicates the status of the Forwarding Database
            entry. This attribute applies to Fabric Engine only.
            <table><thead><tr><td> Type </td><td> Description </td></tr></thead>
            <tbody><tr><td> OTHER </td><td> None of the following </td></tr>
            <tr><td> INVALID </td><td> The entry is no longer valid but has not
            yet been flushed from the database. </td></tr> <tr><td> LEARNED
            </td><td> The MAC address value was learned and is being used.
            </td></tr> <tr><td>MGMT </td><td> The MAC address is also set as
            destination MAC address on filtering information configured into the
            bridge by (local or network) management. The filter specifies the
            set of ports to which frames received from a port and containing a
            destination address are allowed to be forwarded. </td></tr> <tr><td>
            SELF </td><td> The MAC address value represents one of the bridge's
            addresses. The port name indicates which of the bridge's ports has
            this address. </td></tr></tbody></table>
          type: string
          enum:
            - INVALID
            - LEARNED
            - MGMT
            - OTHER
            - SELF
    VlanMacFdbState:
      description: >-
        State information for the Forwarding Database entries filtered by VLAN
        ID.
      allOf:
        - type: object
          properties:
            vlanId:
              $ref: '#/components/schemas/VlanIdNonObject'
            age:
              description: >-
                The age of the entry in seconds. This attribute applies to
                Switch Engine only. A value of 0 indicates that entry should
                never be aged out.
              type: integer
              format: int32
            bmac:
              description: >-
                If the Forwarding Database entry is learned from a SPBM network,
                use backbone MAC address to track where the MAC address comes
                from instead of port name. This attribute applies to Fabric
                Engine only.
              allOf:
                - $ref: '#/components/schemas/MacAddressNonObject'
            flags:
              description: >-
                Flags describing the entry state. This attribute applies to
                Switch Engine only.
              type: array
              items:
                $ref: '#/components/schemas/MacFdbEntryFlag'
            smltRemote:
              description: >-
                Indicate if the MAC address was learned remotely or locally.
                This attribute applies to Fabric Engine only.
              type: boolean
        - $ref: '#/components/schemas/BasicMacFdbState'
    IsidMacFdbState:
      description: State information for the Forwarding Database based on ISID.
      allOf:
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
            origin:
              description: >-
                This attribute indicates whether the MAC address was learned
                locally or on NNI port from a remote destination.
              type: string
              enum:
                - IST_PEER
                - LOCAL
                - NON_LOCAL
            remoteMacBVlanId:
              description: >-
                The value indicates the backbone VLAN ID for this MAC address if
                it is learned remotely. Otherwise a value of 0 is displayed.
              type: integer
              minimum: 0
              maximum: 4094
            remoteMacDestAddr:
              description: >-
                A provider MAC address for which the bridge has forwarding
                and/or filtering information. This value is displayed only if
                the port type is remote otherwise a value of 0 is displayed.
              allOf:
                - $ref: '#/components/schemas/MacAddressNonObject'
            remoteMacDestSysName:
              description: >-
                Primary system name of the node where MAC address entry was
                learned from in case of remote otherwise NULL is shown.
              type: string
        - $ref: '#/components/schemas/BasicMacFdbState'
    VlanIdTo4095:
      description: The identifier of the VLAN
      type: integer
      minimum: 1
      maximum: 4095
    IpArpState:
      description: IP ARP information.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        physicalAddress:
          description: >-
            The media-dependent physical address. In the ethernet case it is a
            MAC address
          type: string
          example: '00:04:78:28:65:1A'
        vlanId:
          $ref: '#/components/schemas/VlanIdTo4095'
        port:
          description: >-
            The port on which the ARP is learned. This can also be a Multi-Link
            Trunk (MLT) - Fabric Engine (FE) only
          type: string
          example: '1:1:1'
        arpType:
          description: Type of the ARP entry
          type: string
          enum:
            - OTHER
            - DYNAMIC
            - STATIC
            - LOCAL
        ttl:
          description: >-
            The numeric value of the ARP Time To Live (TTL) in seconds. This
            field only applies to dynamic entries. For Switch Engine (EXOS) this
            field only applies to entries with timeout enabled.
          type: integer
        tunnel:
          description: >
            If the ARP is learned from a SPBM network, instead of using port to
            track where the ARP comes from, the backbone MAC address is used to
            track it - Fabric Engine (FE) only
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
    IpArpStateList:
      description: A list of ARPs
      type: array
      items:
        $ref: '#/components/schemas/IpArpState'
    IpArpStatePerVrf:
      description: IP ARP state for VRF
      allOf:
        - $ref: '#/components/schemas/VrName'
        - type: object
          properties:
            arpList:
              $ref: '#/components/schemas/IpArpStateList'
    IpArpStateAllVrfs:
      description: A list of ARPs
      type: array
      items:
        $ref: '#/components/schemas/IpArpStatePerVrf'
    Ipv6AddressNonObject:
      type: string
      format: ipv6
    Ipv6NDState:
      description: IPv6 Neigbor Discovery information.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/Ipv6AddressNonObject'
        physicalAddress:
          description: >-
            The media-dependent physical address. In the ethernet case it is a
            MAC address
          type: string
          example: '00:04:78:28:65:1A'
        interfaceType:
          description: The type of the IPv6 interface.
          type: string
          enum:
            - MANAGEMENT_INTERFACE
            - VLAN
            - CIRCUITLESS_IP
            - TUNNEL
            - BROUTER
        interfaceName:
          description: >-
            The name of the IPv6 interface. For VLAN, CIRCUITLESS_IP and TUNNEL
            the name represents the interface id.
          type: string
          example: mgmt-oob
        port:
          description: >-
            The port on which the IPv6 Neigbor is learned. This can also be a
            Multi-Link Trunk (MLT) - Fabric Engine (FE) only
          type: string
          example: '1:1:1'
        nbrType:
          description: Type of the IPv6 Neighbor Discovery entry
          type: string
          enum:
            - OTHER
            - DYNAMIC
            - STATIC
            - LOCAL
        nbrDetectionState:
          description: >-
            The Neighbor Unreachability Detection state for the interface -
            Fabric Engine (FE) only
          type: string
          enum:
            - REACHABLE
            - STALE
            - DELAY
            - PROBE
            - INVALID
            - UNKNOWN
            - INCOMPLETE
        ttl:
          description: >-
            The numeric value of the IPv6 Neighbor Time To Live (TTL) in
            seconds. This field only aplies to dynamic entries. - Switch Engine
            (EXOS) only
          type: integer
        lastUpdatedTime:
          description: >-
            The value of sysUpTime as defined by SystemState schema (described
            in IETF RFC 3418) at the time this entry was last updated. - Fabric
            Engine (FE) only
          type: integer
        tunnel:
          description: >
            If the entry is learned from a SPBM network, instead of using port
            to track where it comes from, the backbone MAC address is used to
            track it - Fabric Engine (FE) only
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
    Ipv6NDStateList:
      description: A list of IPv6 Neighbours
      type: array
      items:
        $ref: '#/components/schemas/Ipv6NDState'
    Ipv6NDStatePerVrf:
      description: IPv6 Neighbor state for VRF
      allOf:
        - $ref: '#/components/schemas/VrName'
        - type: object
          properties:
            ipv6NdList:
              $ref: '#/components/schemas/Ipv6NDStateList'
    Ipv6NDStateAllVrfs:
      description: A list of IPv6 Neighbours
      type: array
      items:
        $ref: '#/components/schemas/Ipv6NDStatePerVrf'
    MlagSeedType:
      description: Seed type used to identify the MLAG peer
      type: string
      enum:
        - MAC
        - MGMT_IP
    MlagSeedValue:
      description: Seed value used to identify the MLAG peer
      type: string
    InstantMlagConfig:
      description: Instant MLAG peer configuration - Switch Engine (EXOS) only
      type: object
      properties:
        seedType:
          $ref: '#/components/schemas/MlagSeedType'
        seedValue:
          $ref: '#/components/schemas/MlagSeedValue'
        iscVlanId:
          description: VLAN identifier of Inter-Switch Connection
          type: integer
          format: int32
    InstantMlagSettings:
      description: >-
        A list containing the instant MLAG peers configured on the device -
        Switch Engine (EXOS) only.
      type: array
      items:
        $ref: '#/components/schemas/InstantMlagConfig'
    PortProfileGlobalSettings:
      description: The global settings for the instant-port feature.
      type: object
      properties:
        learningVlan:
          description: |
            The identifier of the learning VLAN.  A value of zero indicates
            the learning VLAN is unset.
          type: integer
          minimum: 0
          maximum: 4094
    DeviceAction:
      description: >
        This object represents an instant-port profile device action entry. The
        format

        of the match data is determined by the value of the actionType field.
        Note,

        consecutive VLAN identifiers can be expressed as a range for the
        SET_VLAN_TAGGED

        action type.
      type: object
      anyOf:
        - $ref: '#/components/schemas/SetVlanList'
        - $ref: '#/components/schemas/RateLimit'
        - $ref: '#/components/schemas/QosExamination'
        - $ref: '#/components/schemas/QosReplacement'
        - $ref: '#/components/schemas/QosExamReplace'
        - $ref: '#/components/schemas/Interlink'
        - $ref: '#/components/schemas/InstantPortAuthModes'
        - $ref: '#/components/schemas/InstantPortLldpActions'
        - $ref: '#/components/schemas/InstantPortCdpActions'
      discriminator:
        propertyName: actionType
        mapping:
          SET_VLAN_UNTAGGED: '#/components/schemas/SetVlanList'
          SET_VLAN_TAGGED: '#/components/schemas/SetVlanList'
          RATE_LIMIT_BROADCAST: '#/components/schemas/RateLimit'
          RATE_LIMIT_UNKNOWN_UNICAST: '#/components/schemas/RateLimit'
          RATE_LIMIT_MULTICAST: '#/components/schemas/RateLimit'
          SET_QOS_EXAMINATION: '#/components/schemas/QosExamination'
          SET_QOS_REPLACEMENT: '#/components/schemas/QosReplacement'
          SET_QOS_EXAM_REPLACE: '#/components/schemas/QosExamReplace'
          SET_INTERLINK: '#/components/schemas/Interlink'
          SET_AUTHENTICATED: '#/components/schemas/InstantPortAuthModes'
          SET_LLDP: '#/components/schemas/InstantPortLldpActions'
          SET_CDP: '#/components/schemas/InstantPortCdpActions'
      example:
        actionType: SET_VLAN_TAGGED
        vlanList:
          - '4000'
          - '4001'
          - '4002'
          - 4005-4007
    DeviceType:
      description: A device type object associated with an instant-port profile.
      type: object
      properties:
        name:
          description: Device type name (must be unique within a given profile).
          type: string
          minLength: 1
          maxLength: 32
        matchList:
          description: |
            A list of match conditions associated with this device type.
          type: array
          items:
            $ref: '#/components/schemas/DeviceMatch'
          example:
            - category: MAC_LEARN
              data: '00:04:96:98:65:1C/FF:FF:FF:00:00:00'
            - category: LLDP_DEVTYPE
              data: BRIDGE
            - category: LLDP_MAC
              data: '00:04:96:98:65:36/FF:FF:FF:FF:FF:FF'
            - category: AUTHENTICATION
              role: role1
            - category: EXTREME_SWITCH
        actionList:
          description: |
            A list of actions performed if the match conditions are met for this
            device type.  Note that only a single VLAN ID should be specified 
            for SET_VLAN_UNTAGGED.  Note also that VLAN-type actions and 
            Interlink-type actions cannot both be used for a single match 
            condition. A maximum of 8 actions are allowed per device.
          type: array
          maxItems: 16
          items:
            $ref: '#/components/schemas/DeviceAction'
          example:
            - actionType: SET_VLAN_UNTAGGED
              vlanList:
                - '5'
            - actionType: SET_VLAN_TAGGED
              vlanList:
                - '20'
                - '30'
                - '40'
                - 50-52
            - actionType: RATE_LIMIT_BROADCAST
              rateLimit: 10000
            - actionType: SET_QOS_EXAMINATION
              qosExamination: DSCP
            - actionType: SET_AUTHENTICATED
              authMode: OPTIONAL
      required:
        - name
        - matchList
    PortProfileCreate:
      description: An instant-port profile create object.
      type: object
      properties:
        name:
          description: Instant port profile name (must be unique on the device).
          type: string
          minLength: 1
          maxLength: 32
        securePort:
          description: Authentication protocol(s) to use with Secure Port.
          $ref: '#/components/schemas/InstantPortAuthProtocols'
        devices:
          description: >
            A list of device types for this instant-port profile. A maximum 20
            devices

            are allowed per profile.
          type: array
          minItems: 1
          maxItems: 20
          items:
            $ref: '#/components/schemas/DeviceType'
      required:
        - name
        - devices
      example:
        name: profile1
        securePort:
          authProtocols:
            - DOT1X
        devices:
          - name: extreme_switch
            matchList:
              - category: EXTREME_SWITCH
            actionList:
              - actionType: SET_VLAN_UNTAGGED
                vlanList:
                  - 5
              - actionType: SET_VLAN_TAGGED
                vlanList:
                  - 20
                  - 30
                  - 40
              - actionType: RATE_LIMIT_BROADCAST
                rateLimit: 10000
              - actionType: SET_QOS_EXAMINATION
                qosExamination: DSCP
          - name: secure_port
            matchList:
              - category: AUTHENTICATION
                role: role1
            actionList:
              - actionType: SET_AUTHENTICATED
                authMode: OPTIONAL
    DeviceTypeWithIndex:
      description: |
        A device type object containing it's location index. The index
        identifies the location of the device within an instant port
        profile.  The index specifies the location to insert the  new
        device into a previously installed profile. The index value of each
        device within a profile is returned on get operations.
      type: object
      properties:
        name:
          description: Device type name (must be unique within a given profile).
          type: string
          minLength: 1
          maxLength: 32
        index:
          description: >
            Device type index.  This index is used to identify the location for

            insertion of a new device into a previously installed profile.  If

            the index is not specified, the new device is appended as the

            last device in the profile.  The maximum number of devices per
            profile

            is 20.  The application running on the operating system ensures that

            the indices are programmed starting from 0 with no gaps between

            devices.
          type: integer
          minimum: 0
          maximum: 19
        matchList:
          description: |
            A list of match conditions associated with this device type.
          type: array
          items:
            $ref: '#/components/schemas/DeviceMatch'
          example:
            - category: MAC_LEARN
              data: '00:04:96:98:65:1C/FF:FF:FF:00:00:00'
            - category: LLDP_DEVTYPE
              data: BRIDGE
            - category: LLDP_MAC
              data: '00:04:96:98:65:36/FF:FF:FF:FF:FF:FF'
            - category: AUTHENTICATION
              role: role1
            - category: EXTREME_SWITCH
        actionList:
          description: |
            A list of actions performed if the match conditions are met for this
            device type.  Note that only a single VLAN ID should be specified 
            for SET_VLAN_UNTAGGED.  Note also that VLAN-type actions and 
            Interlink-type actions cannot both be used for a single match 
            condition.  Interlink-type actions are the only actions that 
            should be used with EXTREME_SWITCH match conditions.
          type: array
          items:
            $ref: '#/components/schemas/DeviceAction'
          example:
            - actionType: SET_VLAN_UNTAGGED
              vlanList:
                - 5
            - actionType: SET_VLAN_TAGGED
              vlanList:
                - 20
                - 30
                - 40
            - actionType: RATE_LIMIT_BROADCAST
              rateLimit: 10000
            - actionType: SET_QOS_EXAMINATION
              qosExamination: DSCP
            - actionType: SET_AUTHENTICATED
              authMode: OPTIONAL
      required:
        - name
        - matchList
    DeviceTypeNoName:
      description: A device type object associated with an instant-port profile.
      type: object
      properties:
        matchList:
          description: |
            A list of match conditions associated with this device type.
          type: array
          items:
            $ref: '#/components/schemas/DeviceMatch'
          example:
            - category: MAC_LEARN
              data: '00:04:96:98:65:1C/FF:FF:FF:00:00:00'
            - category: LLDP_DEVTYPE
              data: BRIDGE
            - category: LLDP_MAC
              data: '00:04:96:98:65:36/FF:FF:FF:FF:FF:FF'
            - category: AUTHENTICATION
              role: role1
            - category: EXTREME_SWITCH
        actionList:
          description: |
            A list of actions performed if the match conditions are met for this
            device type.  Note that only a single VLAN ID should be specified 
            for SET_VLAN_UNTAGGED.  Note also that VLAN-type actions and 
            Interlink-type actions cannot both be used for a single match 
            condition.  Interlink-type actions are the only actions that 
            should be used with EXTREME_SWITCH match conditions.
          type: array
          items:
            $ref: '#/components/schemas/DeviceAction'
          example:
            - actionType: SET_VLAN_UNTAGGED
              vlanList:
                - 5
            - actionType: SET_VLAN_TAGGED
              vlanList:
                - 20
                - 30
                - 40
            - actionType: RATE_LIMIT_BROADCAST
              rateLimit: 10000
            - actionType: SET_QOS_EXAMINATION
              qosExamination: DSCP
            - actionType: SET_AUTHENTICATED
              authMode: OPTIONAL
      required:
        - matchList
    LLDPMacAndType:
      allOf:
        - $ref: '#/components/schemas/LLDPDeviceTypes'
        - $ref: '#/components/schemas/MacAddress'
    ExtremeSwitchTypeAndMac:
      allOf:
        - $ref: '#/components/schemas/ExtremeSwitchType'
        - $ref: '#/components/schemas/MacAddress'
    AuthRole:
      type: object
      properties:
        role:
          description: >
            The name of the role used in an instant port profile with the
            AUTHENTICATION

            match type. If a user authenticates to an entry in a radius users
            file and the

            entry specifies the same role name as specified in the profile, the
            user will

            be considered to have matched the profile.
          type: string
    AuthRoleAndMac:
      allOf:
        - $ref: '#/components/schemas/AuthRole'
        - $ref: '#/components/schemas/MacAddress'
    MatchedDevice:
      description: >-
        This object represents an instant-port profile matched device. The
        format of the match data is determined by the value of the category
        field.
      type: object
      properties:
        category:
          $ref: '#/components/schemas/MatchCategories'
      anyOf:
        - $ref: '#/components/schemas/MacAddress'
        - $ref: '#/components/schemas/ExtremeSwitchTypeAndMac'
        - $ref: '#/components/schemas/LLDPMacAndType'
        - $ref: '#/components/schemas/AuthRoleAndMac'
      discriminator:
        propertyName: category
        mapping:
          MAC_LEARN: '#/components/schemas/MacAddress'
          LLDP_MAC: '#/components/schemas/MacAddress'
          LLDP_DEVTYPE: '#/components/schemas/LLDPMacAndType'
          LLDP_MAC_DEVTYPE: '#/components/schemas/LLDPMacAndType'
          EXTREME_SWITCH: '#/components/schemas/ExtremeSwitchTypeAndMac'
          AUTHENTICATION: '#/components/schemas/AuthRoleAndMac'
    InstantPortMatchedDevice:
      description: >-
        Information about a matched device on a port with an instant-port
        profile assigned.
      type: object
      properties:
        deviceTypeName:
          description: Device Type defined in the profile that was matched by this device.
          type: string
          minLength: 1
          maxLength: 32
        match:
          description: Property of the device that was matched.
          $ref: '#/components/schemas/MatchedDevice'
      required:
        - deviceTypeName
        - match
    InstantPortProfilePortState:
      description: Instant-port matched devices and attempts per port.
      type: object
      properties:
        portNumber:
          $ref: '#/components/schemas/PortName'
        attempts:
          description: >-
            Instant-port attempts on this port. // Placeholder for future
            support
          type: integer
          minimum: 1
          maximum: 4294967295
          format: int64
        matches:
          description: Devices matched on this port.
          type: array
          items:
            $ref: '#/components/schemas/InstantPortMatchedDevice'
      required:
        - portNumber
        - matches
    InstantPortProfileState:
      description: State of instant-port profile.
      type: object
      properties:
        profileName:
          description: Instant-port profile assigned to this port.
          type: string
          minLength: 1
          maxLength: 32
        totalProfileAttempts:
          description: >-
            Total number of instant-port attempts for all ports assigned to this
            profile.
          type: integer
          minimum: 1
          maximum: 65536
        profilePortStates:
          description: State of all the ports assigned to this profile.
          type: array
          items:
            $ref: '#/components/schemas/InstantPortProfilePortState'
      required:
        - profileName
        - totalProfileAttempts
        - profilePortStates
    InstantPortSwitchStateByProfile:
      description: State of all instant-port profiles on the switch.
      type: array
      items:
        $ref: '#/components/schemas/InstantPortProfileState'
    InstantPortPerPortState:
      description: Instant-port matched devices and attempts per port.
      type: object
      properties:
        portNumber:
          $ref: '#/components/schemas/PortName'
        profileName:
          description: Instant-port profile assigned to this port.
          type: string
          minLength: 1
          maxLength: 32
        attempts:
          description: >-
            Instant-port attempts on this port. // Placeholder for future
            support
          type: integer
          minimum: 1
          maximum: 4294967295
          format: int64
        matches:
          description: Devices matched on this port.
          type: array
          items:
            $ref: '#/components/schemas/InstantPortMatchedDevice'
      required:
        - portNumber
        - profileName
        - matches
    InstantPortSwitchStateByPort:
      description: State of instant-port for all ports on the switch.
      type: array
      items:
        $ref: '#/components/schemas/InstantPortPerPortState'
    LagUpdateConfigs:
      description: This object represents the LAG parameters that can be updated.
      type: object
      properties:
        name:
          description: >
            The name of the LAG. This property only applies to Fabric Engine
            (VOSS).
          type: string
          minLength: 0
          maxLength: 20
        lacpKey:
          description: |
            The current operational value of the key for the Aggregation Port.
            Ports with the same key will be aggregated as a single trunk. It
            is used only by VOSS.
          type: string
          minLength: 1
          maxLength: 512
        loadBalanceAlgo:
          $ref: '#/components/schemas/LagLoadBalanceAlgo'
    LagMembersState:
      description: Ports aggregated in the LAG
      type: array
      items:
        $ref: '#/components/schemas/PortName'
    LagState:
      description: LAG state per LAG.
      allOf:
        - $ref: '#/components/schemas/LagBasicConfigs'
        - type: object
          properties:
            memberPorts:
              $ref: '#/components/schemas/LagMembersState'
    LagStateAll:
      description: State of LAG for all LAGs on switch.
      type: array
      items:
        $ref: '#/components/schemas/LagState'
    LagStatePerId:
      description: LAG state settings.
      type: object
      properties:
        memberPorts:
          $ref: '#/components/schemas/LagMembersState'
        name:
          description: LAG config name. This property only applies to Fabric Engine.
          type: string
          minLength: 0
          maxLength: 20
    PortLldpConfigAdvertiseSettings:
      description: |
        This object represents LLDP advertisement and location settings.
      type: object
      properties:
        advertise:
          $ref: '#/components/schemas/PortLldpAdvertiseSettings'
        location:
          $ref: '#/components/schemas/PortLldpLocation'
    PortLldpConfigSettings:
      description: >
        This object represents LLDP advertisement and location settings.

        For Fabric Engine, transmitEnabled and receiveEnabled fields should be
        set to the same value or only one should be set in a request.

        If transmitEnabled or receiveEnabled are set to false in a request, all
        the other attributes in the request will be ignored (such as advertise
        and location).  

        If only one of transmitEnabled and receiveEnabled is sent in the
        request, the value sent to the backend will be the one from the request,
        not the default one. eg: specifying transmitEnabled = false in the
        request means that the backend variable will be set to False, even if
        receiveEnabled has default value True. 

        If none of these 2 attributes is sent in the request, default value True
        will be used.
      allOf:
        - $ref: '#/components/schemas/PortLldpBasic'
        - $ref: '#/components/schemas/PortLldpConfigAdvertiseSettings'
    LldpNeighborKey:
      description: The LLDP neighbor key information.
      type: object
      properties:
        index:
          description: >-
            An arbitrary local integer value used to identify a particular
            connection instance, unique only for the indicated remote system.
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int32
          readOnly: true
        portName:
          description: >-
            Identifies the local port on which the remote system information is
            received.
          type: string
          readOnly: true
        timeMark:
          description: TimeFilter value as defined by IETF RFC 2021 section 6.
          type: integer
          readOnly: true
      required:
        - index
        - portName
        - timeMark
    LldpChassisId:
      description: >
        The type of encoding used to identify the chassis associated with the
        local system as described by IEEE 802.1AB-2005 9.5.2.3.
      type: string
      minLength: 1
      maxLength: 255
      readOnly: true
    LldpMauAuotNegCapAdvertisedType:
      description: >-
        Set of capabilities advertised by the local auto-negotiation entity. For
        details see IEEE 802.3 Std. 10BASE_T     - 10BASE-T  half duplex mode
        10BASE_TFD   - 10BASE-T  full duplex mode 100BASE_T2   - 100BASE-T2 half
        duplex mode 100BASE_T4   - 100BASE-T4 100BASE_TX   - 100BASE-TX half
        duplex mode 100BASE_TXFD - 100BASE-TX full duplex mode 100BASE_T2FD -
        100BASE-T2 full duplex mode 1000BASE_T   - 1000BASE-T half duplex mode
        1000BASE_TFD - 1000BASE-T full duplex mode 1000BASE_X   - 1000BASE-X,
        -LX, -SX, -CX half duplex mode 1000BASE_XFD - 1000BASE-X, -LX, -SX, -CX
        full duplex mode FDX_PAUSE    - PAUSE for full-duplex links FDX_A_PAUSE 
        - Asymmetric PAUSE for full-duplex links FDX_S_PAUSE  - Symmetric PAUSE
        for full-duplex links FDX_B_PAUSE  - Asymmetric and Symmetric PAUSE for
        full-duplex links OTHER        - other or unknown
      type: string
      enum:
        - 10BASE_T
        - 10BASE_TFD
        - 100BASE_T2
        - 100BASE_T4
        - 100BASE_TX
        - 100BASE_TXFD
        - 100BASE_T2FD
        - 1000BASE_T
        - 1000BASE_TFD
        - 1000BASE_X
        - 1000BASE_XFD
        - FDX_PAUSE
        - FDX_A_PAUSE
        - FDX_S_PAUSE
        - FDX_B_PAUSE
        - OTHER
    LldpLinkAggregationType:
      description: >-
        The link aggregation status type. AGG_CAPABLE - indicates the link is
        capable of being aggregated. AGG_ENABLED - indicates the link is
        currently in aggregation.
      type: string
      enum:
        - AGG_CAPABLE
        - AGG_ENABLED
    Dot3MauType:
      description: >-
        DOT3 MAU type as defined by IEEE 802.3 Medium Attachment Units (MAUs).
        AUI - no internal MAU, view from AUI; [IEEE802.3], Section 7 10BASE_5 -
        thick coax MAU; [IEEE802.3], Section 7 FOIRL - FOIRL MAU; [IEEE802.3],
        Section 9.9 10BASE_2 - thin coax MAU; [IEEE802.3], Section 10 10BASE_T -
        UTP MAU; [IEEE802.3], Section 14 10BASE_FP - passive fiber MAU;
        [IEEE802.3], Section 16 10BASE_FB - sync fiber MAU; [IEEE802.3], Section
        17 10BASE_FL - async fiber MAU; [IEEE802.3], Section 18 10BROAD_36 -
        broadband DTE MAU; [IEEE802.3], Section 11 10BASE_THD - UTP MAU, half
        duplex mode; [IEEE802.3], Section 14 10BASE_TFD - UTP MAU, full duplex
        mode; [IEEE802.3], Section 14 10BASE_FLHD - async fiber MAU, half duplex
        mode; [IEEE802.3], Section 18 10BASE_FLFD - async fiber MAU, full duplex
        mode; [IEEE802.3], Section 18 100BASE_T4 - 4 pair category 3 UTP;
        [IEEE802.3], Section 23 100BASE_TXHD - 2 pair category 5 UTP, half
        duplex mode; [IEEE802.3], Section 25 100BASE_TXFD - 2 pair category 5
        UTP, full duplex mode; [IEEE802.3], Section 25 100BASE_FXHD - X fiber
        over PMT, half duplex mode; [IEEE802.3], Section 26 100BASE_FXFD - X
        fiber over PMT, full duplex mode; [IEEE802.3], Section 26 100BASE_T2HD -
        2 pair category 3 UTP, half duplex mode; [IEEE802.3], Section 32
        100BASE_T2FD - 2 pair category 3 UTP, full duplex mode; [IEEE802.3],
        Section 32 1000BASE_XHD - PCS/PMA, unknown PMD, half duplex mode;
        [IEEE802.3], Section 36 1000BASE_XFD - PCS/PMA, unknown PMD, full duplex
        mode; [IEEE802.3], Section 36 1000BASE_LXHD - Fiber over long-wavelength
        laser, half duplex mode; [IEEE802.3], Section 38 1000BASE_LXFD - Fiber
        over long-wavelength laser, full duplex mode; [IEEE802.3], Section 38
        1000BASE_SXHD - Fiber over short-wavelength laser, half duplex mode;
        [IEEE802.3], Section 38 1000BASE_SXFD - Fiber over short-wavelength
        laser, full duplex mode; [IEEE802.3], Section 38 1000BASE_CXHD - Copper
        over 150-Ohm balanced cable, half duplex mode; [IEEE802.3], Section 39
        1000BASE_CXFD - Copper over 150-Ohm balanced cable, full duplex
        modeduplex mode; [IEEE802.3], Section 39 1000BASE_THD - Four-pair
        Category 5 UTP, half duplex mode; [IEEE802.3], Section 40 1000BASE_TFD -
        Four-pair Category 5 UTP, full duplex mode; [IEEE802.3], Section 40
        10GIG_BASE_X - X PCS/PMA, unknown PMD; [IEEE802.3], Section 48
        10GIG_BASE_LX4 - X fiber over WWDM optics; [IEEE802.3], Section 53
        10GIG_BASE_R - R PCS/PMA, unknown PMD; [IEEE802.3], Section 49
        10GIG_BASE_ER - R fiber over 1550 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_LR - R fiber over 1310 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_SR - R fiber over 850 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_W - W PCS/PMA, unknown PMD; [IEEE802.3], Section 49 and 50
        10GIG_BASE_EW - W fiber over 1550 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_LW - W fiber over 1310 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_SW - W fiber over 850 nm optics; [IEEE802.3], Section 52
        10GIG_BASE_CX4 - X copper over 8 pair 100-Ohm balanced cable;
        [IEEE802.3], Section 54 2BASE_TL - Voice grade UTP copper, up to 2700m,
        optional PAF; [IEEE802.3], Sections 61 and 63 10PASS_TS - Voice grade
        UTP copper, up to 750m, optional PAF; [IEEE802.3], Sections 61 and 62
        100BASE_BX10D - One single-mode fiber OLT, long wavelength, 10km;
        [IEEE802.3], Section 58 100BASE_BX10U - One single-mode fiber ONU, long
        wavelength, 10km; [IEEE802.3], Section 58 100BASE_LX10 - Two single-mode
        fibers, long wavelength, 10km; [IEEE802.3], Section 58 1000BASE_BX10D -
        One single-mode fiber OLT, long wavelength, 10km; [IEEE802.3], Section
        59 1000BASE_BX10U - One single-mode fiber ONU, long wavelength, 10km;
        [IEEE802.3], Section 59 1000BASE_LX10 - Two sigle-mode fiber, long
        wavelength, 10km"; [IEEE802.3], Section 59 1000BASE_PX10D - One
        single-mode fiber EPON OLT, 10km; [IEEE802.3], Section 60 1000BASE_PX10U
        - One single-mode fiber EPON ONU, 10km; [IEEE802.3], Section 60
        1000BASE_PX20D - One single-mode fiber EPON OLT, 20km; [IEEE802.3],
        Section 60 1000BASE_PX20U - One single-mode fiber EPON ONU, 20km;
        [IEEE802.3], Section 60 10GBASE_T - Four-pair Category 6A or better,
        full duplex mode only 10GBASE_LRM - R multimode fiber over 1310 nm
        optics 1000BASE_KX - X backplane, full duplex mode only 10GBASE_KX4 - 4
        lane X backplane, full duplex mode only 10GBASE_KR - R backplane, full
        duplex mode only 10G1_GBASE_PRXD1 - One single-mode fiber
        asymmetric-rate EPON OLT, supporting low power budget (PRX10)
        10G1_GBASE_PRXD2 - One single-mode fiber asymmetric-rate EPON OLT,
        supporting medium power budget (PRX20) 10G1_GBASE_PRXD3 - One
        single-mode fiber asymmetric-rate EPON OLT, supporting high power budget
        (PRX30) 10G1_GBASE_PRXU1 - One single-mode fiber asymmetric-rate EPON
        ONU, supporting low power budget (PRX10) 10G1_GBASE_PRXU2 - One
        single-mode fiber asymmetric-rate EPON ONU, supporting medium power
        budget (PRX20) 10G1_GBASE_PRXU3 - One single-mode fiber asymmetric-rate
        EPON ONU, supporting high power budget (PRX30) 10GBASE_PRD1 - One
        single-mode fiber symmetric-rate EPON OLT, supporting low power budget
        (PR10) 10GBASE_PRD2 - One single-mode fiber symmetric-rate EPON OLT,
        supporting medium power budget (PR20) 10GBASE_PRD3 - One single-mode
        fiber symmetric-rate EPON OLT, supporting high power budget (PR30)
        10GBASE_PRU1 - One single-mode fiber symmetric-rate EPON ONU, supporting
        low and medium power budget (PR10 and PR20) 10GBASE_PRU3 - One
        single-mode fiber symmetric-rate EPON ONU, supporting high power budget
        (PR30) 40GBASE_KR4 - 40GBASE-R PCS/PMA over an electrical backplane
        40GBASE_CR4 - 40GBASE-R PCS/PMA over 4 lane shielded copper balanced
        cable 40GBASE_SR4 - 40GBASE-R PCS/PMA over 4 lane multimode fiber
        40GBASE_FR - 40GBASE-R PCS/PMA over single mode fiber 40GBASE_LR4 -
        40GBASE-R PCS/PMA over 4 WDM lane single mode fiber 100GBASE_CR10 -
        100GBASE-R PCS/PMA over 10 lane shielded copper balanced cable
        100GBASE_SR10 - 100GBASE-R PCS/PMA over 10 lane multimode fiber
        100GBASE_LR4 - 100GBASE-R PCS/PMA over 4 WDM lane single mode fiber,
        long reach 100GBASE_ER4 - 100GBASE-R PCS/PMA over 4 WDM lane single mode
        fiber PMD, extended reach
      type: string
      enum:
        - AUI
        - 10BASE_5
        - FOIRL
        - 10BASE_2
        - 10BASE_T
        - 10BASE_FP
        - 10BASE_FB
        - 10BASE_FL
        - 10BROAD_36
        - 10BASE_THD
        - 10BASE_TFD
        - 10BASE_FLHD
        - 10BASE_FLFD
        - 100BASE_T4
        - 100BASE_TXHD
        - 100BASE_TXFD
        - 100BASE_FXHD
        - 100BASE_FXFD
        - 100BASE_T2HD
        - 100BASE_T2FD
        - 1000BASE_XHD
        - 1000BASE_XFD
        - 1000BASE_LXHD
        - 1000BASE_LXFD
        - 1000BASE_SXHD
        - 1000BASE_SXFD
        - 1000BASE_CXHD
        - 1000BASE_CXFD
        - 1000BASE_THD
        - 1000BASE_TFD
        - 10GIG_BASE_X
        - 10GIG_BASE_LX4
        - 10GIG_BASE_R
        - 10GIG_BASE_ER
        - 10GIG_BASE_LR
        - 10GIG_BASE_SR
        - 10GIG_BASE_W
        - 10GIG_BASE_EW
        - 10GIG_BASE_LW
        - 10GIG_BASE_SW
        - 10GIG_BASE_CX4
        - 2BASE_TL
        - 10PASS_TS
        - 100BASE_BX10D
        - 100BASE_BX10U
        - 100BASE_LX10
        - 1000BASE_BX10D
        - 1000BASE_BX10U
        - 1000BASE_LX10
        - 1000BASE_PX10D
        - 1000BASE_PX10U
        - 1000BASE_PX20D
        - 1000BASE_PX20U
        - 10GBASE_T
        - 10GBASE_LRM
        - 1000BASE_KX
        - 10GBASE_KX4
        - 10GBASE_KR
        - 10G1_GBASE_PRXD1
        - 10G1_GBASE_PRXD2
        - 10G1_GBASE_PRXD3
        - 10G1_GBASE_PRXU1
        - 10G1_GBASE_PRXU2
        - 10G1_GBASE_PRXU3
        - 10GBASE_PRD1
        - 10GBASE_PRD2
        - 10GBASE_PRD3
        - 10GBASE_PRU1
        - 10GBASE_PRU3
        - 40GBASE_KR4
        - 40GBASE_CR4
        - 40GBASE_SR4
        - 40GBASE_FR
        - 40GBASE_LR4
        - 100GBASE_CR10
        - 100GBASE_SR10
        - 100GBASE_LR4
        - 100GBASE_ER4
        - NONE
    PortPowerClassification:
      description: >-
        Classification is a way to tag different terminals on the Power over LAN
        network according to their power consumption. For details see IEEE Draft
        P802.3af/D3.3.
      type: string
      enum:
        - CLASS0
        - CLASS1
        - CLASS2
        - CLASS3
        - CLASS4
    PowerPairs:
      description: >-
        The power pairs in use SIGNAL - the signal pairs only are in use SPARE 
        - the spare pairs only are in use
      type: string
      enum:
        - SIGNAL
        - SPARE
    PortPowerClass:
      description: Power over Ethernet (PoE) port class
      type: string
      enum:
        - CLASS_PD
        - CLASS_PSE
    LldpNeighborXDot3Power:
      description: >-
        The LLDP neighbor 802.3 ethernet power state information as advertised
        by the remote system.
      type: object
      properties:
        class:
          description: >-
            Power classification associated with the given port on the remote
            system. For details see IEEE 802.1AB-2004 G.3.3.
          $ref: '#/components/schemas/PortPowerClassification'
          readOnly: true
        mdiEnabled:
          description: >-
            Indicates whether the MDI power is enabled on the given port
            associated with the remote system. For details see IEEE 802.1AB-2004
            G.3.1.
          type: boolean
          readOnly: true
        mdiSupported:
          description: >-
            Indicates whether the MDI power is supported on the given port
            associated with the remote system. For details see IEEE 802.1AB-2004
            G.3.1.
          type: boolean
          readOnly: true
        pairControlable:
          description: >-
            Indicates whether the pair selection can be controlled on the given
            port associated with the remote system. For details see IEEE
            802.1AB-2004 G.3.1
          type: boolean
          readOnly: true
        pairs:
          description: >-
            Defines the power pairs in use for the given port on the remote
            system. For details see IEEE 802.1AB-2004 G.3.2
          $ref: '#/components/schemas/PowerPairs'
        portClass:
          description: >-
            Port power class of the given port associated with the remote
            system. For details see IEEE 802.1AB-2004 G.3.1.
          $ref: '#/components/schemas/PortPowerClass'
          readOnly: true
    LldpNeighborXDot3:
      description: >-
        The LLDP neighbor 802.3 state information as advertised by the remote
        system. These settings apply to Switch Engine only.
      type: object
      properties:
        autoNegAdvertisedCap:
          description: >-
            List of capabilities advertised by the local auto-negotiation entity
            that are associated with the given port on the remote system. For
            details see IEEE 802.1AB-2004 G.2.2.
          type: array
          items:
            $ref: '#/components/schemas/LldpMauAuotNegCapAdvertisedType'
          readOnly: true
        autoNegEnabled:
          description: >-
            Indicates whether port auto-negotiation is enabled on the given port
            associated with the remote system. For details see IEEE 802.1AB-2004
            G.2.1.
          type: boolean
          readOnly: true
        autoNegSupported:
          description: >-
            Indicates whether the given port (associated with remote system)
            supports auto-negotiation. For details see IEEE 802.1AB-2004 G.2.1.
          type: boolean
          readOnly: true
        linkAggPortId:
          description: >-
            IEEE 802.3 aggregated port identifier. If the remote port is not in
            link aggregation state and/or it does not support link aggregation,
            this value should be sero. For details see IEEE 802.1AB-2004 G.4.2.
          type: integer
          format: int32
          readOnly: true
        linkAggStatus:
          description: >-
            List of aggregation capabilities and the current aggregation status
            of the link. For details see IEEE 802.1AB-2004 G.4.1.
          $ref: '#/components/schemas/LldpLinkAggregationType'
        maxFrameSize:
          description: >-
            Maximum frame size information for the given port (associated with
            remote system). For details see IEEE 802.1AB-2004 G.5.1.
          type: integer
          minimum: 0
          maximum: 65535
          readOnly: true
        operMauType:
          description: >-
            Operational MAU type of the sending device For details see IEEE
            802.1AB-2004 G.2.3.
          $ref: '#/components/schemas/Dot3MauType'
          readOnly: true
        power:
          $ref: '#/components/schemas/LldpNeighborXDot3Power'
    LldpNeighborFabricAttachVlanIsidMap:
      description: >-
        The LLDP neighbor fabric attach VLAN ID - I-SID mapping state
        information as advertised by the remote system.
      type: object
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        isid:
          $ref: '#/components/schemas/IsidNonObject'
        status:
          description: >-
            Advertised fabric attach status for VLAN ID - I-SID mapping.
            <table><thead><tr><td> VALUE </td><td> PLATFORM
            </td></tr></thead><tbody> <tr><td> UNKNOWN </td><td> both </td></tr>
            <tr><td> PENDING </td><td> both </td></tr> <tr><td> ACTIVE </td><td>
            both </td></tr> <tr><td> REJECTED_NO_REASON </td><td> both
            </td></tr> <tr><td> REJECTED_RESOURCE </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_DUPLICATE </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_INVALID_VLAN </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_UNKNOWN_VLAN </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_RESOURCE_VLAN </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_APP_INTERACTION </td><td> Fabric Engine
            </td></tr> <tr><td> REJECTED_PEER_ACCEPTANCE </td><td> Fabric Engine
            </td></tr> </tbody></table>
          type: string
          enum:
            - ACTIVE
            - PENDING
            - REJECTED_APPLICATION_INTERACTION
            - REJECTED_DUPLICATE
            - REJECTED_INVALID_VLAN
            - REJECTED_NO_REASON
            - REJECTED_PEER_ACCEPTANCE
            - REJECTED_RESOURCE
            - REJECTED_RESOURCE_VLAN
            - REJECTED_UNKNOWN_VLAN
            - UNKNOWN
          readOnly: true
    LldpNeighborFabricAttach:
      description: >-
        The LLDP neighbor fabric attach state information as advertised by the
        remote system.
      type: object
      properties:
        authEnabled:
          description: Advertised fabric attach authentication state.
          type: boolean
          readOnly: true
        authPassed:
          description: >-
            Advertised fabric attach authentication result. This attribute is
            applicable to Switch Engine only.
          type: boolean
          readOnly: true
        connectionType:
          description: >-
            Advertised connection type. This attribute is applicable to Switch
            Engine only.
          type: string
          enum:
            - LAG
            - SINGLE_PORT
            - SLT
            - SMLT
            - UNDEFINED
          readOnly: true
        lagId:
          description: >-
            This attribute is applicable to Switch Engine only. A value of 0
            means the LAG ID is not set.
          anyOf:
            - type: integer
              enum:
                - 0
            - $ref: '#/components/schemas/LagId'
        linkInfo:
          description: This attribute is applicable to Switch Engine only.
          type: string
          pattern: '^([0-9A-Fa-f]{2}[-]){3}([0-9A-Fa-f]{2})$'
          example: 02-aa-01-ff
          readOnly: true
        macAddr:
          $ref: '#/components/schemas/MacAddressNonObject'
        mgmtVlanId:
          description: A value of 0 means the management VLAN ID is not set.
          anyOf:
            - type: integer
              enum:
                - 0
            - $ref: '#/components/schemas/VlanIdNonObject'
        portName:
          description: This attribute is applicable to Switch Engine only.
          readOnly: true
          $ref: '#/components/schemas/PortName'
        reserved:
          description: >-
            Advertised fabric attach reserved value. This attribute is
            applicable to Fabric Engine only.
          type: integer
          readOnly: true
        smltId:
          description: >-
            This attribute is applicable to Switch Engine only. A value of 0
            means the SMLT ID is not set.
          type: integer
          minimum: 0
          maximum: 512
          readOnly: true
        state:
          description: >-
            Advertised fabric attach state. Integer value obtained from TLV,
            representing a combination of TAG and Auto Provision states.
          type: integer
          readOnly: true
        type:
          description: Advertised fabric attach type.
          type: string
          enum:
            - CLIENT_ENDPT
            - CLIENT_IPCAMERA
            - CLIENT_IPPHONE
            - CLIENT_IPVIDEO
            - CLIENT_ONA_SDN
            - CLIENT_ONA_SPBOIP
            - CLIENT_ROUTER
            - CLIENT_SECDEV
            - CLIENT_SWITCH
            - CLIENT_VSWITCH
            - CLIENT_WAP1
            - CLIENT_WAP2
            - NOT_SUPPORTED
            - PROXY
            - PROXY_NOAUTH
            - PROXY_RING
            - SERVER
            - SERVER_NOAUTH
            - UNKNOWN
          readOnly: true
        vlanIdIsidMapList:
          description: State information for VLAN ID and I-SID mapping.
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborFabricAttachVlanIsidMap'
          readOnly: true
    LldpManagementAddressIfSubtype:
      description: |
        The type of interface associated with the management address as defined 
        by IEEE 802.1AB-2005 9.5.9.5.
        IFINDEX         - interface identifier
        SYS_PORT_NUMBER - interface identifier based on the system 
                          port numbering convention
        UNKNOWN         - interface is not known
      type: string
      enum:
        - IFINDEX
        - SYS_PORT_NUMBER
        - UNKNOWN
      readOnly: true
    LldpNeighborManagementAddress:
      description: The LLDP neighbor management address state information.
      type: object
      properties:
        address:
          description: >-
            The string value used to identify the management address component
            associated with the remote system.  The purpose of this address is
            to contact the management entity. Value is defined by IEEE
            802.1AB-2005 9.5.9.4.
          type: string
          readOnly: true
        addressIfId:
          description: >-
            The integer value used to identify the interface number regarding
            the management address component associated with the remote system.
            Value is defined by IEEE 802.1AB-2005 9.5.9.6.
          type: integer
          format: int32
          readOnly: true
        addressIfSubtype:
          $ref: '#/components/schemas/LldpManagementAddressIfSubtype'
        addressSubtype:
          $ref: '#/components/schemas/AddressFamilyNumbers'
      required:
        - address
        - addressSubtype
    LldpXMedCapability:
      description: >-
        The LLDP MED capabilities. Describes the MED organizationally defined
        set of LLDP TLVs the device is capable of. CAPABILITIES   - Capabilities
        TLVs EXTENDED_PD    - Extended PoE TLVs with PD capabilities
        EXTENDED_PSE   - Extended PoE TLVs with PSE capabilities INVENTORY     
        - Hardware Revision, Firmware Revision, Software Revision, Serial
        Number, Manufacturer Name, Model Name, and Asset ID TLVs LOCATION      
        - Emergency Communications System Location TLVs NETWORK_POLICY - Network
        Policy TLVs
      type: string
      enum:
        - CAPABILITIES
        - EXTENDED_PD
        - EXTENDED_PSE
        - INVENTORY
        - LOCATION
        - NETWORK_POLICY
    LldpXMedDeviceClass:
      description: >-
        The device Class to which the device is a member. ENDPOINT_CLASS_1     -
        the device has endpoint class 1 capabilities ENDPOINT_CLASS_2     - the
        device has endpoint class 2 capabilities ENDPOINT_CLASS_3     - the
        device has endpoint class 3 capabilities NETWORK_CONNECTIVITY - the
        device has network connectivity device capabilities NOT_DEFINED         
        - the device has capabilities not covered by any of the LLDP-MED classes
      type: string
      enum:
        - ENDPOINT_CLASS_1
        - ENDPOINT_CLASS_2
        - ENDPOINT_CLASS_3
        - NETWORK_CONNECTIVITY
        - NOT_DEFINED
    LldpNeighborXMedInventory:
      description: The LLDP neighbor MED inventory state information.
      type: object
      properties:
        assetId:
          description: >-
            The vendor-specific asset tracking identifier as advertised by the
            remote endpoint. For details see ANSI/TIA-1057, Section 10.2.6.7.
          type: string
          readOnly: true
        firmwareRev:
          description: >-
            The vendor-specific firmware revision string as advertised by the
            remote endpoint. For details see ANSI/TIA-1057, Section 10.2.6.2.
          type: string
          readOnly: true
        hardwareRev:
          description: >-
            The vendor-specific hardware revision string as advertised by the
            remote endpoint. For details see ANSI/TIA-1057, Section 10.2.6.1.
          type: string
          readOnly: true
        mfgName:
          description: >-
            The vendor-specific manufacturer name as advertised by the remote
            endpoint. For details see ANSI/TIA-1057, Section 10.2.6.5.
          type: string
          readOnly: true
        modelName:
          description: >-
            The vendor-specific model name as advertised by the remote endpoint.
            For details see ANSI/TIA-1057, Section 10.2.6.6.
          type: string
          readOnly: true
        serialNum:
          description: >-
            The vendor-specific serial number as advertised by the remote
            endpoint. For details see ANSI/TIA-1057, Section 10.2.6.4.
          type: string
          readOnly: true
        softwareRev:
          description: >-
            The vendor-specific software revision string as advertised by the
            remote endpoint. For details see ANSI/TIA-1057, Section 10.2.6.3.
          type: string
          readOnly: true
    LldpNeighborXMedPolicy:
      description: >-
        The LLDP neighbor MED policy state information as advertised by the
        remote system.
      type: object
      properties:
        appType:
          description: >-
            The media type that defines the primary function of the application
            for the policy advertised by the endpoint connected remotely to this
            port. If type is UNKNOWN, vlanId, priority and dscp attributes
            values are ignored. For details see ANSI/TIA-1057, Section 10.2.3.1
            and 10.2.3.2.
          type: array
          items:
            $ref: '#/components/schemas/PortLldpMedPolicyAppType'
          readOnly: true
        dscp:
          description: >-
            Contains the value of the Differentiated Service Code Point (DSCP)
            as defined in IETF RFC 2474 and RFC 2475 which is associated with
            remote system connected at the port. For details see ANSI/TIA-1057,
            Section 10.2.3.7.
          type: integer
          minimum: 0
          maximum: 63
          readOnly: true
        priority:
          description: >-
            Contains the value of the 802.1p priority which is associated with
            the remote system connected at given port. For details see
            ANSI/TIA-1057, Section 10.2.3.6.
          type: integer
          minimum: 0
          maximum: 7
          readOnly: true
        taggedEnabled:
          description: >-
            A value of 'true' indicates that the application is using a tagged
            VLAN. A value of 'false' indicates that for the specific application
            the device either is using an untagged VLAN or does not support port
            based VLAN operation. In this case, both the vlanId and priority
            attributes are ignored and only the DSCP value has relevance. For
            details see ANSI/TIA-1057, Section 10.2.3.3.
          type: boolean
          readOnly: true
        vlanId:
          description: >-
            An extension of the VLAN Identifier for the remote system connected
            to this port, as defined in IEEE 802.1P-1998. A value of 1 through
            4094 is used to define a valid PVID. A value of 0 shall be used if
            the device is using priority tagged frames, meaning that only the
            802.1p priority level is significant and the default VID of the
            ingress port is being used instead. A value of 4095 is reserved for
            implementation use. For details see ANSI/TIA-1057, Section 10.2.3.5.
          anyOf:
            - $ref: '#/components/schemas/VlanIdNonObject'
            - type: integer
              enum:
                - 0
                - 4095
      required:
        - appType
    PoeDeviceType:
      description: >
        The type of Power-via-MDI (Power over Ethernet) advertised by the remote
        device.

        PD_DEVICE  - the device is advertised as a Powered Device (PD) 

        PSE_DEVICE - the device is advertised as a Power Sourcing Entity (PSE)

        For detailes see ANSI/TIA-1057, Section 10.2.5.1.
      type: string
      enum:
        - NONE
        - PD_DEVICE
        - PSE_DEVICE
        - UNKNOWN
    PowerPriority:
      description: >
        Priority of the port from the point of view of a power management
        algorithm.

        This is used by control mechanism that prevents over current situations
        by 

        disconnecting first ports with lower power priority.

        CRITICAL - power priority is critical, as per RFC 3621

        HIGH     - power priority is high, as per RFC 3621

        LOW      - power priority is low, as per RFC 3621

        For details see ANSI/TIA-1057, Section 10.2.5.3.
      type: string
      enum:
        - CRITICAL
        - HIGH
        - LOW
        - UNKNOWN
    LldpNeighborXMedPoe:
      description: >-
        The LLDP neighbor MED PoE state information as advertised by the remote
        system.
      type: object
      properties:
        deviceType:
          $ref: '#/components/schemas/PoeDeviceType'
        pse:
          description: >-
            Contains extended PoE information as advertised by the remote
            devices of PSE type. Information is relevant only if the
            EXTENDED_PSE capability is present in capSupported and capCurrent
            attributes in LldpNeighborXMed schema and deviceType is PSE_DEVICE.
          type: object
          properties:
            powerAv:
              description: >-
                Contains the value of the power available from the PSE via this
                port expressed in units of 0.1 watts on the remote device. For
                details see ANSI/TIA-1057, Section 10.2.5.4.
              type: integer
              minimum: 0
              maximum: 1023
              readOnly: true
            powerPriority:
              $ref: '#/components/schemas/PowerPriority'
            powerSource:
              description: >-
                Defines the type of PSE Power Source advertised  by the remote
                device. BACKUP  - the device advertises its power source as
                backup PRIMARY - the device advertises its power source as
                primary For details see ANSI/TIA-1057, Section 10.2.5.2.
              type: string
              enum:
                - BACKUP
                - PRIMARY
                - UNKNOWN
              readOnly: true
        pd:
          description: >-
            Contains extended PoE information as advertised by the remote
            devices of PD type. Information is relevant only if the EXTENDED_PD
            capability is present in capSupported and capCurrent attributes in
            LldpNeighborXMed schema and deviceType is PD_DEVICE.
          type: object
          properties:
            powerPriority:
              $ref: '#/components/schemas/PowerPriority'
            powerReq:
              description: >-
                The value of the power required by a PD connected remotely to
                the port expressed in units of 0.1 watts. For details see
                ANSI/TIA-1057, Section 10.2.5.4.
              type: integer
              minimum: 0
              maximum: 1023
              readOnly: true
            powerSource:
              description: >-
                Defines the type of Power Source advertised as being used by the
                device connected remotely to the port. LOCAL     - the device
                advertises its power source as local LOCAL_PSE - the device
                advertises its power source as using both local and PSE power
                PSE       - the device advertises its power source as received
                from a PSE For details see ANSI/TIA-1057, Section 10.2.5.2.
              type: string
              enum:
                - LOCAL
                - LOCAL_PSE
                - PSE
                - UNKNOWN
              readOnly: true
    LldpNeighborXMed:
      description: The LLDP neighbor MED state information.
      type: object
      properties:
        capSupported:
          description: >-
            MED organizationally defined set of LLDP TLVs whose transmission is
            possible on the LLDP agent of the remote device connected to this
            port. Each bit in the bitmap corresponds to an LLDP-MED subtype
            associated with a specific TIA TR41.4 MED optional TLV. For details
            see ANSI/TIA-1057, Sections 10.2.2.1.
          type: array
          items:
            $ref: '#/components/schemas/LldpXMedCapability'
        capCurrent:
          description: >-
            MED organizationally defined set of LLDP TLVs whose transmission is
            possible on the LLDP agent of the remote device connected to this
            port. Each TLV type corresponds to a specific TIA TR41.4 MED
            optional TLV. For details see ANSI/TIA-1057, Sections 10.2.2.1.
          type: array
          items:
            $ref: '#/components/schemas/LldpXMedCapability'
        deviceClass:
          description: >-
            Device Class as advertised by the device remotely connected to the
            port. For details see ANSI/TIA-1057, Section 10.2.2.2.
          allOf:
            - $ref: '#/components/schemas/LldpXMedDeviceClass'
        inventory:
          $ref: '#/components/schemas/LldpNeighborXMedInventory'
        location:
          $ref: '#/components/schemas/PortLldpLocation'
        policyList:
          description: >-
            Policy information per policy type for a particular physical network
            connection.
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborXMedPolicy'
        poe:
          $ref: '#/components/schemas/LldpNeighborXMedPoe'
    LldpNeighborOrgDefInfo:
      description: Organizationally defined information advertised by the remote system.
      type: object
      properties:
        index:
          description: >-
            An arbitrary local integer value used  to identify a particular
            unrecognized organizationally defined information instance. This
            value is unique per oui and subtype on the same remote system.
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
        oui:
          description: >-
            The Organizationally Unique Identifier (OUI), as defined in IEEE std
            802-2001, is a 24 bit (three octets) globally unique assigned number
            referenced by various standards, of the information received from
            the remote system. For details see IEEE 802.1AB-2005 9.5.1.3.
          type: string
          readOnly: true
        subtype:
          description: >-
            The integer value used to identify the subtype of the
            organizationally defined information received from the remote
            system. For detils see IEEE 802.1AB-2005 9.5.1.4.
          type: integer
          minimum: 1
          maximum: 255
          readOnly: true
        value:
          description: >-
            The string value used to identify the organizationally defined
            information of the remote system. For details see IEEE 802.1AB-2005
            9.5.1.5.
          type: string
          readOnly: true
      required:
        - index
        - oui
        - subtype
    LldpPortId:
      description: >
        String value used to identify the port component associated with the
        remote system as defined by IEEE 802.1AB-2005 9.5.3.3.
      type: string
      minLength: 1
      maxLength: 255
      readOnly: true
    LldpPortIdSubtype:
      description: >
        The type of port identifier encoding used in the associated LldpPortId
        schema as defined by IEEE 802.1AB-2005 9.5.3.2.
      type: string
      enum:
        - AGENT_CIRCUIT_ID
        - INTERFACE_ALIAS
        - INTERFACE_NAME
        - LOCAL
        - PORT_COMPONENT
        - MAC_ADDRESS
        - NETWORK_ADDRESS
        - UNKNOWN
      readOnly: true
    LldpSystemCapability:
      description: >-
        The LLDP system capabilities. BRIDGE       - indicates that the system
        has bridge capability. DOCSIS       - indicates that the system has
        DOCSIS Cable Device capability (IETF RFC 2669 & 2670). OTHER        -
        indicates that the system has capabilities other than those listed in
        this schema. REPEATER     - indicates that the system has repeater
        capability. ROUTER       - indicates that the system has router
        capability. WLAN_AP      - indicates that the system has WLAN access
        point capability. STATION_ONLY - indicates that the system has only
        station capability and nothing else. TELEPHONE    -  indicates that the
        system has telephone capability.
      type: string
      enum:
        - BRIDGE
        - DOCSIS
        - OTHER
        - REPEATER
        - ROUTER
        - WLAN_AP
        - STATION_ONLY
        - TELEPHONE
    LldpUnknownTlv:
      description: >-
        Information about an unrecognized TLV received from a physical network
        connection. For details see IEEE 802.1AB-2005 10.3.2.
      type: object
      properties:
        tlvInfo:
          description: >-
            The value extracted from the value field of the TLV. For details see
            IEEE 802.1AB-2005 10.3.5.
          type: integer
          minimum: 0
          maximum: 511
          readOnly: true
        tlvType:
          description: >-
            The value extracted from the type field of the TLV. For details see
            IEEE 802.1AB-2005 10.3.5.
          type: integer
          minimum: 9
          maximum: 126
          readOnly: true
      required:
        - tlvInfo
        - tlvType
    LldpNeighborZtfTunnelGroup:
      description: >-
        The LLDP neighbor ZTF (Auto-Sense) tunnel group state information as
        advertised by the remote system.
      type: object
      properties:
        enabled:
          description: Enabled state.
          type: boolean
          readOnly: true
        destinationTunnelList:
          description: Destination tunnels list.
          type: array
          items:
            $ref: '#/components/schemas/Ipv4AddressNonObject'
          readOnly: true
        id:
          description: Group identifier.
          type: integer
          readOnly: true
        metric:
          description: Metric.
          type: integer
          format: int64
          minimum: 0
          maximum: 4294967295
    LldpNeighborZtf:
      description: >-
        The LLDP neighbor ZTF (Auto-Sense) state information as advertised by
        the remote system. This schema is supported by Fabric Engine only.
      type: object
      properties:
        fabricExtendAuth:
          description: Advertised fabric extend authentication state.
          type: string
          enum:
            - OK
            - FAILED
            - UNKNOWN
          readOnly: true
        gatewayIpAddress:
          description: Advertised gateway IP address.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Ipv4AddressNonObject'
        localIpAddress:
          description: Advertised local IP address and mask.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Ipv4AddressMask0'
        mtu:
          description: Advertised Maximum Transmission Unit.
          type: integer
          readOnly: true
        tunnelGroupList:
          description: Advertised tunnel groups information.
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborZtfTunnelGroup'
          readOnly: true
    LldpNeighborBasic:
      description: The LLDP neighbor state information.
      type: object
      properties:
        chassisId:
          $ref: '#/components/schemas/LldpChassisId'
        chassisIdSubtype:
          $ref: '#/components/schemas/LldpChassisIdSubtype'
        dot3:
          $ref: '#/components/schemas/LldpNeighborXDot3'
        fabricAttach:
          $ref: '#/components/schemas/LldpNeighborFabricAttach'
        ipAddressList:
          description: The neighbor IP address list.
          type: array
          items:
            type: string
          readOnly: true
        managementAddressList:
          description: Management addresses of the remote system.
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborManagementAddress'
        med:
          $ref: '#/components/schemas/LldpNeighborXMed'
        orgDefInfoList:
          description: >-
            Organizationally defined information. This setting applies to Switch
            Engine only.
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborOrgDefInfo'
        portDesc:
          description: >-
            String value used to identify the description of the given port
            associated with the remote system as defined by IEEE 802.1AB-2005
            9.5.5.2.
          type: string
          maxLength: 255
          readOnly: true
        portId:
          $ref: '#/components/schemas/LldpPortId'
        portIdSubtype:
          $ref: '#/components/schemas/LldpPortIdSubtype'
        sysCapSupported:
          description: The list of system capabilities supported on the remote system.
          type: array
          items:
            $ref: '#/components/schemas/LldpSystemCapability'
        sysCapEnabled:
          description: The list of system capabilities enabled on the remote system.
          type: array
          items:
            $ref: '#/components/schemas/LldpSystemCapability'
        sysDesc:
          description: >-
            The string value used to identify the system description of the
            remote system as defined by IEEE 802.1AB-2005 9.5.7.2
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        sysName:
          description: >-
            The string value used to identify the system name of the remote
            system as defined by IEEE 802.1AB-2005 9.5.6.2.
          type: string
          minLength: 0
          maxLength: 255
          readOnly: true
        unknownTlvList:
          description: >-
            Information about incoming TLVs which are not recognized. This
            setting applies to Switch Engine only.
          type: array
          items:
            $ref: '#/components/schemas/LldpUnknownTlv'
        ztf:
          $ref: '#/components/schemas/LldpNeighborZtf'
    LldpNeighbor:
      description: The LLDP neighbor state information.
      allOf:
        - $ref: '#/components/schemas/LldpNeighborKey'
        - $ref: '#/components/schemas/LldpNeighborBasic'
    LldpNeighborList:
      type: array
      items:
        $ref: '#/components/schemas/LldpNeighbor'
    LldpState:
      description: The LLDP state information.
      allOf:
        - type: object
          description: LLDP state information
          properties:
            neighbors:
              $ref: '#/components/schemas/LldpNeighborList'
    LldpNeighborKeyPerPort:
      description: The LLDP neighbor key information for a particular port.
      type: object
      properties:
        index:
          description: >-
            An arbitrary local integer value used to identify a particular
            connection instance, unique only for the indicated remote system.
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int32
          readOnly: true
        timeMark:
          description: TimeFilter value as defined by IETF RFC 2021 section 6.
          type: integer
          readOnly: true
    LldpNeighborPerPort:
      description: The LLDP neighbor state information for a particular port.
      allOf:
        - $ref: '#/components/schemas/LldpNeighborKeyPerPort'
        - $ref: '#/components/schemas/LldpNeighborBasic'
    LldpStatePerPort:
      description: The LLDP state information for a particular port.
      allOf:
        - type: object
          description: LLDP state information for a port
          properties:
            neighbors:
              type: array
              items:
                $ref: '#/components/schemas/LldpNeighborPerPort'
    MacLockingGlobalSettings:
      description: The global settings for the MAC-locking feature.
      type: object
      properties:
        enabled:
          description: >-
            A value of true indicates MAC-locking is globally enabled on this
            switch.
          type: boolean
      required:
        - enabled
    MacLockingPortSettings:
      description: MAC-locking settings per port.
      type: object
      properties:
        enabled:
          description: A value of true indicates to enable MAC-locking on this port.
          type: boolean
        maxFaLearnLimit:
          description: >-
            Maximum first arrival MAC addresses allowed to communicate on this
            port.
          type: integer
          minimum: 0
          maximum: 600
        shutDownOnLimit:
          description: >-
            A value of true indicates MAC-locking should disable this port when
            the maximum first arrival limit is exceeded.
          type: boolean
        linkDownAction:
          description: MAC-locking action when port goes down.
          type: string
          $ref: '#/components/schemas/LinkDownAction'
          example: CLEAR_FIRST_ARRIVAL_MACS
        removeAgedMacs:
          description: >-
            A value of true indicates MAC-locking should remove learned MAC
            Addresses when they age out of the switch forwarding database.
          type: boolean
      required:
        - enabled
    MacLockingPortState:
      description: MAC-locking state for this port.
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        limitActionDisabled:
          description: >-
            A value of true indicates this port has been disabled by
            MAC-locking.
          type: boolean
        firstArrivalCount:
          description: Number of first arrival MACs learned on the port.
          type: integer
          minimum: 0
          maximum: 600
          example: 123
        violatingMacs:
          description: Violating MACs on this port.
          type: array
          items:
            $ref: '#/components/schemas/MacAddressNonObject'
      required:
        - portName
        - limitActionDisabled
        - violatingMacs
    MacLockingState:
      description: State of MAC-locking for all ports on the device.
      type: array
      items:
        $ref: '#/components/schemas/MacLockingPortState'
    MlagPeerSettings:
      description: A list containing the MLAG peers configured on the device.
      type: array
      items:
        $ref: '#/components/schemas/MlagPeerConfig'
    MlagPeerConfigCreateObject:
      allOf:
        - $ref: '#/components/schemas/MlagPeerId'
        - $ref: '#/components/schemas/MlagPeerBasic'
    MlagPeerUpdate:
      allOf:
        - $ref: '#/components/schemas/MlagPeerBasic'
        - $ref: '#/components/schemas/MlagPeerObject'
    MlagRsmltInstanceSettings:
      description: RSMLT instance configuration
      type: object
      properties:
        enabled:
          description: The admin enabled setting of RSMLT instance.
          type: boolean
        holdUpTimer:
          description: >-
            The range of value is 0 to 3600 or 9999. 9999 means infinity. The
            time period is in seconds.
          anyOf:
            - type: integer
              minimum: 0
              maximum: 3600
            - type: integer
              enum:
                - 9999
          default: 0
        holdDownTimer:
          description: >-
            Timer value, the range of value is from 0 to 3600. The time period
            is in seconds.
          type: integer
          minimum: 0
          maximum: 3600
          default: 0
    MlagRsmltVlanList:
      description: Configuration of all RSMLT instances for a particular VLAN
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            rsmltInstances:
              description: The list of RSMLT instances
              type: array
              items:
                $ref: '#/components/schemas/MlagRsmltInstanceSettings'
    MlagRsmltSettings:
      description: List of all RSMLT instances from all VLANs.
      type: array
      items:
        $ref: '#/components/schemas/MlagRsmltVlanList'
    MlagPeerChkptState:
      description: Checkpointing status of the MLAG peer
      type: string
      enum:
        - UNKNOWN
        - DOWN
        - UP
    MlagPeerCounters:
      description: MLAG peer counters
      type: object
      properties:
        helloRx:
          description: Receive counter for hello packets
          type: integer
        helloTx:
          description: Transmit counter for hello packets
          type: integer
        helloTimeouts:
          description: >
            For Switch Engine (EXOS) - Number of times the hello packet detect
            timer has expired.

            For Fabric Engine (VOSS) - Inter-Switch Trunk down.
          type: integer
        checkpointRx:
          description: Aggregated value for receive messages - Switch Engine (EXOS) only
          type: integer
        checkpointTx:
          description: Transmit counter for transmit messages - Switch Engine (EXOS) only
          type: integer
        learnMacAddressTx:
          description: >
            The number of MAC addresses sent over VIST - Fabric Engine (VOSS)
            only.
          type: integer
        learnMacAddressRx:
          description: >
            The number of MAC addresses received over VIST - Fabric Engine
            (VOSS) only.
          type: integer
        macAddressAgeoutTx:
          description: |
            The number of MAC addresses ageout sent - Fabric Engine (VOSS) only.
          type: integer
        macAddressAgeoutRx:
          description: >
            The number of MAC addresses ageout received - Fabric Engine (VOSS)
            only.
          type: integer
        macAddressExpiredTx:
          description: >
            The number of MAC addresses expired sent - Fabric Engine (VOSS)
            only.
          type: integer
        macAddressExpiredRx:
          description: >
            The number of MAC addresses expired received - Fabric Engine (VOSS)
            only.
          type: integer
        deleteMacAddressTx:
          description: >
            The number of MAC address delete messages sent - Fabric Engine
            (VOSS) only.
          type: integer
        deleteMacAddressRx:
          description: >
            The number of MAC address delete messages received - Fabric Engine
            (VOSS) only.
          type: integer
        smltDownTx:
          description: |
            The number of SMLT down messages sent - Fabric Engine (VOSS) only.
          type: integer
        smltDownRx:
          description: >
            The number of SMLT down messages received - Fabric Engine (VOSS)
            only.
          type: integer
        smltUpTx:
          description: |
            The number of SMLT up messages sent - Fabric Engine (VOSS) only.
          type: integer
        smltUpRx:
          description: |
            The number of SMLT up messages received - Fabric Engine (VOSS) only.
          type: integer
        sendMacAddressTx:
          description: >
            The number of send MAC address messages sent - Fabric Engine (VOSS)
            only.
          type: integer
        sendMacAddressRx:
          description: >
            The number of send MAC address messages received - Fabric Engine
            (VOSS) only.
          type: integer
        igmpTx:
          description: |
            The number of IGMP messages sent - Fabric Engine (VOSS) only.
          type: integer
        igmpRx:
          description: |
            The number of IGMP messages received - Fabric Engine (VOSS) only.
          type: integer
        portDownTx:
          description: |
            The number of port down messages sent - Fabric Engine (VOSS) only.
          type: integer
        portDownRx:
          description: >
            The number of port down messages received - Fabric Engine (VOSS)
            only.
          type: integer
        requestMacTableTx:
          description: >
            The number of request MAC table messages sent - Fabric Engine (VOSS)
            only.
          type: integer
        requestMacTableRx:
          description: >
            The number of request MAC table received - Fabric Engine (VOSS)
            only.
          type: integer
        unknownMessageRx:
          description: |
            The number of unknown message received - Fabric Engine (VOSS) only.
          type: integer
        mltTableSyncRequestTx:
          description: >
            The number of MLT table sync requests sent - Fabric Engine (VOSS)
            only.
          type: integer
        mltTableSyncRequestRx:
          description: >
            The number of MLT table sync requests received - Fabric Engine
            (VOSS) only.
          type: integer
        mltTableSyncTx:
          description: |
            The number of MLT table sync sent - Fabric Engine (VOSS) only.
          type: integer
        mltTableSyncRx:
          description: |
            The number of MLT table sync received - Fabric Engine (VOSS) only.
          type: integer
        portUpdateTx:
          description: |
            The number of port update messages sent - Fabric Engine (VOSS) only.
          type: integer
        portUpdateRx:
          description: >
            The number of port update messages received - Fabric Engine (VOSS)
            only.
          type: integer
        entryUpdateTx:
          description: >
            The number of entry update messages sent - Fabric Engine (VOSS)
            only.
          type: integer
        entryUpdateRx:
          description: >
            The number of entry update messages received - Fabric Engine (VOSS)
            only.
          type: integer
        dialectNegotiateTx:
          description: >
            The number of dialect negotiate messages sent - Fabric Engine (VOSS)
            only.
          type: integer
        dialectNegotiateRx:
          description: >
            The number of dialect negotiate messages received - Fabric Engine
            (VOSS) only.
          type: integer
        updateResponseTx:
          description: |
            The number of update response sent - Fabric Engine (VOSS) only.
          type: integer
        updateResponseRx:
          description: |
            The number of update response received - Fabric Engine (VOSS) only.
          type: integer
        transactionQueueHighWatermark:
          description: >
            The number of transaction queue high watermark messages - Fabric
            Engine (VOSS) only.
          type: integer
        pollCountHighWatermark:
          description: |
            The number of poll count high watermark - Fabric Engine (VOSS) only.
          type: integer
    MlagPeerStateObject:
      description: MLAG peer state object
      type: object
      properties:
        localIdentifier:
          description: >
            For Fabric Engine (VOSS) this represents the ISIS system-id. 

            For Switch Engine (EXOS) this represents the MAC address of the
            switch.
          type: string
        peerIdentifier:
          description: >
            For Fabric Engine (VOSS) this represents the ISIS SPBM SMLT peer`s
            system-id for the SPBM instance. 

            For Switch Engine (EXOS) this represents the MAC address of the
            peer.
          type: string
        chkptState:
          $ref: '#/components/schemas/MlagPeerChkptState'
        upTime:
          description: Number of seconds since the MLAG peer was UP - Switch Engine (EXOS)
          type: integer
        localIpAddress:
          description: >-
            IP address of the local MLAG device - IPv4 or IPv6 for Switch Engine
            (EXOS), IPv4 only for Fabric Engine (VOSS)
          allOf:
            - $ref: '#/components/schemas/GeneralIpAddress'
        localVlanId:
          description: VLAN identifier of Inter-Switch Connection
          type: integer
          format: int32
        smltSplitBeb:
          description: Role in VIST pair - Fabric Engine (VOSS) only
          type: string
          enum:
            - PRIMARY
            - SECONDARY
        mltVistState:
          description: >-
            The status of the MLT used for the Inter-Switch Connection in
            Simplified VIST - Fabric Engine (VOSS) only
          type: string
          enum:
            - NORMAL_MLT
            - VIRTUAL_IST_MLT
        counters:
          $ref: '#/components/schemas/MlagPeerCounters'
    MlagPeerState:
      allOf:
        - $ref: '#/components/schemas/MlagPeerId'
        - $ref: '#/components/schemas/MlagPeerBasic'
        - $ref: '#/components/schemas/MlagPeerStateObject'
    MlagPeerStateList:
      description: A list containing the MLAG peers with their state information.
      type: array
      items:
        $ref: '#/components/schemas/MlagPeerState'
    MlagPortLinkState:
      description: Link status
      type: string
      enum:
        - UNKNOWN
        - DISABLED
        - DOWN
        - UP
    MlagPortCounters:
      description: MLAG port counters
      type: object
      properties:
        localLinkFailures:
          description: >-
            Number of times the local MLAG link was down - Switch Engine (EXOS)
            only
          type: integer
        remoteLinkFailures:
          description: >-
            Number of times the remote MLAG link was down - Switch Engine (EXOS)
            only
          type: integer
    MlagPortStateObject:
      description: MLAG port state object
      type: object
      properties:
        localLinkState:
          description: Status of local MLAG link - Switch Engine (EXOS) only
          allOf:
            - $ref: '#/components/schemas/MlagPortLinkState'
        remoteLinkState:
          description: Status of remote MLAG link - Switch Engine (EXOS) only
          allOf:
            - $ref: '#/components/schemas/MlagPortLinkState'
        mltSmltState:
          description: Operational status of the MLT - Fabric Engine (VOSS) only
          type: string
          enum:
            - NORMAL_MLT
            - SPLIT_MLT
        counters:
          $ref: '#/components/schemas/MlagPortCounters'
    MlagPortState:
      allOf:
        - $ref: '#/components/schemas/MlagPortConfig'
        - $ref: '#/components/schemas/MlagPortStateObject'
    MlagPortStateList:
      description: A list containing the MLAG ports with their state information.
      type: array
      items:
        $ref: '#/components/schemas/MlagPortState'
    MlagRsmltLocalInstanceState:
      description: RSMLT state information
      type: object
      properties:
        holdUpTimer:
          description: >-
            The range of value is 0 to 3600 or 9999. 9999 means infinity. The
            time period is in seconds.
          anyOf:
            - type: integer
              minimum: 0
              maximum: 3600
            - type: integer
              enum:
                - 9999
          default: 0
        holdDownTimer:
          description: >-
            Timer value, the range of value is from 0 to 3600. The time period
            is in seconds.
          type: integer
          minimum: 0
          maximum: 3600
          default: 0
        macAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        operationStatus:
          description: The operation status of RSMLT instance.
          type: string
          enum:
            - UP
            - DOWN
          readOnly: true
        smltId:
          type: integer
          minimum: 1
          maximum: 512
          readOnly: true
    MlagRsmltLocalVlanListState:
      description: Configuration of all RSMLT Local instances.
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            rsmltInstancesState:
              description: The list of RSMLT Local settings
              type: array
              items:
                $ref: '#/components/schemas/MlagRsmltLocalInstanceState'
    MlagRsmltInstanceReadOnlySettings:
      description: RSMLT instances read-only configuration
      type: object
      properties:
        holdUpTimeRemaining:
          description: >-
            The time value that indicates the remaining time of HoldUpTimer. The
            time period is in seconds.
          anyOf:
            - type: integer
              minimum: 0
              maximum: 3600
            - type: integer
              enum:
                - 9999
          default: 0
          readOnly: true
        holdDownTimeRemaining:
          description: >-
            The time value that indicates the remaining time of HoldDownTimer.
            The time period is in seconds.
          type: integer
          minimum: 0
          maximum: 3600
          default: 0
          readOnly: true
        macAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        operationStatus:
          description: The operation status of RSMLT instance.
          type: string
          enum:
            - UP
            - DOWN
          readOnly: true
        smltId:
          type: integer
          minimum: 1
          maximum: 512
          readOnly: true
    MlagRsmltPeerInstanceState:
      description: RSMLT state information
      type: object
      allOf:
        - $ref: '#/components/schemas/MlagRsmltInstanceSettings'
        - $ref: '#/components/schemas/MlagRsmltInstanceReadOnlySettings'
    MlagRsmltPeerVlanListState:
      description: State information for all RSMLT Peer instances.
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            rsmltInstancesState:
              description: The list of RSMLT Peer instances
              type: array
              items:
                $ref: '#/components/schemas/MlagRsmltPeerInstanceState'
    MlagRsmltState:
      description: State information of all RSMLT instances.
      allOf:
        - type: object
          description: RSMLT state information
          properties:
            rsmltLocalInfo:
              type: array
              items:
                $ref: '#/components/schemas/MlagRsmltLocalVlanListState'
            rsmltPeerInfo:
              type: array
              items:
                $ref: '#/components/schemas/MlagRsmltPeerVlanListState'
    NodeAliasProtocols:
      description: |
        Specifies the protocols enabled for node alias feature to detect.
        For Switch Engine, there are some protocols that are enabled by 
        default: IPv4, IPv6, OSPF, BGP, VRRP, DHCPS, DHCPC, BOOTPS, 
        BOOTPC, UDP, BPDU, LLMNR, SSDP, and mDNS.
      type: string
      enum:
        - IPv4
        - IPv6
        - OSPF
        - BGP
        - VRRP
        - DHCPS
        - DHCPC
        - BOOTPS
        - BOOTPC
        - UDP
        - BPDU
        - LLMNR
        - SSDP
        - M_DNS
    NodeAliasUpdateSettings:
      description: The node alias update settings for global settings.
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/NodeAliasProtocols'
        enabled:
          description: Specifies the global state of node alias protocols.
          type: boolean
          default: true
    NodeAliasSettingsPerPort:
      description: The node alias settings per port
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
        maxEntries:
          description: |
            Designates a maximum number of alias entries per port.
            The default is 8192 divided evenly by the number of ports 
            on the slot. If the maximum alias entries is changed to a 
            value less than the number of entries in the database, 
            the most recent entries are retained.
          type: integer
          minimum: 1
          maximum: 8192
        enabled:
          description: A value of True will enable the node alias feature on the port.
          type: boolean
          default: false
    NodeAliasSettings:
      description: The node alias settings
      type: object
      properties:
        protocols:
          type: array
          items:
            $ref: '#/components/schemas/NodeAliasUpdateSettings'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/NodeAliasSettingsPerPort'
    NodeAliasStateSettingsPerPort:
      description: The node alias settings per ports
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
        maxEntries:
          description: |
            Designates a maximum number of alias entries per port.
            The default is 8192 divided evenly by the number of ports 
            on the switch. If the maximum alias entries is changed to a 
            value less than the number of entries in the database, 
            the most recent entries are retained.
          type: integer
          minimum: 1
          maximum: 8192
        activeEntries:
          description: Number of active alias entries per port.
          type: integer
    NodeAliasStateSettings:
      description: The node alias state settings
      type: object
      properties:
        maxEntries:
          description: >-
            Total number of entries learned through node alias feature on the
            switch.
          type: integer
          readOnly: true
        activeEntries:
          description: >-
            Total number of active entries learned through the node alias
            feature on the switch.
          type: integer
          readOnly: true
        purgeTime:
          description: >-
            Last time an entry was purged from the node alias table on the
            switch.
          type: string
          format: time
          readOnly: true
        state:
          description: State of the node alias table on the switch.
          type: string
          enum:
            - NOT_STARTED
            - READY
            - FULL
          readOnly: true
        enabledPorts:
          type: array
          items:
            $ref: '#/components/schemas/NodeAliasStateSettingsPerPort'
    NodeAliasDatabaseBasic:
      description: The node alias database entries basic settings.
      type: object
      properties:
        timeLastLearned:
          description: Last time and date this entry was learned.
          type: string
          format: date-time
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        protocol:
          $ref: '#/components/schemas/NodeAliasProtocols'
        sourceIp:
          $ref: '#/components/schemas/IpAddress'
    NodeAliasDatabase:
      description: The node alias database entries.
      allOf:
        - $ref: '#/components/schemas/PortNameObject'
        - $ref: '#/components/schemas/MacAddress'
        - $ref: '#/components/schemas/NodeAliasDatabaseBasic'
    NodeAliasDatabaseClear:
      description: The node alias database clear entries.
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortName'
    OspfUpdateSettings:
      description: Per VR OSPF updateable settings
      type: object
      properties:
        enable:
          description: Enabled state of OSPF on the VRF
          type: boolean
        routerId:
          description: >
            The router ID for this OSPF instance in the form of an IPv4 address.

            A value of 0.0.0.0 (or unset) indicates that the router ID is
            autoderived.

            For Switch Engine the derived value is based on the interface IP
            addresses

            configured on the system. At least one interface IP address must be
            configured

            before OSPF can be enabled. For Fabric Engine the value is derived
            from the

            chassis MAC address.
          type: string
          format: ipv4
        isBoundaryRouter:
          description: >
            A value of true indicates this is an area boundary router. The value
            of this

            parameter is dynamically determined by the protocol and is not
            settable.
          type: boolean
          readOnly: true
        holdTime:
          description: >
            The minimum number of seconds between Shortest Path First (SPF)
            calculations.

            For Fabric Engine the range is 0, 3-60 seconds (default 10 seconds).

            For Switch Engine the range is 0-300 seconds (default 3 seconds).
          type: integer
          minimum: 0
          maximum: 300
        originate:
          $ref: '#/components/schemas/OspfOriginate'
    OspfUpdateSettingsWithVr:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/OspfUpdateSettings'
    OspfAreaUpdateSettings:
      description: OSPF area update settings
      type: object
      properties:
        enable:
          description: |
            Enabled state of the OSPF area. This parameter is settable in
            Fabric Engine but is not settable in Switch Engine.
          type: boolean
    VlanIdObject:
      type: object
      description: This object represents a VLAN ID object
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    OspfInterfaceStateValues:
      description: The OSPF interface state values
      type: string
      enum:
        - UNKNOWN
        - DOWN
        - WAITING
        - P2P
        - DR
        - BDR
        - ODR
    OspfNeighborStateValues:
      description: The OSPF neighbor state values
      type: string
      enum:
        - UNKNOWN
        - DOWN
        - ATTEMPT
        - INIT
        - 2WAY
        - EX_START
        - EXCHANGE
        - LOADING
        - FULL
    OspfNeighborStateObject:
      type: object
      description: This object represents the state object of an OSPF neighbor
      properties:
        ipAddress:
          description: The IP address of the OSPF neighbor
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        routerId:
          description: The router ID of the OSPF neighbor
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        state:
          $ref: '#/components/schemas/OspfNeighborStateValues'
        uptime:
          description: The time in seconds since the neighbor was declared up
          type: integer
    OspfInterfaceStateObject:
      type: object
      description: This object represents the state object of an OSPF interface
      properties:
        ipAddress:
          description: The OSPF interface IP address
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        state:
          $ref: '#/components/schemas/OspfInterfaceStateValues'
        area:
          description: The area ID for the interface
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        cost:
          description: >
            The OSPF cost associated with this interface and advertised in
            router link advertisements.
          type: integer
          minimum: 0
          maximum: 65535
        DRRouterId:
          description: The router ID of the Designated Router
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        DRIpAddress:
          description: The IP address of the Designated Router
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        BDRRouterId:
          description: The router ID of the Border Designated Router
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        BDRIpAddress:
          description: The IP address of the Border Designated Router
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        neighbors:
          description: The list of OSPF neighbors on this interface
          type: array
          items:
            $ref: '#/components/schemas/OspfNeighborStateObject'
    OspfInterfaceStateVlanObject:
      type: object
      description: State information for an OSPF interface including its VLAN
      allOf:
        - $ref: '#/components/schemas/VlanIdObject'
        - $ref: '#/components/schemas/OspfInterfaceStateObject'
    OspfInterfaceStateList:
      type: object
      description: State information for all OSPF interfaces on the VRF
      properties:
        ospfInterfaceStateList:
          type: array
          items:
            $ref: '#/components/schemas/OspfInterfaceStateVlanObject'
    OspfStateVrObject:
      description: State information for a virtual router OSPF instance
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/OspfInterfaceStateList'
    OspfStateVrList:
      description: State information for all OSPF interfaces on all the VRFs
      type: array
      items:
        $ref: '#/components/schemas/OspfStateVrObject'
    PortPowerState:
      description: Power port state
      type: object
      properties:
        powerUsed:
          description: Measured usage power expressed in Watts
          type: number
          format: float
        class:
          description: |
            Class assigned to each port based on their power consumption.
            Fabric Engine(VOSS) supports only classes 0-4.
          type: string
          enum:
            - CLASS0
            - CLASS1
            - CLASS2
            - CLASS3
            - CLASS4
            - CLASS5
            - CLASS6
            - CLASS7
            - CLASS8
        state:
          description: |
            The operational status of the port detection.
            Fabric Engine (VOSS) does not provide support for DISCOVERED,
            DISCONNECTED and DENIED values.
          type: string
          enum:
            - DISABLED
            - SEARCHING
            - DISCOVERED
            - DELIVERING
            - FAULTED
            - DISCONNECTED
            - OTHER
            - DENIED
            - TEST
    PortPowerStateListComponent:
      description: Power port state component for port list
      allOf:
        - $ref: '#/components/schemas/PortPowerState'
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/PortName'
    PolicyRoleGetObject:
      allOf:
        - $ref: '#/components/schemas/PolicyRoleUpdateObject'
    AclEntryList:
      description: |
        A list of access-list entries.
      type: array
      items:
        $ref: '#/components/schemas/AclEntry'
    AppPatternList:
      description: >
        This object represents a pattern list for a particular application

        signature group. A custom display name can be created with a list of
        patterns. The built

        in display names can not be modified however the group name and display

        name combination can be referenced as a match criterion in a policy
        access-list.
      type: object
      properties:
        groupDisplayNamePattern:
          description: >
            A string consisting of a space separated list of patterns associated
            with the application

            signature group and display name.
          type: string
          minLength: 1
          maxLength: 256
          example: google.com sample.com advert1.com
    PolicyStateParameters:
      description: Policy state parameters
      type: object
      properties:
        invalidCount:
          type: integer
          readOnly: true
          description: Number of times the device has detected an invalid/unknown policy
    PolicyAccessListCounters:
      description: >
        This object contains a policy access-list entry name and the number of
        packets

        that match the entry.
      type: object
      properties:
        name:
          description: >
            The name of the access-list entry.  This name must be unique within
            a

            parent access-list.  For Switch Engine this name corresponds to the

            portion after the decimal (aclEntryName) in the format
            aclName.aclEntryName
          type: string
          minLength: 1
          maxLength: 32
          readOnly: true
        aclEntryMatchCount:
          description: |
            The number of incoming packets which match the access-list entry.
          type: integer
          format: int64
          readOnly: true
    AclCounterList:
      description: >
        The list of access-list entry names for a particular access-list and the
        packet match counter for each entry.
      type: array
      items:
        $ref: '#/components/schemas/PolicyAccessListCounters'
    QosQueueStatistics:
      description: QoS queue statistics
      type: object
      properties:
        qosQueue:
          description: >
            QOS queue value. Values of 1 through 8 correspond to QOS profiles
            QP1 through Q8 respectively.
          type: integer
          minimum: 1
          maximum: 8
        txPkts:
          description: |
            Number of packets transmitted on the QOS queue.
          type: integer
          format: int64
          readOnly: true
        congPkts:
          description: |
            Number of packets dropped due to congestion on the QOS queue.
          type: integer
          format: int64
          readOnly: true
    PortQosState:
      description: QoS port state
      type: object
      properties:
        queueStats:
          type: array
          items:
            $ref: '#/components/schemas/QosQueueStatistics'
          minItems: 1
          maxItems: 8
    PortQosStateListComponent:
      description: QOS port state component for port list
      allOf:
        - $ref: '#/components/schemas/PortQosState'
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/PortName'
    StateSettings:
      description: RADIUS state attributes
      type: object
      properties:
        numOfInvalidServerAccess:
          description: >-
            Number of Access Responses from unknown or invalid Radius servers.
            (Fabric Engine only)
          type: integer
          readOnly: true
    RadiusSecureProfileGet:
      description: Certificate profile get configuration for Secure RADIUS use.
      type: object
      allOf:
        - $ref: '#/components/schemas/RadiusCertsHashes'
        - type: object
          properties:
            rootCert:
              description: SSL/TLS root certificate in PEM format.
              type: string
              minLength: 1
              maxLength: 3072
              example: |-
                -----BEGIN CERTIFICATE-----
                MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
                MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
                MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
                BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
                zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
                JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
                9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
                b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
                sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
                cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
                AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
                noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
                /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
                U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
                RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
                WNwl/5Eitlr47E8ecpvahQ5glLrexw==
                -----END CERTIFICATE-----
            cert:
              description: SSL/TLS certificate in PEM format.
              type: string
              minLength: 1
              maxLength: 3072
              example: |-
                -----BEGIN CERTIFICATE-----
                MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
                MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
                MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
                BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
                zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
                JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
                9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
                b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
                sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
                cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
                AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
                noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
                /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
                U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
                RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
                WNwl/5Eitlr47E8ecpvahQ5glLmers==
                -----END CERTIFICATE-----
            status:
              description: >
                Used in GET to convey the presence and match status of
                certificate and private key on the switch. 

                Value KEY_NOT_CONFIGURED indicates the key is not configured on
                the switch. 

                Value CERT_NOT_CONFIGURED indicates the certificate is not
                configured on the switch.

                Value PASSPHRASE_NOT_CONFIGURED indicates that the private key
                passphrase is not configured on the switch.

                Value PASSPHRASE_AND_KEY_NOT_MATCH indicates that passphrase and
                key are present but mismatch.

                Value KEY_AND_CERT_NOT_MATCH indicates both key and certificate
                are present but mismatch. 

                Value PASSPHRASE_AND_KEY_MATCH indicates both passphrase and key
                are present and match.

                Value KEY_AND_CERT_MATCH indicates both key and certificate are
                present and match.

                Value INVALID_ROOT_CERT indicates that an invalid root cert is
                installed on the switch. 

                Value INVALID_CERT indicates that an invalid cert is installed
                on the switch.
              type: array
              items:
                type: string
                enum:
                  - KEY_NOT_CONFIGURED
                  - CERT_NOT_CONFIGURED
                  - PASSPHRASE_NOT_CONFIGURED
                  - PASSPHRASE_AND_KEY_NOT_MATCH
                  - KEY_AND_CERT_NOT_MATCH
                  - PASSPHRASE_AND_KEY_MATCH
                  - KEY_AND_CERT_MATCH
                  - INVALID_ROOT_CERT
                  - INVALID_CERT
    RadiusSecureProfileUpdateSettingsByName:
      description: Certificate profile configuration for Secure RADIUS use.
      type: object
      properties:
        rootCert:
          description: SSL/TLS root certificate in PEM format.
          type: string
          minLength: 1
          maxLength: 3072
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
            MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
            MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
            BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
            zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
            JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
            9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
            b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
            sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
            cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
            AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
            noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
            /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
            U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
            RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
            WNwl/5Eitlr47E8ecpvahQ5glLrexw==
            -----END CERTIFICATE-----
        cert:
          description: SSL/TLS certificate in PEM format.
          type: string
          minLength: 1
          maxLength: 3072
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIC4jCCAcqgAwIBAgIBADANBgkqhkiG9w0BAQ0FADAqMQswCQYDVQQGEwJJTjEN
            MAsGA1UECgwERVhUUjEMMAoGA1UEAwwDREVWMB4XDTIzMDkxMjEzMzg0OFoXDTI0
            MDkxMTEzMzg0OFowKjELMAkGA1UEBhMCSU4xDTALBgNVBAoMBEVYVFIxDDAKBgNV
            BAMMA0RFVjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMPq6VTRI6M5
            zxCwYll3L2jRXQAm2Zb9IX+9PGNWUQxgiMNcddr6mCDQ9Mq9miwPycpIfVxebtyW
            JA17/dH4NGbmOdpgJAZo+7+BAKTxecKDQ92PiosYwv9oB3h3TMdVnJ6rKd5OiTeq
            9k+mzg3gJancHVLN8an+fzyYGFPRFmQ+8v6sovAzGYZE1AHzRAWega0SXQeLPRQ1
            b4gAP8pcmOSyx1ail0JWkmPYKwEGaeIRVNFLhVzmrWV/nu1t89V0OOJbQVrhVgTJ
            sr2in64pELZayn2tuVXaE/kmxE6Y+IPQid8/V3IsPQUUCgZSlIPElq++uVz6eRG8
            cxT9Uc4iqo0CAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQ0F
            AAOCAQEArvYRjiFNVC4/j4NCqQJYBvEEfknSXyClAhTrx/osITZvADspbOuNxdIe
            noiamedtv4rFpru7TTPS5EeAqVaGCYWJIsbak/2FoRFiiju6WVcTtrw8QUsmBNus
            /Rt3zuiWo0CT6i2FCIexIKpvzznDL3w8MrHc7D1UksxwX0ubGclcCddIh4M1WCzC
            U2++LH9eFoqGDOanIoViFL3QSXerRdVB9yx90pqApkMzsQ1dy+A+sYuPTX0Fi2JJ
            RM4PlQ6gBzrKxXLO1ruTGJK/M8OcDw2xWvH8R4N3nvoUTDH5a0Mq9c62lT9dTKqW
            WNwl/5Eitlr47E8ecpvahQ5glLmers==
            -----END CERTIFICATE-----
        key:
          description: SSL/TLS RSA private key in PEM format.
          type: string
          minLength: 1
          maxLength: 3072
          example: |-
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAw+rpVNEjoznPELBiWXcvaNFdACbZlv0hf708Y1ZRDGCIw1x1
            2vqYIND0yr2aLA/Jykh9XF5u3JYkDXv90fg0ZuY52mAkBmj7v4EApPF5woND3Y+K
            ixjC/2gHeHdMx1Wcnqsp3k6JN6r2T6bODeAlqdwdUs3xqf5/PJgYU9EWZD7y/qyi
            8DMZhkTUAfNEBZ6BrRJdB4s9FDVviAA/ylyY5LLHVqKXQlaSY9grAQZp4hFU0UuF
            XOatZX+e7W3z1XQ44ltBWuFWBMmyvaKfrikQtlrKfa25VdoT+SbETpj4g9CJ3z9X
            ciw9BRQKBlKUg8SWr765XPp5EbxzFP1RziKqjQIDAQABAoIBAGPZgKvanxgcaVzv
            GGDSbpY0RfrC0hiyz/TjhDh4kHwHYwx2PhapqwjmliwR79ZPAaAXy9RcyJGh76Pz
            sovlvQdIhOm4IAQoU03puGNYMp8g+WCdPJXhu9ghs9UAsF/TUSxIveDwE90MQ9aa
            g9/sgiWM6mD+VxE1hLFkLtng8VGLIYUnlWleFZocO6L4mQvi095jBgkpAoyrWpvP
            5tgxcLS8wmzFmY802RlN1cUuQlJ0+RaM5JSDc3NQsPrxsi55FvwFhzwS7F2cdZIG
            dk4qXTLQYZqGzxk1XNbcYrDbNy7GOw//muHrIZA0Mf57s9oOA7D409T7L0ehSXhh
            mrza4H0CgYEA/fRJ4IWa2hb3pyzg8cX+kPFCs6sOQKZG29lSfrS7FPzPj1r8n2+v
            HHXunyNYtNgZpOBbXujdmh7SD4Hxdu3FpUfo/ZiowtMgDAYLWzBE1zTN+XpmrA75
            vUhhFK0CMhxYpiCIC1G+xWrSl+48xRk9PkPLP+J4JOehdU2XDqswPO8CgYEAxX7w
            Kf53+Rq3zA88Nwk7L30KTIkr6+ZRbE0ZS/DBTuHAoLifYbtKMJKZQMroeWlpGft8
            CG20UnqWkIyhOvOBj090Gii9RhP06DDVnYB0NrUJC9Kg0CE7k2Yafx0KdEG7rNm6
            YR+LzKMQXmYgef9vOjNt9Cwh5Ixzgdb7Dw2YyEMCgYEA0TuwkpgBmaZKrSZAv3KN
            5wWgGz/YIlPdFc3cNiDZ8tTIfihM81+lOyG/VMZek8Fof3uKTIw36H90Ouqo83+7
            1A2HXUml4b7pLH7eZGdEkLsk6WN7rE86XEWCFvLkWD0anOU4sXrMXwNAN4VF9G5z
            ExXwI9aHfoCJeohO6PsKZ2kCgYBoJ9j7HLQjEN8r5EEKeXjYQ6ah1JnwUEhSyJp1
            vWQFePPBD30m6sJmuXnPfPN7zIbcaA/y1gCKmxI665/AWlnSvcFqZl/jzHSV2+Nc
            rDkd/P3nWU7sVQp5YxjIPwWbaGtU7oLn494zry/byRqJnJgJZsQvSPMa+KOWL026
            k54mxwKBgQCTDR7G5+z+rrwBw9edG1qw/dOzuBXgutGZUuTr4nsbEMEUe3q5ePow
            7aHxNbQjwhVHszQYvmnpwibHLZb6hMlA+fAXfJKtHwS6qjpr0drW7Sf/5rQRPiKv
            Rp57SHbNo2ZTEe5NFo72asv1heorM63ckV9vaAZReuwVir4xfyUxTg==
            -----END RSA PRIVATE KEY-----
        password:
          description: Password to decrypt profile private key.
          type: string
          minLength: 0
          maxLength: 255
    RadiusSecureProfile:
      description: Certificate profile configuration for Secure RADIUS use.
      type: object
      allOf:
        - $ref: '#/components/schemas/RadiusSecureProfileUpdateSettingsByName'
        - type: object
          properties:
            name:
              description: RADIUS secure profile name.
              type: string
              minLength: 1
              maxLength: 16
      required:
        - name
    RfNeighbor:
      type: object
      description: The RF neighbor state information.
      properties:
        serialNumber:
          description: Device unique serial number
          type: string
          minLength: 1
          maxLength: 16
        channel:
          description: |
            Channel number where the neighbor is operating.
            Channel number includes indication of 6 Ghz band,
            management frequency offset and channel width.
            For example:
              1 - channel 1 width 20 MHz on 2.4 GHz band
              36 - channel 36 width 20 MHz on 5 GHz band
              36+1/80 - channel 40 width 80 MHz on 5 GHz band
              175e/160 - channel 175 width 160 MHz on 6 GHz band
          type: string
          pattern: '^\d+e?(\+[1234567])?(\/(40|80|160|320))?$'
        rss:
          description: Strength of neighbor's signal in dBm.
          type: integer
        snr:
          description: Neighbor's signal-to-noise ratio in dB.
          type: integer
        linkMetric:
          description: |
            Link metric. Indicates cost of this link.
            Higher value indicates more expensive link.
            Link metric is calculated as 2,000,000 divided by physical
            speed of link in megabits per second. For example,
            wireless link with physical speed 100 Mbps has link
            metric 20,000. 2 Gbps wireless link has metric 1000.
          type: integer
      example:
        serialNumber: WM012209W-30130
        channel: 175e/160
        rss: -56
        snr: 35
        lMet: 980
    RfNeighborList:
      type: array
      items:
        $ref: '#/components/schemas/RfNeighbor'
    RfNeighborState:
      type: object
      description: RF Neighbor state information
      properties:
        neighbors:
          $ref: '#/components/schemas/RfNeighborList'
    PortSlppSafeGuard:
      description: |
        An object containing SLPP safe guard state per port.
      type: object
      properties:
        origin:
          description: Indicates how SLPP safe guard was enabled on port.
          type: string
          enum:
            - CONFIG
            - RADIUS
        status:
          description: >-
            The SLPP safe guard status for the port. SLPP guard state is set to
            MONITORING if the port is operational UP and SLPP guard is enabled
            on that port. The state is set to BLOCKING when the port is disabled
            by SLPP guard. If SLPP is not enabled on the port, the state is set
            to NONE.
          type: string
          enum:
            - BLOCKING
            - MONITORING
            - NONE
        timerCount:
          description: >-
            The time period in seconds that has passed since the port was
            operationally disabled by SLPP safe guard.
          type: integer
          minimum: 0
          maximum: 65535
    PortSlppState:
      description: SLPP state information for port
      type: object
      properties:
        portName:
          $ref: '#/components/schemas/PortName'
        safeGuard:
          description: SLPP safe guard state.
          $ref: '#/components/schemas/PortSlppSafeGuard'
    SlppState:
      description: SLPP state
      type: object
      properties:
        ports:
          description: SLPP state information for all ports.
          type: array
          items:
            $ref: '#/components/schemas/PortSlppState'
    SnmpCommonSettings:
      description: |
        This object represents the SNMP common settings for the device.
      type: object
      properties:
        contact:
          description: |
            The contact associated with this device. For example,
            an email address or telephone number.
          type: string
          minLength: 0
          maxLength: 255
        location:
          description: |
            The location associated with this device.
          type: string
          minLength: 0
          maxLength: 255
        name:
          description: |
            The system name for this device.
          type: string
          minLength: 0
          maxLength: 255
    IsisCircuitSpbmCreateObject:
      description: ISIS SPBM configuration per interface.
      type: object
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/SpbmInstanceId'
        - $ref: '#/components/schemas/IsisCircuitSpbmBasicObject'
      required:
        - id
    IsisCircuitCreateObject:
      description: ISIS configuration per interface.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisCircuitBasicObject'
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
            spbm:
              $ref: '#/components/schemas/IsisCircuitSpbmCreateObject'
    IsisCircuitLagCreateObject:
      description: >-
        ISIS configuration per port interface. Cannot create ISIS interface
        configuration on LAG which has port member with ISIS interface
        configuration.
      type: object
      allOf:
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
            lagId:
              $ref: '#/components/schemas/LagId'
        - $ref: '#/components/schemas/IsisCircuitCreateObject'
      required:
        - areaType
        - lagId
    IsisCircuitSettingsList:
      description: ISIS configuration list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
          - $ref: '#/components/schemas/IsisCircuitSettings'
    IsisCircuitAllObject:
      description: ISIS configuration per interface.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisCircuitBasicObject'
        - type: object
          properties:
            spbm:
              $ref: '#/components/schemas/IsisCircuitSpbmBasicObject'
    IsisInterfaceCreateObjectByArea:
      description: ISIS create configuration per area type.
      type: object
      allOf:
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
        - $ref: '#/components/schemas/IsisCircuitCreateObject'
      required:
        - areaType
    IsisL3LogicalIfCreate:
      description: ISIS logical interface configuration.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisLogicalIfBasic'
        - $ref: '#/components/schemas/IsisL3LogicalIfBasic'
      required:
        - destIpAddr
        - srcIpAddr
    IsisLogicalIfCreateObject:
      description: ISIS logical interface create configuration.
      type: object
      allOf:
        - type: object
          properties:
            logicalIfId:
              $ref: '#/components/schemas/IsisLogicalIfId'
            areas:
              description: ISIS area configuration
              type: array
              items:
                $ref: '#/components/schemas/IsisInterfaceCreateObjectByArea'
        - $ref: '#/components/schemas/IsisL3LogicalIfCreate'
      required:
        - logicalIfId
    IsisLogicalIfSettingsList:
      description: ISIS configuration list
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisLogicalIfSettings'
        - type: object
          properties:
            areas:
              description: ISIS area configuration
              type: array
              items:
                $ref: '#/components/schemas/IsisInterfaceSettingsByArea'
    IsisInterfaceUpdateObjectByArea:
      description: ISIS update configuration per area type.
      type: object
      allOf:
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
        - $ref: '#/components/schemas/IsisCircuitAllObject'
      required:
        - areaType
    IsisLogicalIfUpdateObject:
      description: ISIS logical interface update configuration.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisLogicalIfBasic'
        - type: object
          properties:
            areas:
              description: ISIS area configuration
              type: array
              items:
                $ref: '#/components/schemas/IsisInterfaceUpdateObjectByArea'
    IsisCircuitPortCreateObject:
      description: >-
        ISIS configuration per port interface. Cannot create ISIS interface
        configuration on port that is member of a LAG. Instead, configuration
        should be added to LAG interface.
      type: object
      allOf:
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
            port:
              $ref: '#/components/schemas/PortName'
        - $ref: '#/components/schemas/IsisCircuitCreateObject'
      required:
        - areaType
        - port
    IsisCircuitInterfaceName:
      description: The name of the interface to which the circuit corresponds.
      type: string
    IsisCircuitLevel:
      description: The ISIS level of the circuit. Currently Level 1 is supported.
      type: string
      enum:
        - LEVEL1
        - LEVEL2
        - LEVEL1-2
      default: LEVEL1
    IsisAdjacenciesStateObjectPerArea:
      description: >
        This object represents the state object of Intermediate System to
        Intermediate System(ISIS) adjacency per ISIS area.
      type: object
      properties:
        interface:
          $ref: '#/components/schemas/IsisCircuitInterfaceName'
        usage:
          $ref: '#/components/schemas/IsisCircuitLevel'
        state:
          description: |
            The state of the adjacency.
          type: string
          enum:
            - DOWN
            - INITIALIZING
            - UP
            - FAILED
        lastUpTime:
          description: |
            Time elapsed, measured in hundredths of a second,
            since the moment the adjacency most recently entered the state 'up'
          type: integer
        neighborPriority:
          description: |
            Priority of the neighboring Intermediate System for
            becoming the Designated Intermediate System.
          type: integer
          minLength: 0
          maxLength: 127
        holdTimer:
          description: |
            The hold time in seconds for this adjacency.
          type: integer
          minLength: 1
          maxLength: 65535
        neighborSysID:
          description: |
            The system ID of the neighboring Intermediate System.
          type: string
        hostname:
          description: |
            The hostname listed in LSP or the system name if host
            name is not configured.
          type: string
          minLength: 0
          maxLength: 255
        parallelActiveFlag:
          description: |
            A flag to indicate current adjacency is active or not
            among all the parallel adjacencies between two nodes.
          type: boolean
    IsisAdjacenciesStateObject:
      description: >
        This object represents the state object of Intermediate System to
        Intermediate System(ISIS) adjacency.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisAdjacenciesStateObjectPerArea'
        - type: object
          properties:
            areaType:
              $ref: '#/components/schemas/IsisAreaType'
    IsisCircuitEnabledOperational:
      description: ISIS circuit operational state.
      type: boolean
      readOnly: true
    IsisCircuitStateBasicObject:
      description: ISIS operational information per interface.
      type: object
      properties:
        adjancenciesNum:
          description: Number of adjacencies
          type: integer
          readOnly: true
        adjancenciesUpNum:
          description: Number of adjacencies which are up
          type: integer
          readOnly: true
        enabledOperational:
          $ref: '#/components/schemas/IsisCircuitEnabledOperational'
    IsisCircuitStateLagList:
      description: ISIS operational information list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
              lagId:
                $ref: '#/components/schemas/LagId'
          - $ref: '#/components/schemas/IsisCircuitStateBasicObject'
    IsisInterfaceStateByAreaList:
      description: ISIS area state information list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
          - $ref: '#/components/schemas/IsisCircuitStateBasicObject'
      required:
        - areaType
    IsisLogicalIfStateList:
      description: ISIS operational information list
      type: array
      items:
        allOf:
          - type: object
            properties:
              logicalIfId:
                $ref: '#/components/schemas/IsisLogicalIfId'
              sdWanState:
                description: Identifies SD-WAN operational state.
                type: string
                enum:
                  - DOWN
                  - UNDEFINED
                  - UP
              areas:
                $ref: '#/components/schemas/IsisInterfaceStateByAreaList'
    IsisCircuitStatePortList:
      description: ISIS operational information list
      type: array
      items:
        allOf:
          - type: object
            properties:
              areaType:
                $ref: '#/components/schemas/IsisAreaType'
              port:
                $ref: '#/components/schemas/PortName'
          - $ref: '#/components/schemas/IsisCircuitStateBasicObject'
    SpbmInstanceSettingsPerArea:
      description: ISIS SPBM settings per area type object
      type: object
      properties:
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      anyOf:
        - $ref: '#/components/schemas/SpbmInstanceSettings'
        - $ref: '#/components/schemas/SpbmInstanceSettingsRemote'
      discriminator:
        propertyName: areaType
        mapping:
          HOME: '#/components/schemas/SpbmInstanceSettings'
          REMOTE: '#/components/schemas/SpbmInstanceSettingsRemote'
    IsisGlobalSettingsPerArea:
      description: ISIS global settings per area type.
      type: object
      properties:
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      anyOf:
        - $ref: '#/components/schemas/IsisGlobalSettings'
        - $ref: '#/components/schemas/IsisGlobalSettingsRemote'
      discriminator:
        propertyName: areaType
        mapping:
          HOME: '#/components/schemas/IsisGlobalSettings'
          REMOTE: '#/components/schemas/IsisGlobalSettingsRemote'
    SpbmInstanceUpdateSettingsPerArea:
      description: ISIS SPBM settings per area type object
      type: object
      properties:
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      anyOf:
        - $ref: '#/components/schemas/SpbmInstanceUpdateSettings'
        - $ref: '#/components/schemas/SpbmInstanceUpdateSettingsRemote'
      discriminator:
        propertyName: areaType
        mapping:
          HOME: '#/components/schemas/SpbmInstanceUpdateSettings'
          REMOTE: '#/components/schemas/SpbmInstanceUpdateSettingsRemote'
    IsisSpbmState:
      description: ISIS SPBM state.
      type: object
      properties:
        multiAreaOperState:
          description: >-
            Multi-area operational state. Value is set to designated or
            non-designated when the device becomes a Multi-area Boundary Node.
            This attribute is relevant only for multi-area devices.
          type: string
          enum:
            - DISABLED
            - INIT
            - NON-DESIGNATED
            - DESIGNATED
    GenericInterfaces:
      description: ISIS Interface description with type and name
      type: object
      properties:
        interfaceType:
          description: >-
            Specifies the type of ISIS interface (either PORT or LAG or
            LOGICAL_INTERFACE)
          type: string
          enum:
            - PORT
            - LAG
            - LOGICAL_INTERFACE
        interfaceName:
          description: >
            Specifies the name of ISIS interface depending upon its type. In
            case of 

            PORT interfaces, this name is in well-known physical port format
            "slot:port";

            for multi-area, values 33 and 34 indicate port "PortVirtual" and
            value 0 indicates "cpp".

            In case of LAG interfaces, this name indicates the mlt id of the
            LAG.

            In case of logical interfaces, this name indicates the destination
            IP of the ISIS logical

            interface tunnel.
          type: string
          minLength: 0
          maxLength: 255
          example: '1:1:1'
    IsisMcastFibStateObject:
      description: |
        This object represents the state object for SPBM ISIS Multicast-FIB.
        This is Fabric Engine specific.
      type: object
      properties:
        sysId:
          description: >-
            Specifies the system ID of the node where multicast FIB entry
            originates from.
          type: string
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        destinationMacAddr:
          $ref: '#/components/schemas/MacAddressNonObject'
        isid:
          $ref: '#/components/schemas/IsidNonObject'
        isidName:
          description: A value that uniquely identifies the ISID.
          type: string
          minLength: 0
          maxLength: 64
        nickName:
          description: Nick name of node where this ISID got configured or discovered.
          type: string
          minLength: 0
          maxLength: 8
        hostName:
          description: Hostname of the node where multicast FIB entry originates from.
          type: string
          minLength: 0
          maxLength: 255
        incomingInterface:
          $ref: '#/components/schemas/GenericInterfaces'
        outgoingInterfaces:
          description: |
            List of ports and LAGs outgoing interfaces of multicast fib entry.
          type: array
          items:
            $ref: '#/components/schemas/GenericInterfaces'
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
    IsisLspStateObject:
      description: |
        This object represents the state object for ISIS LSP.
        This is Fabric Engine specific.
      type: object
      properties:
        level:
          description: |
            This attributes describes at which the system displays the LSP.
            L1 is for area and L2 is for domain.
          type: string
          enum:
            - L1
            - L2
        id:
          description: >
            Indicates the 8 byte LSP ID, consisting of the SystemID, Circuit ID,
            and Fragment Number.

            The format of LSP ID is xxxx.xxxx.xxxx.xx-xx(20 characters)
          type: string
          minLength: 0
          maxLength: 20
        seq:
          description: >-
            The sequence number for this LSP in hexadecimal format with 0x
            prefix included.
          type: string
          minLength: 3
          maxLength: 10
        hostName:
          description: >-
            The hostname listed in the LSP, or the system name if host name is
            not configured.
          type: string
          minLength: 0
          maxLength: 255
        nickName:
          description: Nick name of the SPBM node.
          type: string
          minLength: 0
          maxLength: 8
        lifetimeRemain:
          description: The remaining lifetime in seconds for this LSP.
          type: integer
        smltBmac:
          $ref: '#/components/schemas/MacAddressNonObject'
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
    VlanIdZeroTo4095:
      description: The identifier of the VLAN taking into account null-vlan
      type: integer
      minimum: 0
      maximum: 4095
    VrNameNonObject:
      description: This object represents a Virtual Router (VR) name
      type: string
      minLength: 1
      maxLength: 32
    IsisIpIsidMcastRoutesStateObject:
      description: >
        This object represents the state object for SPBM IP ISIS Multicast
        Routes.

        This is Fabric Engine specific.
      type: object
      properties:
        vsnIsid:
          description: >
            Virtual Service Network ISID. Layer 2 VSN and Layer 3 VSN each
            require a VSN I-SID.
          type: integer
          minimum: 0
          maximum: 16777215
          format: int32
        group:
          description: >
            The IP multicast group address for which this entry contains
            multicast routing information.
          type: string
        source:
          description: >
            The IP address of the multicast source for which this entry contains
            multicast routing information.
          type: string
        nickName:
          description: Multicast nickname.
          type: string
          minLength: 0
          maxLength: 8
        sourceBeb:
          description: Source Backbone Edge Bridge name.
          type: string
          minLength: 0
          maxLength: 255
          format: int32
        vlanId:
          $ref: '#/components/schemas/VlanIdZeroTo4095'
        vrName:
          $ref: '#/components/schemas/VrNameNonObject'
        dataIsid:
          description: >
            Specifies the data I-SID for the IP Multicastroute. A a BEB receives
            IP multicast data from a sender, 

            a BEB allocates a data I-SID in the range of 16,000,000 to
            16,512,000 for the stream. The stream is 

            identified by the source IP address, group IP address, and the local
            VLAN the stream is received on. 

            The data I-SID is a child of the scope or VSN I-SID.
          type: integer
          minimum: 1
          maximum: 16777215
          format: int32
        mcastType:
          description: Indicates the type of interface.
          type: string
          enum:
            - ROUTED
            - SNOOP
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
        bVlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        nniInterfaces:
          description: >
            List of ports and LAGs NNI interfaces. Specifies the list of NNI
            interfaces for the IP multicast route.

            SPBM runs in the core on the interfaces that connect to the core.
            These are are NNI interfaces.
          type: array
          items:
            $ref: '#/components/schemas/GenericInterfaces'
    IsisIpInterIsidUnicastFibStateObject:
      description: >
        This object represents the state object for the Table of ISIS IP
        Inter-Isid Unicast FIB.
      type: object
      properties:
        vrName:
          $ref: '#/components/schemas/VrNameNonObject'
        destinationIpAddr:
          $ref: '#/components/schemas/GeneralIpAddress'
        destinationMask:
          description: Destination prefix-length of the IP Unicast FIB entry
          type: integer
        nextHopBmac:
          $ref: '#/components/schemas/MacAddressNonObject'
        destIsid:
          $ref: '#/components/schemas/IsidNonObject'
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        isid:
          $ref: '#/components/schemas/IsidNonObject'
        nextHopName:
          description: The nexthop hostname of the IP Unicast FIB entry.
          type: string
        outgoingPort:
          description: |
            Outgoing port of the IP Unicast FIB entry;
            it can be one and only one physical port in format
            [slot]:[port] in case it is not mlt member or,
            in case it is mlt member, this field displays
            mlt name instead of physical port.
          type: string
        prefixCost:
          description: Prefix cost of the IP Unicast FIB entry.
          type: integer
        spbmCost:
          description: BMAC cost of the IP Unicast FIB entry.
          type: integer
        preference:
          description: IP Route preference of the IP Unicast FIB entry.
          type: integer
        metricType:
          description: IP Metric Type of the IP Unicast FIB entry.
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
    IsisUcastFibStateObject:
      description: >
        This object represents the state object for the Table of ISIS Unicast
        FIB.
      type: object
      properties:
        sysId:
          description: System ID of the node where Unicast FIB entry come from.
          type: string
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
        destinationMacAddr:
          $ref: '#/components/schemas/MacAddressNonObject'
        outgoingPort:
          description: |
            Outgoing port of the IP Unicast FIB entry;
            it can be one and only one physical port in format
            [slot]:[port] in case it is not mlt member or,
            in case it is mlt member, this field displays
            mlt name instead of physical port.
          type: string
        hostName:
          description: Host name of the node where Unicast FIB entry come from.
          type: string
        cost:
          description: The cost of the IP Unicast FIB entry.
          type: integer
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
    IsidUpdateSettings:
      description: ISID (service instance identifier) update settings.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/IsidName'
    CvlanCreateObject:
      description: CVLAN create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidUpdateSettings'
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
            platformVlanId:
              $ref: '#/components/schemas/VlanIdNonObject'
    SuniCreateObject:
      description: SUNI create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidUpdateSettings'
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
            platformVlanId:
              $ref: '#/components/schemas/VlanIdNonObject'
    TuniCreateObject:
      description: TUNI create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidUpdateSettings'
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
    IsidCreateObject:
      description: ISID create object
      type: object
      properties:
        isidType:
          description: Specifies the attributes based on the ISID type
          type: string
          enum:
            - CVLAN
            - SUNI
            - TUNI
      anyOf:
        - $ref: '#/components/schemas/CvlanCreateObject'
        - $ref: '#/components/schemas/SuniCreateObject'
        - $ref: '#/components/schemas/TuniCreateObject'
      discriminator:
        propertyName: isidType
        mapping:
          CVLAN: '#/components/schemas/CvlanCreateObject'
          SUNI: '#/components/schemas/SuniCreateObject'
          TUNI: '#/components/schemas/TuniCreateObject'
    IsidType:
      description: Type of service.
      type: string
      enum:
        - CVLAN
        - SUNI
        - TUNI
    IsidInterface:
      description: Interfaces based on ISID type
      type: object
      properties:
        isidType:
          description: Specifies the interface get object based on the isidType
          type: string
          enum:
            - CVLAN
            - SUNI
            - TUNI
      anyOf:
        - $ref: '#/components/schemas/CvlanGetSettingsObject'
        - $ref: '#/components/schemas/SuniGetSettingsObject'
        - $ref: '#/components/schemas/TuniGetSettingsObject'
      discriminator:
        propertyName: isidType
        mapping:
          CVLAN: '#/components/schemas/CvlanGetSettingsObject'
          SUNI: '#/components/schemas/SuniGetSettingsObject'
          TUNI: '#/components/schemas/TuniGetSettingsObject'
    IsidGetObject:
      description: ISID get settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/IsidType'
            interfaces:
              $ref: '#/components/schemas/IsidInterface'
    SuniGetObjectPerIsid:
      description: SUNI get object per ISID
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - $ref: '#/components/schemas/SuniGetSettingsObject'
    SuniCreateInterfacesObject:
      description: SUNI settings for adding interfaces.
      type: object
      properties:
        cvid:
          $ref: '#/components/schemas/SuniCvid'
        lagIds:
          $ref: '#/components/schemas/LagIds'
        portIds:
          $ref: '#/components/schemas/PortMembers'
        bpduEnabled:
          $ref: '#/components/schemas/SuniBpdu'
    SuniBpduObject:
      description: SUNI bpdu
      type: object
      properties:
        bpduEnabled:
          $ref: '#/components/schemas/SuniBpdu'
    TuniGetObjectPerIsid:
      description: TUNI get object per ISID
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidGetSummaryObject'
        - $ref: '#/components/schemas/TuniGetSettingsObject'
    IsidAction:
      description: Type of ISID related actions.
      type: string
      enum:
        - NONE
        - FLUSH_MAC_FDB
        - SYNC_MAC_FDB
    SuniStateObject:
      description: SUNI state settings.
      type: object
      properties:
        cvid:
          $ref: '#/components/schemas/SuniCvid'
        lagIds:
          $ref: '#/components/schemas/LagIds'
        portMembers:
          $ref: '#/components/schemas/PortMembers'
        macBased:
          description: >-
            It shows if the current displayed entry is associated to a mac-based
            SUNI
          type: boolean
          readOnly: true
    SuniStateObjectPerIsid:
      description: SUNI state settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/SuniStateObject'
        - type: object
          properties:
            isid:
              $ref: '#/components/schemas/IsidNonObject'
    FilterType:
      description: The type of accept policy to apply to routes.
      type: string
      enum:
        - FILTER_BY_ISID
        - FILTER_BY_ISID-LIST
        - FILTER_BY_NICKNAME
        - FILTER_BY_NICKNAME_AND_ISID
        - FILTER_BY_NICKNAME_AND_ISID-LIST
    IsisAcceptPolicyCreateObject:
      description: ISIS accept policy create object
      type: object
      properties:
        filterType:
          description: Specifies the attributes based on the filter type
          $ref: '#/components/schemas/FilterType'
      anyOf:
        - $ref: '#/components/schemas/IsisAcceptIsidPolicy'
        - $ref: '#/components/schemas/IsisAcceptIsidListPolicy'
        - $ref: '#/components/schemas/IsisAcceptNicknamePolicy'
        - $ref: '#/components/schemas/IsisAcceptNicknameIsidPolicy'
        - $ref: '#/components/schemas/IsisAcceptNicknameIsidListPolicy'
      discriminator:
        propertyName: filterType
        mapping:
          ISID: '#/components/schemas/IsisAcceptIsidPolicy'
          ISID-LIST: '#/components/schemas/IsisAcceptIsidListPolicy'
          NICKNAME: '#/components/schemas/IsisAcceptNicknamePolicy'
          NICKNAME-ISID: '#/components/schemas/IsisAcceptNicknameIsidPolicy'
          NICKNAME-ISID-LIST: '#/components/schemas/IsisAcceptNicknameIsidListPolicy'
    IsisAcceptApply:
      description: >
        This parameter is used to apply all ISIS accept filters (including the
        default filters).

        This property does not set a value in a structure and it cannot be seen
        in a GET request.

        The request to apply can disrupt traffic, cause temporary traffic loss
        and will reapply

        the accept policies, which deletes all of the IS-IS routes, and adds the
        IS-IS routes again.

        If the route policies change, the IS-IS accept policy must be reapplied.
      type: string
      enum:
        - NO_ACTION
        - APPLY
      default: NO_ACTION
    IsisAcceptIsidPolicyUpdateSettings:
      description: ISIS ISID accept policy update settings
      type: object
      properties:
        enabled:
          description: A value of True will enable ISID filtering.
          type: boolean
          default: false
        routeMap:
          $ref: '#/components/schemas/RouteMapName'
        backboneRouteMap:
          $ref: '#/components/schemas/RouteMapName'
    L3VsnCreateObject:
      description: VPN create object.
      allOf:
        - $ref: '#/components/schemas/L3VsnSettings'
      required:
        - ipvpnType
    L3VsnUpdateSettings:
      description: L3VSN update object
      allOf:
        - $ref: '#/components/schemas/Isid'
        - type: object
          properties:
            vpnEnabled:
              description: The enabled status of IP VPN node.
              type: boolean
              default: false
            isidName:
              $ref: '#/components/schemas/IsidName'
    IsidListUpdateSettings:
      description: The ISIDs in the ISID list.
      type: object
      properties:
        isidList:
          description: The ISID values in the list.
          type: array
          items:
            $ref: '#/components/schemas/IsidNonObject'
    IsidListCreateObject:
      description: ISIS ISID list create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsidListUpdateSettings'
        - type: object
          properties:
            isidListName:
              $ref: '#/components/schemas/FilterIsidList'
    IsisL2MultiAreaMulticastSnoopType:
      description: Specifies the type of ISIS L2 multi-area multicast snoop redistribution
      type: string
      enum:
        - ISID
        - ISID_LIST
    IsisL2MultiAreaMulticastSnoopRedistCreateObject:
      description: ISIS L2 multi-area multicast snooping redistribute create object
      type: object
      properties:
        MulticastSnoopType:
          description: >-
            Specifies the attributes based on ISIS L2 multi-area snoop multicast
            redistribution type
          $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopType'
      anyOf:
        - $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopIsidCreateObject'
        - $ref: >-
            #/components/schemas/IsisL2MultiAreaMulticastSnoopIsidListCreateObject
      discriminator:
        propertyName: MulticastSnoopType
        mapping:
          ISID: '#/components/schemas/IsisL2MultiAreaMulticastSnoopIsidCreateObject'
          ISID-LIST: >-
            #/components/schemas/IsisL2MultiAreaMulticastSnoopIsidListCreateObject
    IsisL3MultiAreaRedistPerIsid:
      description: ISIS L3 multi-area redistribute get object per ISID.
      type: object
      properties:
        ipv4Multicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
        ipv4Unicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
        ipv6Unicast:
          type: array
          items:
            $ref: '#/components/schemas/IsisL3MultiAreaRedistGetObject'
    IsisL3MultiAreaRedistType:
      description: Specifies the ISIS L3 multi-area redistribution type
      type: string
      enum:
        - IPv4_UNICAST
        - IPv4_MULTICAST
        - IPv6_UNICAST
    IsisL3MultiAreaRedistCreateObject:
      description: ISIS L3 multi-area redistribute create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL3MultiAreaRedistUpdateObject'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/IsisL3MultiAreaRedistType'
            direction:
              $ref: '#/components/schemas/IsisRedistDirection'
      required:
        - type
    IsisL2IsidListUpdateSettings:
      description: The ISIDs in the L2 ISID list.
      type: object
      properties:
        isidList:
          description: The ISID values in the list.
          type: array
          items:
            $ref: '#/components/schemas/IsidNonObject'
    IsisL2IsidListCreateObject:
      description: ISIS L2 ISID list create object
      type: object
      allOf:
        - $ref: '#/components/schemas/IsisL2IsidListUpdateSettings'
        - type: object
          properties:
            isidListName:
              $ref: '#/components/schemas/L2IsidList'
    StackingState:
      description: Stacking state information
      type: object
      properties:
        enabled:
          description: The stacking enabled operational state.
          type: boolean
          readOnly: true
        ports:
          type: object
          properties:
            enabled:
              description: The stack ports enabled operational state.
              type: boolean
              readOnly: true
    PortStormControlSettings:
      type: object
      description: >
        The storm control settings for lists of ports for unicast, broadcast and
        multicast traffic type.
      properties:
        unicastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
        broadcastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
        multicastStormControl:
          $ref: '#/components/schemas/StormControlSettings'
    StpInstanceVlanId:
      description: >
        VLAN ID for creating a new STP domain.

        If no VLAN ID is specified, the first available VLAN ID will be used for
        this operation.

        This attribute is applicable to Fabric Engine (VOSS) only.
      type: integer
      allOf:
        - $ref: '#/components/schemas/VlanIdNonObject'
    StpInstanceSettingsCreate:
      description: STP instance (domain) create settings.
      type: object
      properties:
        vlanId:
          $ref: '#/components/schemas/StpInstanceVlanId'
      allOf:
        - $ref: '#/components/schemas/StpNameObject'
        - $ref: '#/components/schemas/StpInstanceSettings'
    DesignatedRoot:
      description: |
        The bridge identifier of the root of the spanning tree 
        as determined by the Spanning Tree Protocol.
      type: string
      example: '80:00:40:88:2f:e6:70:00'
    StpPortState:
      description: STP port state
      type: object
      properties:
        state:
          description: >
            The port's current state as defined by application of the Spanning
            Tree Protocol. 

            This state controls what action a port takes on reception of a
            frame.

            For Fabric Engine - If the bridge has detected a port that is
            malfunctioning it will 

            place that port into the BROKEN state.
          type: string
          enum:
            - DISABLED
            - BLOCKING
            - LISTENING
            - LEARNING
            - FORWARDING
            - BROKEN
        designatedBridge:
          description: >
            The Bridge Identifier of the bridge which this port considers to be
            the Designated Bridge.
          type: string
          example: '80:00:40:88:2f:e6:70:00'
        designatedPort:
          description: >
            The Port Identifier of the port on the Designated Bridge. For Fabric
            Engine (VOSS)

            the port format is "80:01" and for Switch Engine (EXOS) the port
            format is "8001"
          type: string
    PortStpStateItem:
      description: This object represents the ports state for STP domain.
      type: object
      properties:
        port:
          $ref: '#/components/schemas/PortName'
      allOf:
        - $ref: '#/components/schemas/StpPortState'
    StpPortStateListComponent:
      description: STP port state list component
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StpName'
        designatedRoot:
          $ref: '#/components/schemas/DesignatedRoot'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortStpStateItem'
    SyslogSettingsUpdate:
      description: Syslog update settings
      type: object
      properties:
        enabled:
          description: Syslog global enabled state (Fabric Engine only)
          type: boolean
    SyslogServerUpdate:
      description: Syslog servers list
      type: object
      properties:
        servers:
          description: List of syslog servers
          type: array
          items:
            $ref: '#/components/schemas/SyslogServer'
    SystemServicesSettings:
      description: System services settings
      type: object
      properties:
        telnet:
          properties:
            enabled:
              description: telnet service status
              type: boolean
        ssh:
          properties:
            enabled:
              description: ssh service status
              type: boolean
    Rloc16:
      type: string
      minLength: 4
      maxLength: 4
      pattern: '^[0-9a-fA-F]+$'
      description: >-
        The RLOC16 "Routing-LOCator 16" is a 16-bit value (0-65535) used to
        identify a device within a Thread mesh network. It is derived from the
        device's Router ID and Child ID, and so may change when the network
        topology changes. (4 hex digits)
    ExtendedMacAddress:
      type: string
      minLength: 16
      maxLength: 16
      pattern: '^[0-9a-fA-F]+$'
      description: IEEE 802.15.4 Extended MAC address. (16 hex digits)
    ThreadDeviceKeys:
      description: Information to uniquely identify a Thread device.
      type: object
      required:
        - rloc16
        - extMac
      properties:
        rloc16:
          $ref: '#/components/schemas/Rloc16'
        extMac:
          $ref: '#/components/schemas/ExtendedMacAddress'
      example:
        rloc16: '6421'
        extMac: 8a4fd1f8a90ad353
    UnsignedInt8:
      type: integer
      format: int32
      minimum: 0
      maximum: 255
      description: An unsigned 8-bit integer.
    ThreadRouterTableEntry:
      type: object
      allOf:
        - $ref: '#/components/schemas/ThreadDeviceKeys'
        - properties:
            routerId:
              $ref: '#/components/schemas/UnsignedInt8'
            nextHop:
              description: Router ID of the next hop in the routing path.
              allOf:
                - $ref: '#/components/schemas/UnsignedInt8'
            pathCostToRouter:
              description: Path cost to the router.
              allOf:
                - $ref: '#/components/schemas/UnsignedInt8'
            linkQualityIn:
              description: Quality of the incoming link.
              allOf:
                - $ref: '#/components/schemas/UnsignedInt8'
            linkQualityOut:
              description: Quality of the outgoing link.
              allOf:
                - $ref: '#/components/schemas/UnsignedInt8'
            age:
              description: Time (sec) since the router was last heard from.
              allOf:
                - $ref: '#/components/schemas/UnsignedInt8'
            isLinkEstablished:
              type: boolean
              description: Indicates if the link is established with the router ID.
    Eui64:
      type: string
      minLength: 16
      maxLength: 16
      pattern: '^[0-9a-fA-F]+$'
      description: The factory-assigned IEEE EUI-64. (16 hex digits)
    JoinerDiscerner:
      type: string
      pattern: '^[0-9a-fA-F]{16}/[0-9]+$'
      description: >-
        Discerner is the lowest 'length' bits of 'number'. Discerner is
        specified as - number(16 hex digits) / length (number of bits). Length
        must be non-zero and at most OT_JOINER_MAX_DISCERNER_LENGTH.
    JoinerAny:
      type: string
      pattern: ^\*$
      description: Match any joiner.
    Pskd:
      type: string
      minLength: 6
      maxLength: 32
      description: >-
        The PSKd (Pre-Shared-Key for the Device) is the Joining Device
        Credential encoded using base32-thread. A Joining Device Credential is
        encoded as uppercase, alphanumeric characters (base32-thread: 0-9,A-Y
        excluding I,O,Q, and Z for readability) with a minimum length of 6 such
        characters and a maximum length of 32 such characters.
      pattern: '[0-9ABCDEFGHJKLMNPRSTUVWXY]+'
    UnsignedInt32:
      type: integer
      format: int64
      minimum: 0
      maximum: 4294967295
      description: An unsigned 32-bit integer.
    ThreadCommissionerJoinerTableEntry:
      type: object
      properties:
        id:
          oneOf:
            - $ref: '#/components/schemas/Eui64'
            - $ref: '#/components/schemas/JoinerDiscerner'
            - $ref: '#/components/schemas/JoinerAny'
        pskd:
          $ref: '#/components/schemas/Pskd'
        expirationTime:
          $ref: '#/components/schemas/UnsignedInt32'
          description: Joiner expiration time in msec.
    UnsignedInt64:
      type: integer
      format: int64
      minimum: 0
      description: An unsigned 64-bit integer.
    Nat64ProtocolCounters:
      description: >-
        NAT64 translator protocol counters, counted since the Thread instance is
        initialized.
      type: array
      items:
        type: object
        properties:
          protocol:
            type: string
            enum:
              - TCP
              - UDP
              - ICMP
              - TOTAL
            description: |-
              - 'TCP': Counters for TCP.
              - 'UDP': Counters for UDP.
              - 'ICMP': Counters for ICMP and ICMPv6.
              - 'TOTAL': Counters for sum of all protocols.
          ip4to6:
            type: object
            properties:
              packets:
                $ref: '#/components/schemas/UnsignedInt64'
              bytes:
                $ref: '#/components/schemas/UnsignedInt64'
          ip6to4:
            type: object
            properties:
              packets:
                $ref: '#/components/schemas/UnsignedInt64'
              bytes:
                $ref: '#/components/schemas/UnsignedInt64'
    Nat64TranslatorMappingTableEntry:
      type: object
      properties:
        sessionId:
          type: string
          minLength: 16
          maxLength: 16
          pattern: '^[0-9a-fA-F]+$'
          description: The unique id for a mapping session. (16 hex digits)
        ip6Address:
          type: string
          format: ipv6
          description: The IPv6 address of the mapping.
        ip4Address:
          type: string
          format: ipv4
          description: The IPv4 address of the mapping.
        expiry:
          $ref: '#/components/schemas/UnsignedInt32'
          description: Remaining time before expiry in milliseconds.
        stats:
          $ref: '#/components/schemas/Nat64ProtocolCounters'
    StartThreadCommissionerRequest:
      description: The request to start the Commissioner using the included whitelist.
      type: object
      properties:
        whitelist:
          type: array
          items:
            $ref: '#/components/schemas/ThreadCommissionerJoinerTableEntry'
    UserAccountAttributes:
      description: >
        The object representing a user account's attributes consisting of the
        account type and secret.  This object can

        be used as the request body for operations where the user name is known
        but changing it is not permitted. Changing

        the password in Switch Engine using cleartext values requires that the
        old password also be provided. The old password

        must be provided in cleartext.
      type: object
      allOf:
        - $ref: '#/components/schemas/AccountType'
        - type: object
          properties:
            secret:
              $ref: '#/components/schemas/AaaSecret'
            oldSecret:
              $ref: '#/components/schemas/AaaSecret'
    VlanInterfaceGetSettingsPerId:
      description: Vlan ID settings
      type: object
      allOf:
        - $ref: '#/components/schemas/VlanType'
        - $ref: '#/components/schemas/VlanCreateSettings'
        - $ref: '#/components/schemas/VlanUpdateSettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalSummarySettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalDetailSettings'
        - $ref: '#/components/schemas/VlanIpAddressList'
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/PrivateVlanName'
    VlanInterfaceUpdateSettings:
      allOf:
        - $ref: '#/components/schemas/VlanUpdateSettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalSummarySettings'
        - $ref: '#/components/schemas/VlanInterfaceAdditionalDetailSettings'
        - type: object
          properties:
            mvpnIsid:
              $ref: '#/components/schemas/VlanInterfaceMvpnSettings'
        - $ref: '#/components/schemas/VlanType'
        - $ref: '#/components/schemas/PrivateVlanName'
    VlanState:
      type: string
      description: State of the VLAN. "DISABLE" is Switch Engine specific.
      enum:
        - DISABLE
        - DOWN
        - UP
    VlanInterfaceStatePerVlanId:
      description: The state information for a VLAN on the device
      type: object
      properties:
        name:
          description: >
            VLAN name (For Switch Engine the maximum length is 32 characters).
            An empty string may be

            returned by the implementation in cases where a name is not
            associated with the VLAN.
          type: string
          minLength: 0
          maxLength: 64
        state:
          $ref: '#/components/schemas/VlanState'
        memberPorts:
          description: List of ports added statically or dynamically to the VLAN.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        dynamicPorts:
          description: List of ports added dynamically to the VLAN.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        activePorts:
          description: >-
            List of ports part of the VLAN which are physically up and STP or
            another protocol/feature state is forwarding.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        upPorts:
          description: List of ports part of the VLAN which are physically up.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        blockedPorts:
          description: >-
            List of ports part of the VLAN which have been blocked by STP or
            another protocol/feature.
          type: array
          items:
            $ref: '#/components/schemas/PortName'
        ipArpInspectionOrigin:
          description: >-
            Indicates how ARP inspection was enabled. This parameter applies to
            Fabric Engine only.
          type: string
          enum:
            - CONFIG
            - RADIUS
    VlanInterfaceState:
      description: The state information for a VLAN on the device
      type: object
      allOf:
        - type: object
          properties:
            vlanId:
              $ref: '#/components/schemas/VlanIdNonObject'
        - $ref: '#/components/schemas/VlanInterfaceStatePerVlanId'
    PortVlanIdObject:
      description: This object represents a VLAN ID
      type: object
      properties:
        vlanId:
          description: The identifier of the VLAN
          type: integer
          format: int32
    VrfCreateObject:
      description: >-
        Virtual Router Forwarding (VRF) Identifier information (minimum
        information required to create)
      type: object
      properties:
        name:
          description: VRF name
          type: string
          minLength: 1
          maxLength: 32
        vrType:
          $ref: '#/components/schemas/VrType'
        ipRoutingEnabled:
          description: |
            A value of true indicates IP routing is enabled on this VRF. This
            setting is only applicable to Fabric Engine (VOSS).
          type: boolean
      required:
        - name
    VrfWriteableObject:
      description: Virtual Router Forwarding (VRF) writeable information
      type: object
      properties:
        ipRoutingEnabled:
          description: |
            A value of true indicates IP routing is enabled on this VRF. This
            setting is only applicable to Fabric Engine (VOSS).
          type: boolean
    IpStaticRouteList:
      description: A list of statically configured IP routes
      type: array
      items:
        $ref: '#/components/schemas/IpStaticRoute'
    IpStaticRouteUpdateSettings:
      type: object
      description: This object represents updateable settings for a static route
      properties:
        enabled:
          description: >
            A value of true indicates this route is enabled.  This parameter
            only applies

            to Fabric Engine (VOSS), for Switch Engine (EXOS) all configured
            static routes

            are considered as enabled.
          type: boolean
    RouteProtectionType:
      description: |
        The type of route protection associated with the gateway.
      type: string
      enum:
        - UNKNOWN
        - PING
      example: PING
    RouteProtectionState:
      description: |
        The route protection state of a gateway.
      type: string
      enum:
        - UNKNOWN
        - DISABLED
        - UP
        - DOWN
      example: UP
    RouteProtectionRouteCount:
      description: |
        The number of routes associated with the protected gateway.
      type: integer
      example: 10
    RouteProtectionGatewayState:
      type: object
      description: This object represents the protection state of a static route gateway
      properties:
        gatewayIpAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        type:
          $ref: '#/components/schemas/RouteProtectionType'
        state:
          $ref: '#/components/schemas/RouteProtectionState'
        routeCount:
          $ref: '#/components/schemas/RouteProtectionRouteCount'
    IpRouteProtectionList:
      type: object
      description: |
        The list of IP route protection gateways and their operational states.
      properties:
        gatewayList:
          type: array
          items:
            $ref: '#/components/schemas/RouteProtectionGatewayState'
    IpRouteProtectionVrObject:
      description: IP route protection VR object
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/IpRouteProtectionList'
    IpRouteProtectionVrList:
      description: List of IP route protection gateways for each VR
      type: array
      items:
        $ref: '#/components/schemas/IpRouteProtectionVrObject'
    IpRouteOrigin:
      description: |
        The origin of the route. The table below shows which route types
        correspond to which NOS. For Switch Engine some of the
        origins are general names that have more specific origins
        associated with them and the general name is a shortcut.
        For example, BGP routes are categorized as either EBGP or IBGP
        in the show command output.  Configuration of export of BGP
        routes into another protocol will automatically be converted
        into separate commands for IBGP and EBGP. These instances have been
        denoted with an asterisk in the table.  In addition, HARD_CODED is
        is used for debugging and can not be configured.

        | Protocol             | NOS supported    |
        |----------------------|------------------|
        | STATIC               | Both             |
        | OSPF                 | Both *           |
        | OSPF_INTER           | Switch Engine    |
        | OSPF_INTRA           | Both             |
        | OSPF_EXT1            | Both             |
        | OSPF_EXT2            | Both             |
        | ISIS                 | Both *           |
        | DIRECT               | Both             |
        | RIP                  | Both             |
        | BGP                  | Both *           |
        | BLACKHOLE            | Both             |
        | EBGP                 | Switch Engine    |
        | IBGP                 | Both             |
        | BOOTP                | Switch Engine    |
        | DVMRP                | Switch Engine *  |
        | HARD_CODED           | Switch Engine *  |
        | INTER_VRF            | Both             |
        | ICMP                 | Switch Engine    |
        | ISIS_L1              | Both             |
        | ISIS_L1_EXT          | Switch Engine    |
        | ISIS_L2              | Both             |
        | ISIS_L2_EXT          | Switch Engine    |
        | MBGP                 | Both *           |
        | MBGP_EXT             | Both             |
        | MBGP_INTER           | Both             |
        | MPLS                 | Both             |
        | MPLS_INTRA           | Switch Engine    |
        | MPLS_INTER           | Switch Engine    |
        | MRT                  | Fabric Engine    |
        | MOSPF                | Switch Engine *  |
        | OSPFV3               | Both *           |
        | OSPFV3_EXT1          | Both             |
        | OSPFV3_EXT2          | Both             |
        | OSPFV3_INTRA         | Both             |
        | OSPFV3_AS_EXT        | Switch Engine *  |
        | OSPFV3_INTER         | Switch Engine    |
        | PIM_DM               | Switch Engine *  |
        | PIM_SM               | Switch Engine *  |
        | RIPNG                | Both             |
        | ROUTER_ADVERTISEMENT | Switch Engine    |
        | SPBM_L1              | Fabric Engine    |
        | DVR                  | Fabric Engine    |
        | NLS                  | Fabric Engine    |
        | HOST_MOBILITY        | Switch Engine    |
        | AUTO_PEERING         | Switch Engine    |
        | AUTO_CONF            | Fabric Engine    |
        | OSPF_INTER_VR        | Switch Engine    |
        | DIRECT_INTER_VR      | Switch Engine    |
        | UNKNOWN              | Both             |
      type: string
      enum:
        - STATIC
        - OSPF
        - OSPF_INTER
        - OSPF_INTRA
        - OSPF_EXT1
        - OSPF_EXT2
        - ISIS
        - DIRECT
        - RIP
        - BGP
        - BLACKHOLE
        - EBGP
        - IBGP
        - BOOTP
        - DVMRP
        - HARD_CODED
        - INTER_VRF
        - ICMP
        - ISIS_L1
        - ISIS_L1_EXT
        - ISIS_L2
        - ISIS_L2_EXT
        - MBGP
        - MBGP_EXT
        - MBGP_INTER
        - MPLS
        - MPLS_INTRA
        - MPLS_INTER
        - MRT
        - MOSPF
        - OSPFV3
        - OSPFV3_EXT1
        - OSPFV3_EXT2
        - OSPFV3_INTRA
        - OSPFV3_AS_EXT
        - OSPFV3_INTER
        - PIM_DM
        - PIM_SM
        - RIPNG
        - ROUTER_ADVERTISEMENT
        - SPBM_L1
        - DVR
        - NLS
        - HOST_MOBILITY
        - AUTO_PEERING
        - AUTO_CONF
        - OSPF_INTER_VR
        - DIRECT_INTER_VR
        - UNKNOWN
    IpRouteStatus:
      description: The status of the route.
      type: string
      enum:
        - UNKNOWN
        - INACTIVE
        - ACTIVE
    IpRouteState:
      allOf:
        - $ref: '#/components/schemas/IpRoute'
        - type: object
          description: This object represents the state information for any type of route.
          properties:
            age:
              description: >
                The number of seconds since this route was last updated or
                otherwise determined to be correct.
              type: integer
              format: int32
            origin:
              $ref: '#/components/schemas/IpRouteOrigin'
            status:
              $ref: '#/components/schemas/IpRouteStatus'
            vlanName:
              description: VLAN name associated with the egress interface.
              type: string
              minLength: 0
              maxLength: 64
            vlanId:
              $ref: '#/components/schemas/VlanIdNonObject'
            nextHopId:
              description: >
                Identifier of the next-hop, hostname or mac adress. This is
                Fabric Engine specific.

                This is internally used by SPBM.
              type: string
              minLength: 0
              maxLength: 64
    IpRouteStateWithVr:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/IpRouteState'
    IpRouteStateListAllVrs:
      description: A list of IP routes with VR name included
      type: array
      items:
        $ref: '#/components/schemas/IpRouteStateWithVr'
    IpRouteCount:
      description: Number of routes for each type of route origin
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/IpRouteOrigin'
        count:
          description: The total number of routes for the route origin
          type: integer
    IpRouteSummaryState:
      description: Summary information about routes.
      type: object
      properties:
        totalRoutes:
          description: >
            Total number of routes (statically created or dynamically learned)
            for a virtual router instance.
          type: integer
        routes:
          type: object
          properties:
            ipv4:
              type: array
              items:
                $ref: '#/components/schemas/IpRouteCount'
            ipv6:
              type: array
              items:
                $ref: '#/components/schemas/IpRouteCount'
    IpRouteSummaryStatePerVr:
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/IpRouteSummaryState'
    VrrpVIPListObject:
      type: object
      properties:
        virtualIpAddresses:
          $ref: '#/components/schemas/VrrpVIPList'
    VrrpProtoState:
      description: >
        The curent state for a virtual router. "INIT" indicates that virtual
        router is waiting for a startup event.

        "BACKUP" indicates the virtual router is monitoring the availability of
        the master router. "MASTER" indicates

        that the virtual router is forwarding packets for IP address that are
        associated with this router.

        Fabric Engine (VOSS) does not provide support for UNKNOWN value.
      type: string
      enum:
        - UNKNOWN
        - INIT
        - BACKUP
        - MASTER
    VrrpCounters:
      description: Statistics information about a virtual router.
      type: object
      properties:
        becomeMaster:
          description: >
            The total number of times that this virtual router`s state has
            transitioned to MASTER.
          type: integer
          format: int32
          readOnly: true
        advertiseReceived:
          description: >-
            The total number of VRRP advertisments received by this virtual
            router.
          type: integer
          format: int32
          readOnly: true
        advertiseIntervalErrors:
          description: |
            The total number of VRRP advertisement packets received
            for which the advertisement interval is different than the
            one configured for the local virtual router.
          type: integer
          format: int32
          readOnly: true
    VrrpStatePerVrId:
      description: State information for virtual router instances
      type: object
      properties:
        virtualIpAddresses:
          $ref: '#/components/schemas/VrrpVIPList'
        state:
          $ref: '#/components/schemas/VrrpProtoState'
        masterIpAddress:
          $ref: '#/components/schemas/GeneralIpAddress'
        counters:
          $ref: '#/components/schemas/VrrpCounters'
    VrrpState:
      description: State information for virtual router instances
      type: object
      allOf:
        - type: object
          properties:
            vrId:
              description: The virtual router id.
              type: integer
              format: int32
              minimum: 1
              maximum: 255
        - $ref: '#/components/schemas/VrrpStatePerVrId'
    VrrpListState:
      description: State information for all virtual router instances for a particular VLAN
      allOf:
        - $ref: '#/components/schemas/VlanIdExplicit'
        - type: object
          properties:
            vrrpVirtualRouterState:
              description: The list of VRRP instances and their states
              type: array
              items:
                $ref: '#/components/schemas/VrrpState'
    VlansVrrpListState:
      description: >-
        List of state information of all virtual router instances from all
        VLANs.
      type: array
      items:
        $ref: '#/components/schemas/VrrpListState'
    CoreFileEventType:
      type: string
      enum:
        - CoreFileCreated
    CallbackParamsEvents:
      type: object
      required:
        - callbackUrl
      properties:
        callbackUrl:
          description: The callback URL
          type: string
        flushInterval:
          description: |
            Interval in seconds to collect metrics
            before submitting callback REST API requests.
          type: integer
          enum:
            - 1
            - 5
            - 10
            - 30
            - 60
            - 120
            - 300
            - 600
            - 1800
          default: 1
      example:
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    CoreFileEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/CoreFileEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: CoreFileCreated
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    DeviceIdElement:
      description: |
        Device identifier. At this moment is the serial number.
        In case when one device reports stats for multiple devices,
        for example stacked switches, the reporterSerialnumber
        identifies the current sender(Primary) of the report and
        chassisId(MAC address of the stack) identifies the stack.
      type: object
      properties:
        serialnumber:
          type: string
        reporterSerialnumber:
          type: string
        chassisId:
          type: string
      example:
        serialnumber: '123234234'
        reporterSerialnumber: '123234234'
        chassisId: '02:96:00:af:09:01'
    BaseDeviceElement:
      type: object
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        device:
          $ref: '#/components/schemas/DeviceIdElement'
        ts:
          description: |
            Measurement timestamp as Unix epoch in milliseconds.
            Timestamp must monotonically increase in the reports, i.e.
            element N should not have larger timestamp than element N+1.
          type: integer
          format: int64
      required:
        - name
        - device
        - ts
    CoreFileCreatedKeysElement:
      type: object
      allOf:
        - type: object
          properties:
            coreFileName:
              description: The name of the core file created.
              type: string
    CoreFileCreatedEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/CoreFileCreatedKeysElement'
      required:
        - keys
    CoreFileCreatedCallbackElement:
      description: |
        Reports the creation of a core file state change event
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/CoreFileCreatedEntry'
      example:
        name: CoreFileCreated
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              coreFileName: core.1695359299.python.1.gz
    CoreFileCreatedEventCallbackElement:
      type: object
      properties:
        coreFileCreated:
          type: array
          items:
            $ref: '#/components/schemas/CoreFileCreatedCallbackElement'
    DhcpSnoopEventType:
      type: string
      enum:
        - DhcpSnoopDhcpViolationAlarm
        - DhcpSnoopArpViolationAlarm
        - DhcpSnoopFingerprintingEvent
    DhcpSnoopEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/DhcpSnoopEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: DhcpSnoopDhcpViolationAlarm
          - type: DhcpSnoopArpViolationAlarm
          - type: DhcpSnoopFingerprintingEvent
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    DhcpSnoopViolationAlarmKeysElement:
      type: object
      required:
        - macAddr
        - port
        - vlanId
      properties:
        macAddr:
          $ref: '#/components/schemas/MacAddressNonObject'
        port:
          $ref: '#/components/schemas/PortName'
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    DhcpSnoopViolation:
      description: Description of violation.
      type: string
      minLength: 1
      maxLength: 256
    DhcpSnoopViolationAlarmEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/DhcpSnoopViolationAlarmKeysElement'
        action:
          description: |
            Describes the action on DHCP violation.
            ADD - DHCP violation occured
            CLEAR - DHCP violation is cleared
            Fabric Engine supports only ADD action.
          type: string
          enum:
            - ADD
            - CLEAR
        ipAddress:
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        violation:
          $ref: '#/components/schemas/DhcpSnoopViolation'
      required:
        - keys
    DhcpSnoopDhcpViolationAlarmCallbackElement:
      description: |
        Reports a DHCP Violation has been detected.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/DhcpSnoopViolationAlarmEntry'
      example:
        name: DhcpSnoopDhcpViolationAlarm
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              macAddr: '00:96:00:af:09:01'
              port: '1:3'
              vlanId: 100
            action: ADD
            ipAddress: 10.5.2.1
            violation: Rogue DHCP Server
    DhcpSnoopFingerprintingEventKeysElement:
      type: object
      required:
        - vlanId
      properties:
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    DhcpSnoopFingerprintingEventEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/DhcpSnoopFingerprintingEventKeysElement'
        ipAddress:
          $ref: '#/components/schemas/Ipv4AddressNonObject'
        macAddr:
          $ref: '#/components/schemas/MacAddressNonObject'
        options:
          $ref: '#/components/schemas/DhcpSnoopFingerprintingOptionList'
      required:
        - keys
    DhcpSnoopFingerprintingEventCallbackElement:
      description: |
        Reports a DHCP Option has been sent via DHCP packets.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/DhcpSnoopFingerprintingEventEntry'
      example:
        name: DhcpSnoopFingerprintingEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              vlanId: 10
            ipAddress: 10.1.2.3
            macAddr: '00:73:04:05:06:07'
            options:
              - code: 60
                value: EXTREME
    DhcpSnoopStateCallbackElement:
      type: object
      properties:
        dhcpSnoopDhcpViolationAlarm:
          type: array
          items:
            $ref: '#/components/schemas/DhcpSnoopDhcpViolationAlarmCallbackElement'
        dhcpSnoopFingerprintingEvent:
          type: array
          items:
            $ref: '#/components/schemas/DhcpSnoopFingerprintingEventCallbackElement'
    EthernetInterfaceStatsType:
      type: string
      enum:
        - EthernetInterfaceStats
        - EthernetInterfaceVlanStats
      example: EthernetInterfaceStats
    CallbackParamsStats:
      type: object
      required:
        - callbackUrl
      properties:
        callbackUrl:
          description: The callback URL
          type: string
        flushInterval:
          description: |
            Interval in seconds to collect metrics
            before submitting callback REST API requests.
          type: integer
          enum:
            - 1
            - 5
            - 10
            - 30
            - 60
            - 120
            - 300
            - 600
            - 1800
          default: 30
      example:
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    EthernetInterfaceStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/EthernetInterfaceStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: EthernetInterfaceStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    InterfaceKeysElement:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortName'
        ifIndex:
          type: integer
      required:
        - name
        - ifIndex
      example:
        ifIndex: 11
        name: ge1
    EthernetInterfaceStatsErrorsCollisionsElement:
      type: object
      properties:
        excessive:
          description: |
            A count of frames for which transmission on a
            particular interface fails due to excessive
            collisions. This counter does not increment when 
            the interface is operating in full-duplex mode.
          type: integer
          format: int64
        late:
          description: |
            The number of times that a collision is detected
            on a particular interface later than 512 bit-times
            into the transmission of a packet.
          type: integer
          format: int64
        multiple:
          description: |
            A count of successfully transmitted frames on
            a particular interface for which transmission
            is inhibited by more than one collision.
          type: integer
          format: int64
        single:
          description: |
            A count of successfully transmitted frames on
            a particular interface for which transmission
            is inhibited by exactly one collision.
          type: integer
          format: int64
    EthernetInterfaceStatsErrorsElement:
      type: object
      properties:
        alignment:
          description: |
            A count of frames received on a particular
            interface that are not an integral number of
            octets in length and do not pass the FCS check.
          type: integer
          format: int64
        carrier:
          description: |
            The total number of carrier errors encountered on
            this interface. Carrier errors occur when there is a 
            problem with the modulation of the signal. This could 
            indicate either a duplex mismatch, or a problem with 
            the physical cable/connector.
          type: integer
          format: int64
        carrierSense:
          description: |
            The number of times that the carrier sense
            condition was lost or never asserted when
            attempting to transmit a frame on a particular
            interface.
          type: integer
          format: int64
        deferredTx:
          description: |
            A count of frames for which the first
            transmission attempt on a particular interface
            is delayed because the medium is busy.
          type: integer
          format: int64
        fcs:
          description: |
            A count of frames received on a particular
            interface that are an integral number of octets
            in length but do not pass the FCS check.
          type: integer
          format: int64
        frameTooLong:
          description: |
            A count of frames received on a particular
            interface that exceed the maximum permitted
            frame size.
          type: integer
          format: int64
        frameTooShort:
          description: |
            The total number of frames that are too short 
            that were encountered on this interface.
          type: integer
          format: int64
        inDiscards:
          description: |
            The number of inbound packets which were chosen to be
            discarded even though no errors had been detected to prevent
            their being deliverable to a higher-layer protocol. One 
            possible reason for discarding such a packet could be to free 
            up buffer space.
          type: integer
          format: int64
        outDiscards:
          description: |
            The number of outbound packets which were chosen to be
            discarded even though no errors had been detected to prevent
            their being transmitted.  One possible reason for discarding
            such a packet could be to free up buffer space.
          type: integer
          format: int64
        inErrors:
          description: |
            For packet-oriented interfaces, the number of inbound
            packets that contained errors preventing them from being
            deliverable to a higher-layer protocol.
          type: integer
          format: int64
        outErrors:
          description: |
            For packet-oriented interfaces, the number of outbound
            packets that could not be transmitted because of errors.
            For character-oriented or fixed-length interfaces, the
            number of outbound transmission units that could not be
            transmitted because of errors.
          type: integer
          format: int64
        inFlowCtrlPkts:
          description: |
            The total number of flow control packets received
            by this interface.
          type: integer
          format: int64
        outFlowCtrlPkts:
          description: |
            The total number of flow control packets transmitted 
            by this interface.
          type: integer
          format: int64
        inPfcPkts:
          description: |
            The total number of Priority Flow Control (PFC)
            packets received by this interface.
          type: integer
          format: int64
        outPfcPkts:
          description: |
            The total number of Priority Flow Control (PFC)
            packets transmitted by this interface.
          type: integer
          format: int64
        linkFailures:
          description: |
            The total number of link failures encountered on 
            this interface.
          type: integer
          format: int64
        linkInactive:
          description: |
            The total number of link inactive errors encountered 
            on this interface.
          type: integer
          format: int64
        macRx:
          description: |
            A count of frames for which reception on a
            particular interface fails due to an internal
            MAC sublayer receive error. A frame is only
            counted by an instance of this object if it is
            not counted by the corresponding instance of
            either the dot3StatsFrameTooLongs object, the
            dot3StatsAlignmentErrors object, or the
            dot3StatsFCSErrors object
          type: integer
          format: int64
        macTx:
          description: |
            A count of frames for which transmission on a
            particular interface fails due to an internal
            MAC sublayer transmit error. A frame is only
            counted by an instance of this object if it is
            not counted by the corresponding instance of
            either the dot3StatsLateCollisions object, the
            dot3StatsExcessiveCollisions object, or the
            dot3StatsCarrierSenseErrors object.
          type: integer
          format: int64
        packet:
          description: |
            The total number of packet errors encountered on 
            this interface.
          type: integer
          format: int64
        sqeTest:
          description: |
            A count of times that the SQE TEST ERROR
            message is generated by the PLS sublayer for a
            particular interface.
          type: integer
          format: int64
        unknownProtos:
          description: |
            For packet-oriented interfaces - the number of packets
            received via the interface which were discarded
            because of an unknown or unsupported protocol. For
            character-oriented or fixed-length interfaces which
            support protocol multiplexing - the number of
            transmission units received via the interface which
            were discarded because of an unknown or unsupported
            protocol. For any interface which does not support
            protocol multiplexing this counter will always be 0.
          type: integer
          format: int64
        collisions:
          $ref: '#/components/schemas/EthernetInterfaceStatsErrorsCollisionsElement'
    EthernetInterfaceStatsElement:
      type: object
      properties:
        speed:
          description: >
            The operational speed of the interface if active.  On VOSS, this
            attribute does not support the values 20G and 50G.
          type: string
          enum:
            - 0M
            - 10M
            - 100M
            - 1G
            - 2.5G
            - 5G
            - 10G
            - 20G
            - 25G
            - 40G
            - 50G
            - 100G
        inOctets:
          description: |
            The total number of octets received on the interface,
            including framing characters.
          type: integer
          format: int64
        outOctets:
          description: |
            The total number of octets transmitted out of the
            interface, including framing characters.
          type: integer
          format: int64
        inUcastPkts:
          description: |
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were not addressed to a multicast
            or broadcast address at this sub-layer.
          type: integer
          format: int64
        outUcastPkts:
          description: |
            The total number of packets that higher-level protocols
            requested be transmitted, and which were not addressed to a
            multicast or broadcast address at this sub-layer, including
            those that were discarded or not sent.
          type: integer
          format: int64
        inBroadcastPkts:
          description: |
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a broadcast
            address at this sub-layer.
          type: integer
          format: int64
        outBroadcastPkts:
          description: |
            The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            broadcast address at this sub-layer, including those that
            were discarded or not sent.
          type: integer
          format: int64
        inMulticastPkts:
          description: |
            The number of packets, delivered by this sub-layer to a
            higher (sub-)layer, which were addressed to a multicast
            address at this sub-layer. For a MAC layer protocol, this
            includes both Group and Functional addresses.
          type: integer
          format: int64
        outMulticastPkts:
          description: |
            The total number of packets that higher-level protocols
            requested be transmitted, and which were addressed to a
            multicast address at this sub-layer, including those that
            were discarded or not sent.  For a MAC layer protocol, this
            includes both Group and Functional addresses.
          type: integer
          format: int64
        errors:
          $ref: '#/components/schemas/EthernetInterfaceStatsErrorsElement'
    EthernetInterfaceStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        stats:
          $ref: '#/components/schemas/EthernetInterfaceStatsElement'
      required:
        - keys
    EthernetInterfaceStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/EthernetInterfaceStatsEntry'
      example:
        name: EthernetInterfaceStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 1001
              name: '1:1'
            stats:
              speed: 1G
              inOctets: 0
              outOctets: 0
              inUcastPkts: 0
              outUcastPkts: 0
              inBroadcastPkts: 0
              outBroadcastPkts: 0
              inMulticastPkts: 0
              outMulticastPkts: 0
              erors:
                alignment: 0
                carrier: 0
                carrierSense: 0
                defferedTx: 0
                fcs: 0
                frameTooLong: 0
                frameTooShort: 0
                inDiscards: 0
                outDiscards: 0
                inErrors: 0
                outErrors: 0
                inFlowCtrlPkts: 0
                outFlowCtrlPkts: 0
                inPfcPkts: 0
                outPfcPkts: 0
                linkFailures: 0
                linkInactive: 0
                macRx: 0
                macTx: 0
                packet: 0
                sqeTest: 0
                collisions:
                  excessive: 0
                  late: 0
                  multiple: 0
                  simple: 0
          - keys:
              ifIndex: 1002
              name: '1:2'
            stats:
              speed: 1G
              inOctets: 0
              outOctets: 0
              inUcastPkts: 0
              outUcastPkts: 0
              inBroadcastPkts: 0
              outBroadcastPkts: 0
              inMulticastPkts: 0
              outMulticastPkts: 0
              erors:
                alignment: 0
                carrier: 0
                carrierSense: 0
                defferedTx: 0
                fcs: 0
                frameTooLong: 0
                frameTooShort: 0
                inDiscards: 0
                outDiscards: 0
                inErrors: 0
                outErrors: 0
                inFlowCtrlPkts: 0
                outFlowCtrlPkts: 0
                inPfcPkts: 0
                outPfcPkts: 0
                linkFailures: 0
                linkInactive: 0
                macRx: 0
                macTx: 0
                packet: 0
                sqeTest: 0
                collisions:
                  excessive: 0
                  late: 0
                  multiple: 0
                  simple: 0
    InterfaceVlanKeysElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/InterfaceKeysElement'
        - $ref: '#/components/schemas/VlanIdObject'
      example:
        ifIndex: 11
        name: ge1
        vlanId: 100
    EthernetInterfaceVlanStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceVlanKeysElement'
        stats:
          $ref: '#/components/schemas/EthernetInterfaceStatsElement'
      required:
        - keys
    EthernetInterfaceVlanStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/EthernetInterfaceVlanStatsEntry'
      example:
        name: EthernetInterfaceVlanStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 1001
              name: '1:1'
              vlanId: 100
            stats:
              speed: 1G
              inOctets: 0
              outOctets: 0
              inUcastPkts: 0
              outUcastPkts: 0
              inBroadcastPkts: 0
              outBroadcastPkts: 0
              inMulticastPkts: 0
              outMulticastPkts: 0
              erors:
                alignment: 0
                carrier: 0
                carrierSense: 0
                defferedTx: 0
                fcs: 0
                frameTooLong: 0
                frameTooShort: 0
                inDiscards: 0
                outDiscards: 0
                inErrors: 0
                outErrors: 0
                inFlowCtrlPkts: 0
                outFlowCtrlPkts: 0
                inPfcPkts: 0
                outPfcPkts: 0
                linkFailures: 0
                linkInactive: 0
                macRx: 0
                macTx: 0
                packet: 0
                sqeTest: 0
                collisions:
                  excessive: 0
                  late: 0
                  multiple: 0
                  simple: 0
          - keys:
              ifIndex: 1002
              name: '1:2'
              vlanId: 100
            stats:
              speed: 1G
              inOctets: 0
              outOctets: 0
              inUcastPkts: 0
              outUcastPkts: 0
              inBroadcastPkts: 0
              outBroadcastPkts: 0
              inMulticastPkts: 0
              outMulticastPkts: 0
              erors:
                alignment: 0
                carrier: 0
                carrierSense: 0
                defferedTx: 0
                fcs: 0
                frameTooLong: 0
                frameTooShort: 0
                inDiscards: 0
                outDiscards: 0
                inErrors: 0
                outErrors: 0
                inFlowCtrlPkts: 0
                outFlowCtrlPkts: 0
                inPfcPkts: 0
                outPfcPkts: 0
                linkFailures: 0
                linkInactive: 0
                macRx: 0
                macTx: 0
                packet: 0
                sqeTest: 0
                collisions:
                  excessive: 0
                  late: 0
                  multiple: 0
                  simple: 0
    EthernetInterfaceStatsGroupCallbackElement:
      type: object
      properties:
        ethernetInterfaceStats:
          type: array
          items:
            $ref: '#/components/schemas/EthernetInterfaceStatsCallbackElement'
        ethernetInterfaceVlanStats:
          type: array
          items:
            $ref: '#/components/schemas/EthernetInterfaceVlanStatsCallbackElement'
    ThreadStatsType:
      type: string
      enum:
        - THREAD_NEIGHBOR_STATS
        - THREAD_ROUTER_STATS
      example: THREAD_NEIGHBOR_STATS
    ThreadStatsSubscriptionRequest:
      description: The request to subscribe for IoT stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/ThreadStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: THREAD_NEIGHBOR_STATS
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    SignedInt8:
      type: integer
      format: int32
      minimum: -128
      maximum: 127
      description: A signed 8-bit integer.
    ThreadNeighborStatsEntry:
      type: object
      properties:
        age:
          $ref: '#/components/schemas/UnsignedInt32'
          description: Seconds since last heard from neighbor.
        avgRssi:
          $ref: '#/components/schemas/SignedInt8'
          description: Average Receive Signal Strength Indicator
        lastRssi:
          $ref: '#/components/schemas/SignedInt8'
          description: Last Receive Signal Strength Indicator
        connectionTime:
          $ref: '#/components/schemas/UnsignedInt32'
          description: Seconds since link establishment with neighbor.
    ThreadInterfaceKeys:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the Thread interface.
      example:
        name: thread0
    ThreadInterfaceDeviceKeys:
      type: object
      allOf:
        - $ref: '#/components/schemas/ThreadInterfaceKeys'
        - $ref: '#/components/schemas/ThreadDeviceKeys'
    ThreadNeighborRouterStatsEntry:
      required:
        - keys
      allOf:
        - $ref: '#/components/schemas/ThreadNeighborStatsEntry'
        - properties:
            keys:
              $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
    ThreadNeighborRouterStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborRouterStatsEntry'
    ThreadNeighborChildStatsEntry:
      required:
        - keys
      allOf:
        - $ref: '#/components/schemas/ThreadNeighborStatsEntry'
        - properties:
            keys:
              $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
            queuedMessageCount:
              description: Number of queued messages for the child.
              type: integer
              format: int32
            linkQualityIn:
              description: >-
                The link quality of incoming messages from the child, as
                perceived by the parent.
              type: integer
              format: int32
    ThreadNeighborChildStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborChildStatsEntry'
    TrafficCounters:
      type: object
      properties:
        rxPackets:
          type: integer
          description: The total number of packets received by the network interface.
        rxPacketErrors:
          type: integer
          description: The number of packets that could not be processed due to some error.
        rxPacketDropped:
          type: integer
          description: The number of packets that were dropped.
        rxBytes:
          type: integer
          description: This is the total number of bytes received by the network interface.
        txPackets:
          type: integer
          description: The total number of packets transmitted by the network interface.
        txPacketErrors:
          type: integer
          description: >-
            The number of packets that could not be transmitted due to some
            error.
        txPacketDropped:
          type: integer
          description: >-
            The number of packets that were dropped and not transmitted i.e. due
            to link failure, network congestion, ...
        txPacketCollisions:
          type: integer
          description: The number of collisions that occurred while transmitting packets.
        txBytes:
          type: integer
          description: >-
            This is the total number of bytes transmitted by the network
            interface.
    Nat64ErrorCounters:
      description: >-
        NAT64 translator error counters are initialized to zero when the Thread
        instance is initialized.
      type: array
      items:
        type: object
        properties:
          protocol:
            type: string
            enum:
              - ILLEGAL_PACKET
              - UNSUPPORTED_PROTOCOL
              - NO_MAPPING
              - TOTAL
          ip4to6Packets:
            $ref: '#/components/schemas/UnsignedInt64'
          ip6to4Packets:
            $ref: '#/components/schemas/UnsignedInt64'
    MacCounters:
      type: object
      description: Gets the MAC layer counters.
      properties:
        txTotal:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of unique MAC frame transmission requests.
        txRetry:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of MAC retransmission attempts.
        txErrBusyChannel:
          $ref: '#/components/schemas/UnsignedInt32'
          description: >-
            The total number of unique MAC transmission requests failures caused
            by a busy channel (a CSMA/CA fail).
        txErrCca:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of CCA failures.
        rxTotal:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of received frames.
        rxErrFcs:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of frames dropped due to invalid FCS.
        rxErrInvalidSrcAddr:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of frames dropped due to invalid source address.
        rxErrNoFrame:
          $ref: '#/components/schemas/UnsignedInt32'
          description: >-
            The total number of frames dropped because of missing or malformed
            content.
        rxErrOther:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of frames dropped due to other error.
        rxErrSec:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The total number of frames dropped due to security error.
    UnsignedInt16:
      type: integer
      format: int32
      minimum: 0
      maximum: 65535
      description: An unsigned 16-bit integer.
    MleCounters:
      type: object
      description: Gets the Thread MLE (Mesh Link Establishment) counters.
      properties:
        disabledRole:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device entered OT_DEVICE_ROLE_DISABLED role.
        detachedRole:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device entered OT_DEVICE_ROLE_DETACHED role.
        childRole:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device entered OT_DEVICE_ROLE_CHILD role.
        routerRole:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device entered OT_DEVICE_ROLE_ROUTER role.
        leaderRole:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device entered OT_DEVICE_ROLE_LEADER role.
        attachAttempts:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of attach attempts while device was detached.
        partitionIdChanges:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of changes to partition ID.
        betterPartitionAttachAttempts:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of attempts to attach to a better partition.
        parentChanges:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Number of times device changed its parent.
        disabledTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: >-
            Number of milliseconds device has been in OT_DEVICE_ROLE_DISABLED
            role.
        detachedTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: >-
            Number of milliseconds device has been in OT_DEVICE_ROLE_DETACHED
            role.
        childTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Number of milliseconds device has been in OT_DEVICE_ROLE_CHILD role.
        routerTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: >-
            Number of milliseconds device has been in OT_DEVICE_ROLE_ROUTER
            role.
        leaderTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: >-
            Number of milliseconds device has been in OT_DEVICE_ROLE_LEADER
            role.
        trackedTime:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Number of milliseconds tracked by previous counters.
    BrCounters:
      type: object
      description: Counters of packets forwarded via Border Routing.
      properties:
        inboundUnicastPackets:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for inbound unicast packets.
        inboundUnicastBytes:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for inbound unicast bytes.
        inboundMulticastPackets:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for inbound multicast packets.
        inboundMulticastBytes:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for inbound multicast bytes.
        outboundUnicastPackets:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for outbound unicast packets.
        outboundUnicastBytes:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for outbound unicast bytes.
        outboundMulticastPackets:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for outbound multicast packets.
        outboundMulticastBytes:
          $ref: '#/components/schemas/UnsignedInt64'
          description: Count for outbound multicast bytes.
        raRx:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of received RA (Router Advertisement) packets.
        raTxSuccess:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of RA packets successfully transmitted.
        raTxFailed:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of RA packets failed to transmit.
        rsRx:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of received RS (Router Solicitation) packets.
        rsTxSuccess:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of RS packets successfully transmitted.
        rsTxFailed:
          $ref: '#/components/schemas/UnsignedInt32'
          description: The number of RS packets failed to transmit.
    ThreadRouterStatsEntry:
      type: object
      required:
        - keys
      properties:
        keys:
          $ref: '#/components/schemas/ThreadInterfaceKeys'
        routerTrafficCounters:
          $ref: '#/components/schemas/TrafficCounters'
          description: This corresponds to the wpan0 interface.
        vethTrafficCounters:
          $ref: '#/components/schemas/TrafficCounters'
          description: This corresponds to the veth0 interface.
        nat64ProtocolCounters:
          $ref: '#/components/schemas/Nat64ProtocolCounters'
        nat64ErrorCounters:
          $ref: '#/components/schemas/Nat64ErrorCounters'
        macCounters:
          $ref: '#/components/schemas/MacCounters'
        mleCounters:
          $ref: '#/components/schemas/MleCounters'
        brCounters:
          $ref: '#/components/schemas/BrCounters'
    ThreadRouterStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadRouterStatsEntry'
    IotStatsCallbackElement:
      type: object
      properties:
        threadNeighborRouterStats:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborRouterStatsCallbackElement'
        threadNeighborChildStats:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborChildStatsCallbackElement'
        threadRouterStats:
          type: array
          items:
            $ref: '#/components/schemas/ThreadRouterStatsCallbackElement'
    ThreadEventType:
      type: string
      enum:
        - THREAD_NEIGHBOR_STATE
        - THREAD_ROUTER_STATE
        - THREAD_NEIGHBOR_CHILD_STATE_CHANGE
        - THREAD_NEIGHBOR_ROUTER_STATE_CHANGE
        - THREAD_ROUTER_STATE_CHANGE
        - THREAD_NEIGHBOR_CHILD_FULL_STATE
        - THREAD_NEIGHBOR_ROUTER_FULL_STATE
      example: THREAD_NEIGHBOR_STATE
    ThreadEventSubscriptionRequest:
      description: The request to subscribe for events and state changes.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/ThreadEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: THREAD_NEIGHBOR_STATE
          - type: THREAD_ROUTER_STATE
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    ThreadMleLinkMode:
      type: object
      description: The MLE Link Mode configuration.
      properties:
        rxOnWhenIdle:
          type: boolean
          description: >-
            Does the device keeps its radio receiver on when it is not
            transmitting?
        fullThreadDevice:
          type: boolean
          description: >-
            A Full Thread Device (FTD) always has its radio on, subscribes to
            the all-routers multicast address, and maintains IPv6 address
            mappings.
        fullNetworkData:
          type: boolean
          description: Devices that have full network data are router-elgibile devices.
    ThreadNeighborRouterStateEntry:
      required:
        - keys
      allOf:
        - properties:
            keys:
              $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
            threadMode:
              $ref: '#/components/schemas/ThreadMleLinkMode'
            threadVersion:
              $ref: '#/components/schemas/UnsignedInt16'
              description: Thread version of the neighbor.
    ThreadNeighborRouterStateCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborRouterStateEntry'
    ThreadNeighborChildStateEntry:
      type: object
      required:
        - keys
      properties:
        keys:
          $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
        childId:
          $ref: '#/components/schemas/UnsignedInt16'
          description: Child ID
        timeout:
          $ref: '#/components/schemas/UnsignedInt32'
          description: >-
            The maximum time a child will stay connected to a parent (router or
            leader) without hearing from it.
        supervisionInterval:
          $ref: '#/components/schemas/UnsignedInt16'
          description: >-
            If there is no transmission to the Child within the supervision
            interval, the Parent will send a supervision message (with empty
            payload) to the Child.
        netdataVersion:
          $ref: '#/components/schemas/UnsignedInt8'
          description: Network Data Version.
        cslSynced:
          type: boolean
          description: >-
            Is the child CSL (Coordinated Sampled Listening) synchronized with
            the parent to wake up and receive pending messages from the parent
            at scheduled intervals.
        ipAddresses:
          type: array
          items:
            type: string
            format: ipv6
          description: Get the list of IP addresses stored for MTD children.
    ThreadNeighborChildStateCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborChildStateEntry'
    ThreadRouterKeys:
      description: Information to uniquely identify a Thread router device.
      type: object
      required:
        - eui64
      allOf:
        - $ref: '#/components/schemas/ThreadDeviceKeys'
        - properties:
            eui64:
              $ref: '#/components/schemas/Eui64'
      example:
        eui64: 00124b0026e9076e
        rloc16: '2800'
        extMac: 0ab507cb5467370a
    ThreadInterfaceRouterKeys:
      type: object
      allOf:
        - $ref: '#/components/schemas/ThreadInterfaceKeys'
        - $ref: '#/components/schemas/ThreadRouterKeys'
    ThreadDeviceRole:
      type: string
      enum:
        - LEADER
        - ROUTER
        - CHILD
        - DETACHED
        - DISABLED
        - OFFLINE
      description: >
        State of the device in a Thread network:

        - 'LEADER': The device is connected to the Thread network and is acting
        as the Leader.

        - 'ROUTER': The device is connected to the Thread network and is acting
        as a router.

        - 'CHILD': The device is connected to the Thread network and is
        participating in the network as an end-device.

        - 'DETACHED': The device is connected to the Thread network, but is not
        currently participating in the network as a router or end-device.

        - 'DISABLED': The Thread stack is disabled.

        - 'OFFLINE": The device is not connected to any Thread network.
    ThreadVersion:
      type: object
      properties:
        threadVersion:
          type: string
          description: The Thread version number.
        buildVersion:
          type: string
          description: Thread build version information.
        apiVersion:
          type: string
          description: Thread API version.
        rcpVersion:
          type: string
          description: The RCP version string.
    InterfaceState:
      type: object
      required:
        - isActive
      properties:
        isActive:
          type: boolean
          description: Is the network interface active?
        isBroadcast:
          type: boolean
          description: Does the network interface support broadcast traffic?
        isLoopback:
          type: boolean
          description: >-
            Is the network interface the loopback interface? Can it be used to
            send traffic to itself?
        isPointToPoint:
          type: boolean
          description: >-
            Is the network interface a point-to-point link which connects
            directly to another network interface?
        isRunning:
          type: boolean
          description: Is the network interface transmitting and receiving packets?
        isArp:
          type: boolean
          description: >-
            Does the network interface use the Address Resolution Protocol (ARP)
            for mapping between IP and MAC addresses?
        isPromisc:
          type: boolean
          description: >-
            Is the network interface in promiscuous mode, meaning it can receive
            all packets, not just those addressed to it.
        isAllMulti:
          type: boolean
          description: Does the network interface receive all multicast packets?
        isMulticast:
          type: boolean
          description: >-
            Does the network interface support multicasting, i.e., sending
            packets to multiple destinations in a single transmit operation?
        isDynamic:
          type: boolean
          description: Does the network interface use dynamic IP configuration?
    Ipv4Settings:
      type: object
      properties:
        address:
          type: string
          format: ipv4
        mask:
          type: string
          format: ipv4
        broadcast:
          type: string
          format: ipv4
    Ipv6AddressType:
      type: string
      enum:
        - LINK_LOCAL_ADDRESS
        - MESH_LOCAL_EID_ADDRESS
        - ROUTING_LOCATOR
        - ANYCAST_LOCATOR
        - GLOBAL_UNIQUE_ADDRESS
      description: >
        Common unicast IPv6 address types.

        - 'LINK_LOCAL_ADDRESS': An Endpoint Identifier (EID) that identifies a
        Thread interface reachable by single radio transmission. Always has
        prefix: fe80://16. Not routable. (Link Local Prefix + IID(Extended MAC))

        - 'MESH_LOCALEID_ADDRESS': An EID that identifies a Thread interface
        independent of network topology. Can be used to reach a Thread interface
        within the same Thread partition. Always has prefix: fd00::/8. Does not
        change as the topology changes. (Mesh Local Prefix + IID)

        - 'ROUTING_LOCATOR (RLOC)': Identifies a Thread interface based on its
        location in the network topology. Changes as the topology changes. (Mesh
        Local Prefix + IID(RLOC16))

        - 'ANYCAST_LOCATOR (ALOC)': Identifies a Thread interface via RLOC
        lookup, when the RLOC of the destination is not known. (Mesh Local
        Prefix + IID(fcXX ALOC16 destination)). Leader (0xfc00), DHCPv6 Agent
        (0xfc01-0xfc0f), Service (0xfc10-0xfc2f), Commissioner (0xfc30-0xfc37),
        Neighbor Discovery Agent (0xfc40-0xfc4e)

        - 'GLOBAL_UNIQUE_ADDRESS': An EID that identifies a Thread interface on
        a global scope, beyond the Thread network. Always has prefix: 2000::/3.
    Ipv6AddressScope:
      type: string
      enum:
        - LINK_LOCAL
        - MESH_LOCAL
        - GLOBAL
      description: |
        Specifies the scope of the unicast address in the Thread network.
        - 'LINK_LOCAL': All interfaces reachable by a single radio transmission.
        - 'MESH_LOCAL': All interfaces reachable with the same Thread network.
        - 'GLOBAL': All interfaces reachable from outside the Thread network.
    Ipv6Address1:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Ipv6AddressType'
        scope:
          $ref: '#/components/schemas/Ipv6AddressScope'
        address:
          type: string
          format: ipv6
    ipv6MulticastAddressType:
      type: string
      enum:
        - LINK_LOCAL_ALL_THREAD_NODES
        - REALM_LOCAL_ALL_THREAD_NODES
      description: >
        Common IPv6 multicast address types.

        - 'LINK_LOCAL_ALL_THREAD_NODES': Is used for communication with all
        Thread devices within the same network segment.

        - 'REALM_LOCAL_ALL_THREAD_NODES': Is used for communication with all
        Thread devices within the network, regardless of the network segment.
    Ipv6MulticastAddress:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ipv6MulticastAddressType'
        address:
          type: string
          format: ipv6
    Ipv6Settings:
      type: object
      properties:
        ipv6Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Address1'
        ipv6MulticastAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6MulticastAddress'
    NetworkInterface:
      type: object
      required:
        - name
        - state
      properties:
        name:
          type: string
        state:
          $ref: '#/components/schemas/InterfaceState'
        mtu:
          description: >-
            Maximum Transmission Unit, the size of the largest packet that a
            network protocol can transmit.
          allOf:
            - $ref: '#/components/schemas/UnsignedInt16'
        hwAddr:
          description: The MAC address of the network interface.
          allOf:
            - $ref: '#/components/schemas/MacAddress'
        ipv4Settings:
          $ref: '#/components/schemas/Ipv4Settings'
        ipv6Settings:
          $ref: '#/components/schemas/Ipv6Settings'
    Ipv6Prefix:
      type: string
      description: 'fd00:1234:5678::/64'
    ThreadNetDataOnMeshPrefixFlags:
      type: object
      properties:
        preferred:
          type: boolean
          description: Whether prefix is preferred.
        slaac:
          type: boolean
          description: >-
            Whether prefix can be used for stateless IPv6 address
            auto-configuration (SLAAC).
        dhcp:
          type: boolean
          description: Whether border router is DHCPv6 Agent.
        configure:
          type: boolean
          description: Whether DHCPv6 Agent supplying other config data.
        defaultRoute:
          type: boolean
          description: Whether border router is a default router for prefix.
        onMesh:
          type: string
          description: Whether this prefix is considered on-mesh.
        stable:
          type: boolean
          description: Whether this configuration is considered Stable Network Data.
        ndDns:
          type: boolean
          description: Whether this border router can supply DNS information via ND.
        dp:
          type: boolean
          description: Whether prefix is a Thread Domain Prefix (added since Thread 1.2).
    ThreadRoutePreference:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
      description: >
        Used to select one route over another when there are multiple paths to
        the same destination.

        - 'LOW': Low route preference.

        - 'MEDIUM': Medium route preference.

        - 'HIGH': High route preference.
    ThreadNetDataOnMeshPrefix:
      type: object
      required:
        - prefix
      properties:
        prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
        flags:
          $ref: '#/components/schemas/ThreadNetDataOnMeshPrefixFlags'
        preference:
          $ref: '#/components/schemas/ThreadRoutePreference'
        addedBy:
          $ref: '#/components/schemas/ThreadDeviceKeys'
          description: The device that added the on-mesh prefix.
      description: On Mesh Prefix in the partition's Network Data.
    ThreadNetDataRoute:
      type: object
      required:
        - prefix
      properties:
        prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
        nat64:
          type: boolean
          description: Whether this is a NAT64 prefix.
        stable:
          type: boolean
          description: Whether this configuration is considered Stable Network Data.
        preference:
          $ref: '#/components/schemas/ThreadRoutePreference'
        addedBy:
          $ref: '#/components/schemas/ThreadDeviceKeys'
          description: The device which added the route prefix.
      description: External route in the partition's Network Data.
    ThreadNetDataService:
      type: object
      properties:
        enterpriseNumber:
          $ref: '#/components/schemas/UnsignedInt32'
          description: IANA Enterprise Number
        serviceData:
          type: string
          pattern: '^[0-9a-fA-F]+$'
          description: Service data bytes. (hex digits)
        serverData:
          type: string
          pattern: '^[0-9a-fA-F]+$'
          description: Server data bytes. (hex digits)
        stable:
          type: boolean
          description: Whether this configuration is considered Stable Network Data.
        addedBy:
          $ref: '#/components/schemas/ThreadDeviceKeys'
          description: The device which added this service entry.
    ThreadNetworkData:
      type: object
      properties:
        length:
          $ref: '#/components/schemas/UnsignedInt8'
          description: >-
            Get the current length (number of bytes) of the Partition's Thread
            Network Data.
        maxLength:
          $ref: '#/components/schemas/UnsignedInt8'
          description: >-
            Get the maximum observed length of the Thread Network Data since
            Thread stack initialization or since the last call to netdata
            maxlength reset.
        prefixes:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNetDataOnMeshPrefix'
        routes:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNetDataRoute'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNetDataService'
    ThreadChannel:
      type: integer
      description: '802.15.4 channel number, 11-26'
    ThreadChannelMask:
      type: string
      minLength: 8
      maxLength: 8
      pattern: '^[0-9a-fA-F]+$'
      description: >-
        The Channel Mask represents a bit mask indicating which channels are
        allowed or enabled for communication within a Thread network. (8 hex
        digits)
    ExtendedPanId:
      type: string
      minLength: 16
      maxLength: 16
      pattern: '^[0-9a-fA-F]+$'
      description: The Extended Personal Area Network (PAN) ID. (16 hex digits)
    NetworkKey:
      type: string
      minLength: 32
      maxLength: 32
      pattern: '^[0-9a-fA-F]+$'
      description: >-
        The network key is used to secure access to the Thread network. It is
        used to encrypt and authenticate all messages on the network. (32 hex
        digits)
    ThreadNetworkName:
      type: string
      minLength: 1
      maxLength: 16
      description: >-
        A human-readable name for the network, up to 16 bytes in length. The
        Network Name also appears in the Discovery Response or IEEE 802.15.4
        beacon messages sent by members of the Thread Network.
    PanId:
      type: string
      minLength: 4
      maxLength: 4
      pattern: '^[0-9a-fA-F]+$'
      description: The Personal Area Network (PAN) ID. (4 hex digits) 0xFFFF is reserved.
    Pskc:
      type: string
      minLength: 32
      maxLength: 32
      pattern: '^[0-9a-fA-F]+$'
      description: >-
        The PSKc (Pre-Shared Key for the Commissioner) is derived from the
        Commissioner Credential, the Extended PAN ID, and the Network Name. (32
        hex digits)
    ThreadSecurityPolicy:
      type: object
      properties:
        obtainNetworkKeyEnabled:
          type: boolean
          description: Obtaining the Network Key for out-of-band commissioning is enabled.
        nativeCommissioningEnabled:
          type: boolean
          description: Native Commissioning using PSKc is allowed.
        routersEnabled:
          type: boolean
          description: Thread 1.0/1.1.x Routers are enabled.
        externalCommissioningEnabled:
          type: boolean
          description: External Commissioner authentication is allowed.
        beaconsEnabled:
          type: boolean
          description: To BLE link is enabled.
        commercialCommissioningEnabled:
          type: boolean
          description: Commercial Commissioning is enabled.
        autonomousEnrollmentEnabled:
          type: boolean
          description: Autonomous Enrollment is enabled.
        networkKeyProvisioningEnabled:
          type: boolean
          description: Network Key Provisioning is enabled.
        nonCcmRoutersEnabled:
          type: boolean
          description: Non-CCM Routers enabled.
    ThreadDatasetActive:
      type: object
      required:
        - networkName
        - networkKey
        - panId
        - extPanId
      properties:
        activeTimestamp:
          type: integer
          description: >-
            Represents a timestamp value that is used to identify the dataset
            that is currently in use or 'active' in the network. It does not
            represent a real time or date, but it's rather an arbitrary counter
            that is incremented when changes occur.
        channel:
          $ref: '#/components/schemas/ThreadChannel'
        channelMask:
          $ref: '#/components/schemas/ThreadChannelMask'
        extPanId:
          $ref: '#/components/schemas/ExtendedPanId'
        meshLocalPrefix:
          $ref: '#/components/schemas/Ipv6Prefix'
          description: >-
            The network prefix for mesh-local communications, i.e.
            fd3d:b50b:f96d:722d::/64
        networkKey:
          $ref: '#/components/schemas/NetworkKey'
        networkName:
          $ref: '#/components/schemas/ThreadNetworkName'
        panId:
          $ref: '#/components/schemas/PanId'
        pskc:
          $ref: '#/components/schemas/Pskc'
        securityPolicy:
          $ref: '#/components/schemas/ThreadSecurityPolicy'
    LeaderService:
      type: object
      required:
        - partitionId
      properties:
        partitionId:
          $ref: '#/components/schemas/UnsignedInt32'
          description: Partition ID
        weighting:
          $ref: '#/components/schemas/UnsignedInt8'
          description: Leader Weight
        fullNetworkDataVersion:
          $ref: '#/components/schemas/UnsignedInt8'
          description: Full Network Data Version
        stableNetworkDataVersion:
          $ref: '#/components/schemas/UnsignedInt8'
          description: Stable Network Data Version
    BorderRouterState:
      type: string
      enum:
        - RUNNING
        - STOPPED
        - DISABLED
        - UNINITIALIZED
      description: >
        The state of the Border Routing Manager.

        - 'RUNNING': Routing Manager is initialized, enabled, and running.

        - 'STOPPED': Routing Manager in initialized and enabled but currently
        stopped.

        - 'DISABLED': Routing Manager is initialized but disabled.

        - 'UNINITIALIZED': Routing Manager is uninitialized.
    Ipv6FavoredPrefix:
      type: object
      properties:
        prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
        preference:
          $ref: '#/components/schemas/ThreadRoutePreference'
    BorderRouterService:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/BorderRouterState'
        nat64LocalPrefix:
          $ref: '#/components/schemas/Ipv6Prefix'
          description: The local NAT64 prefix of the Border Router.
        nat64FavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefix'
          description: The favored NAT64 prefix of the Border Router.
        nat64OmrLocalPrefix:
          $ref: '#/components/schemas/Ipv6Prefix'
          description: The local off-mesh-routable prefix of the Border Router.
        nat64OmrFavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefix'
          description: The favored off-mesh-routable prefix of the Border Router.
        nat64OnlinkLocalPrefix:
          $ref: '#/components/schemas/Ipv6Prefix'
          description: The local on-link prefix of the Border Router.
        nat64OnlinkFavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefix'
          description: The favored onlink prefix of the Border Router.
    BackboneBorderRouterState:
      type: string
      enum:
        - PRIMARY
        - SECONDARY
        - DISABLED
      description: |
        The state of the Backbone router.
        - 'PRIMARY': The Primary Backbone Router.
        - 'SECONDARY': Secondary Backbone Router.
        - 'DISABLED': Backbone function is disabled.
    BackboneBorderRouterService:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/BackboneBorderRouterState'
    BorderAgentState:
      type: string
      enum:
        - ACTIVE
        - STARTED
        - STOPPED
      description: |
        The state of the Border Agent service.
        - 'ACTIVE': Border agent is connected with external commissioner.
        - 'STARTED': Border agent is started.
        - 'STOPPED': Border agent role is disabled.
    BorderAgentService:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/BorderAgentState'
        udpPort:
          $ref: '#/components/schemas/UnsignedInt16'
          description: UDP port of the Border Agent.
    CommissionerState:
      type: string
      enum:
        - ACTIVE
        - PETITION
        - DISABLED
      description: |
        Defines the state of the Commissioner.
        - 'ACTIVE': The Commissioner role is active.
        - 'PETITION': Currently petitioning to become a Commissioner.
        - 'DISABLED': The Commissioner role is disabled.
    CommissionerService:
      type: object
      required:
        - state
      properties:
        state:
          $ref: '#/components/schemas/CommissionerState'
    Nat64PrefixManagerState:
      type: string
      enum:
        - ACTIVE
        - IDLE
        - NOT_RUNNING
        - DISABLED
      description: >
        The state of the NAT64 Prefix Manager.

        - 'ACTIVE': NAT64 prefix manager is enabled, and is publishing NAT64
        prefix to the Thread network.

        - 'IDLE': NAT64 prefix manager is enabled, but is not publishing a NAT64
        prefix. Usually when there is another border router publishing a NAT64
        prefix with higher priority.

        - 'NOT_RUNNING': NAT64 prefix manager is enabled, but is not running
        (because the routing manager is not running).

        - 'DISABLED': NAT64 prefix manager is disabled.
    Nat64TranslatorState:
      type: string
      enum:
        - ACTIVE
        - NOT_RUNNING
        - DISABLED
      description: >
        The state of the NAT64 Translator.

        - 'ACTIVE': NAT64 translator is enabled, and is translating packets.

        - 'NOT_RUNNING': NAT64 translator is enabled, but the translator is not
        configured with a valid NAT64 prefix and a CIDR.

        - 'DISABLED': NAT64 translator is disabled.
    Nat64Service:
      type: object
      required:
        - prefixManagerState
        - translatorState
      properties:
        prefixManagerState:
          $ref: '#/components/schemas/Nat64PrefixManagerState'
        translatorState:
          $ref: '#/components/schemas/Nat64TranslatorState'
        translatorCidr:
          type: string
          description: Gets the IPv4 CIDR configured in the NAT64 translator.
    ThreadRouterStateEntry:
      type: object
      required:
        - keys
        - state
      properties:
        keys:
          $ref: '#/components/schemas/ThreadInterfaceRouterKeys'
        state:
          $ref: '#/components/schemas/ThreadDeviceRole'
        threadMode:
          $ref: '#/components/schemas/ThreadMleLinkMode'
        threadVersion:
          $ref: '#/components/schemas/ThreadVersion'
        threadPlatform:
          type: string
          description: The Thread platform.
        region:
          type: string
          minLength: 2
          maxLength: 2
          description: >-
            The radio region format is the 2-bytes ascii representation of the
            ISO 3166 alpha-2 code.
        txPower:
          $ref: '#/components/schemas/SignedInt8'
          description: Get the transmit power in dBm.
        routerInterface:
          $ref: '#/components/schemas/NetworkInterface'
          description: This corresponds to the wpan0 interface.
        veth0:
          $ref: '#/components/schemas/NetworkInterface'
          description: This corresponds to the veth0 interface.
        networkData:
          $ref: '#/components/schemas/ThreadNetworkData'
        dataSetActive:
          $ref: '#/components/schemas/ThreadDatasetActive'
        leaderService:
          $ref: '#/components/schemas/LeaderService'
        borderRouterService:
          $ref: '#/components/schemas/BorderRouterService'
        backboneBorderRouterService:
          $ref: '#/components/schemas/BackboneBorderRouterService'
        borderAgentService:
          $ref: '#/components/schemas/BorderAgentService'
        commissionerService:
          $ref: '#/components/schemas/CommissionerService'
        nat64Service:
          $ref: '#/components/schemas/Nat64Service'
    ThreadRouterStateCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadRouterStateEntry'
    Status:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      description: |
        Defines the current state of the entity
        - 'ACTIVE': Entity connected
        - 'INACTIVE': Entity disconnected
    StatusChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/Status'
        new:
          $ref: '#/components/schemas/Status'
    BooleanChangeElement:
      type: object
      properties:
        old:
          type: boolean
        new:
          type: boolean
    ThreadMleLinkModeChangeElement:
      type: object
      properties:
        rxOnWhenIdle:
          $ref: '#/components/schemas/BooleanChangeElement'
        fullThreadDevice:
          $ref: '#/components/schemas/BooleanChangeElement'
        fullNetworkData:
          $ref: '#/components/schemas/BooleanChangeElement'
    UnsignedInt16ChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/UnsignedInt16'
        new:
          $ref: '#/components/schemas/UnsignedInt16'
    ThreadNeighborRouterStateChangeEntry:
      required:
        - keys
      allOf:
        - properties:
            keys:
              $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
            status:
              $ref: '#/components/schemas/StatusChangeElement'
            threadMode:
              $ref: '#/components/schemas/ThreadMleLinkModeChangeElement'
            threadVersion:
              $ref: '#/components/schemas/UnsignedInt16ChangeElement'
    ThreadNeighborRouterStateChangeCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborRouterStateChangeEntry'
    UnsignedInt32ChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/UnsignedInt32'
        new:
          $ref: '#/components/schemas/UnsignedInt32'
    UnsignedInt8ChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/UnsignedInt8'
        new:
          $ref: '#/components/schemas/UnsignedInt8'
    Ipv6AddressesChangeElement:
      type: object
      properties:
        old:
          type: array
          items:
            type: string
            format: ipv6
        new:
          type: array
          items:
            type: string
            format: ipv6
    ThreadNeighborChildStateChangeEntry:
      type: object
      required:
        - keys
      properties:
        keys:
          $ref: '#/components/schemas/ThreadInterfaceDeviceKeys'
        status:
          $ref: '#/components/schemas/StatusChangeElement'
        childId:
          $ref: '#/components/schemas/UnsignedInt16ChangeElement'
        timeout:
          $ref: '#/components/schemas/UnsignedInt32ChangeElement'
        supervisionInterval:
          $ref: '#/components/schemas/UnsignedInt16ChangeElement'
        netdataVersion:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
        cslSynced:
          $ref: '#/components/schemas/BooleanChangeElement'
        ipAddresses:
          $ref: '#/components/schemas/Ipv6AddressesChangeElement'
    ThreadNeighborChildStateChangeCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNeighborChildStateChangeEntry'
    ThreadDeviceRoleChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/ThreadDeviceRole'
        new:
          $ref: '#/components/schemas/ThreadDeviceRole'
    StringChangeElement:
      type: object
      properties:
        old:
          type: string
        new:
          type: string
    ThreadVersionChangeElement:
      type: object
      properties:
        threadVersion:
          $ref: '#/components/schemas/StringChangeElement'
        buildVersion:
          $ref: '#/components/schemas/StringChangeElement'
        apiVersion:
          $ref: '#/components/schemas/StringChangeElement'
        rcpVersion:
          $ref: '#/components/schemas/StringChangeElement'
    RegionChangeElement:
      type: object
      properties:
        old:
          type: string
          minLength: 2
          maxLength: 2
        new:
          type: string
          minLength: 2
          maxLength: 2
    SignedInt8ChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/SignedInt8'
        new:
          $ref: '#/components/schemas/SignedInt8'
    InterfaceStateChangeElement:
      type: object
      properties:
        isActive:
          $ref: '#/components/schemas/BooleanChangeElement'
        isBroadcast:
          $ref: '#/components/schemas/BooleanChangeElement'
        isLoopback:
          $ref: '#/components/schemas/BooleanChangeElement'
        isPointToPoint:
          $ref: '#/components/schemas/BooleanChangeElement'
        isRunning:
          $ref: '#/components/schemas/BooleanChangeElement'
        isArp:
          $ref: '#/components/schemas/BooleanChangeElement'
        isPromisc:
          $ref: '#/components/schemas/BooleanChangeElement'
        isAllMulti:
          $ref: '#/components/schemas/BooleanChangeElement'
        isMulticast:
          $ref: '#/components/schemas/BooleanChangeElement'
        isDynamic:
          $ref: '#/components/schemas/BooleanChangeElement'
    MacAddressChangeElement:
      type: object
      properties:
        macAddress:
          type: object
          properties:
            old:
              type: string
              pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
              example: '00:04:96:98:65:1C'
            new:
              type: string
              pattern: '^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$'
              example: '00:04:96:98:65:1C'
    Ipv4AddressChangeElement:
      type: object
      properties:
        old:
          type: string
          format: ipv4
        new:
          type: string
          format: ipv4
    Ipv4SettingsChangeElement:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Ipv4AddressChangeElement'
        mask:
          $ref: '#/components/schemas/Ipv4AddressChangeElement'
        broadcast:
          $ref: '#/components/schemas/Ipv4AddressChangeElement'
    Ipv6SettingsChangeElement:
      type: object
      properties:
        ipv6Addresses:
          type: object
          properties:
            old:
              type: array
              items:
                $ref: '#/components/schemas/Ipv6Address1'
            new:
              type: array
              items:
                $ref: '#/components/schemas/Ipv6Address1'
        ipv6MulticastAddresses:
          type: object
          properties:
            old:
              type: array
              items:
                $ref: '#/components/schemas/Ipv6MulticastAddress'
            new:
              type: array
              items:
                $ref: '#/components/schemas/Ipv6MulticastAddress'
    NetworkInterfaceChangeElement:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringChangeElement'
        state:
          $ref: '#/components/schemas/InterfaceStateChangeElement'
        mtu:
          $ref: '#/components/schemas/UnsignedInt16ChangeElement'
        hwAddr:
          $ref: '#/components/schemas/MacAddressChangeElement'
        ipv4Settings:
          $ref: '#/components/schemas/Ipv4SettingsChangeElement'
        ipv6Settings:
          $ref: '#/components/schemas/Ipv6SettingsChangeElement'
    ThreadNetworkDataChangeElement:
      type: object
      properties:
        length:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
        maxLength:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
        prefixes:
          type: object
          properties:
            old:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataOnMeshPrefix'
            new:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataOnMeshPrefix'
        routes:
          type: object
          properties:
            old:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataRoute'
            new:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataRoute'
        services:
          type: object
          properties:
            old:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataService'
            new:
              type: array
              items:
                $ref: '#/components/schemas/ThreadNetDataService'
    ThreadSecurityPolicyChangeElement:
      type: object
      properties:
        obtainNetworkKeyEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        nativeCommissioningEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        routersEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        externalCommissioningEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        beaconsEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        commercialCommissioningEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        autonomousEnrollmentEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        networkKeyProvisioningEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
        nonCcmRoutersEnabled:
          $ref: '#/components/schemas/BooleanChangeElement'
    ThreadDatasetActiveChangeElement:
      type: object
      properties:
        activeTimestamp:
          type: object
          properties:
            old:
              type: integer
            new:
              type: integer
        channel:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ThreadChannel'
            new:
              $ref: '#/components/schemas/ThreadChannel'
        channelMask:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ThreadChannelMask'
            new:
              $ref: '#/components/schemas/ThreadChannelMask'
        extPanId:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ExtendedPanId'
            new:
              $ref: '#/components/schemas/ExtendedPanId'
        meshLocalPrefix:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/Ipv6Prefix'
            new:
              $ref: '#/components/schemas/Ipv6Prefix'
        networkKey:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/NetworkKey'
            new:
              $ref: '#/components/schemas/NetworkKey'
        networkName:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ThreadNetworkName'
            new:
              $ref: '#/components/schemas/ThreadNetworkName'
        panId:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/PanId'
            new:
              $ref: '#/components/schemas/PanId'
        pskc:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/Pskc'
            new:
              $ref: '#/components/schemas/Pskc'
        securityPolicy:
          $ref: '#/components/schemas/ThreadSecurityPolicyChangeElement'
    LeaderServiceChangeElement:
      type: object
      properties:
        partitionId:
          $ref: '#/components/schemas/UnsignedInt32ChangeElement'
        weighting:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
        fullNetworkDataVersion:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
        stableNetworkDataVersion:
          $ref: '#/components/schemas/UnsignedInt8ChangeElement'
    Ipv6PrefixChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/Ipv6Prefix'
        new:
          $ref: '#/components/schemas/Ipv6Prefix'
    Ipv6FavoredPrefixChangeElement:
      type: object
      properties:
        prefix:
          $ref: '#/components/schemas/Ipv6PrefixChangeElement'
        preference:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ThreadRoutePreference'
            new:
              $ref: '#/components/schemas/ThreadRoutePreference'
    BorderRouterServiceChangeElement:
      type: object
      properties:
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/BorderRouterState'
            new:
              $ref: '#/components/schemas/BorderRouterState'
        nat64LocalPrefix:
          $ref: '#/components/schemas/Ipv6PrefixChangeElement'
        nat64FavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefixChangeElement'
        nat64OmrLocalPrefix:
          $ref: '#/components/schemas/Ipv6PrefixChangeElement'
        nat64OmrFavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefixChangeElement'
        nat64OnlinkLocalPrefix:
          $ref: '#/components/schemas/Ipv6PrefixChangeElement'
        nat64OnlinkFavoredPrefix:
          $ref: '#/components/schemas/Ipv6FavoredPrefixChangeElement'
    BackboneBorderRouterServiceChangeElement:
      type: object
      properties:
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/BackboneBorderRouterState'
            new:
              $ref: '#/components/schemas/BackboneBorderRouterState'
    BorderAgentServiceChangeElement:
      type: object
      properties:
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/BorderAgentState'
            new:
              $ref: '#/components/schemas/BorderAgentState'
        udpPort:
          $ref: '#/components/schemas/UnsignedInt16ChangeElement'
    CommissionerServiceChangeElement:
      type: object
      properties:
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/CommissionerState'
            new:
              $ref: '#/components/schemas/CommissionerState'
    Nat64ServiceChangeElement:
      type: object
      properties:
        prefixManagerState:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/Nat64PrefixManagerState'
            new:
              $ref: '#/components/schemas/Nat64PrefixManagerState'
        translatorState:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/Nat64TranslatorState'
            new:
              $ref: '#/components/schemas/Nat64TranslatorState'
        translatorCidr:
          $ref: '#/components/schemas/StringChangeElement'
    ThreadRouterStateChangeEntry:
      type: object
      required:
        - keys
      properties:
        keys:
          $ref: '#/components/schemas/ThreadInterfaceRouterKeys'
        state:
          $ref: '#/components/schemas/ThreadDeviceRoleChangeElement'
        threadMode:
          $ref: '#/components/schemas/ThreadMleLinkModeChangeElement'
        threadVersion:
          $ref: '#/components/schemas/ThreadVersionChangeElement'
        threadPlatform:
          $ref: '#/components/schemas/StringChangeElement'
        region:
          $ref: '#/components/schemas/RegionChangeElement'
        txPower:
          $ref: '#/components/schemas/SignedInt8ChangeElement'
        routerInterface:
          $ref: '#/components/schemas/NetworkInterfaceChangeElement'
        veth0:
          $ref: '#/components/schemas/NetworkInterfaceChangeElement'
        networkData:
          $ref: '#/components/schemas/ThreadNetworkDataChangeElement'
        dataSetActive:
          $ref: '#/components/schemas/ThreadDatasetActiveChangeElement'
        leaderService:
          $ref: '#/components/schemas/LeaderServiceChangeElement'
        borderRouterService:
          $ref: '#/components/schemas/BorderRouterServiceChangeElement'
        backboneBorderRouterService:
          $ref: '#/components/schemas/BackboneBorderRouterServiceChangeElement'
        borderAgentService:
          $ref: '#/components/schemas/BorderAgentServiceChangeElement'
        commissionerService:
          $ref: '#/components/schemas/CommissionerServiceChangeElement'
        nat64Service:
          $ref: '#/components/schemas/Nat64ServiceChangeElement'
    ThreadRouterStateChangeCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ThreadRouterStateChangeEntry'
    ThreadNeighborRouterFullStateCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                type: object
                properties:
                  routers:
                    type: array
                    items:
                      $ref: '#/components/schemas/ThreadNeighborRouterStateEntry'
    ThreadNeighborChildFullStateCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                type: object
                properties:
                  children:
                    type: array
                    items:
                      $ref: '#/components/schemas/ThreadNeighborChildStateEntry'
    IotStateCallbackElement:
      type: object
      properties:
        threadNeighborRouterState:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborRouterStateCallbackElement'
        threadNeighborChildState:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborChildStateCallbackElement'
        threadRouterState:
          type: array
          items:
            $ref: '#/components/schemas/ThreadRouterStateCallbackElement'
        threadNeighborRouterStateChange:
          type: array
          items:
            $ref: >-
              #/components/schemas/ThreadNeighborRouterStateChangeCallbackElement
        threadNeighborChildStateChange:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborChildStateChangeCallbackElement'
        threadRouterStateChange:
          type: array
          items:
            $ref: '#/components/schemas/ThreadRouterStateChangeCallbackElement'
        threadNeighborRouterFullState:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborRouterFullStateCallbackElement'
        threadNeighborChildFullState:
          type: array
          items:
            $ref: '#/components/schemas/ThreadNeighborChildFullStateCallbackElement'
    IsisEventType:
      type: string
      enum:
        - IsisAdjacencyStateChange
      example: IsisAdjacencyStateChange
    IsisEventSubscriptionRequest:
      description: The request to subscribe ISIS events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/IsisEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: IsisAdjacencyStateChange
        flushInterval: 1
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
    IsisAreaName:
      description: The ISIS area name.
      type: string
    IsisAdjacencyTagsElement:
      description: Information about ISIS adjacency state change.
      type: object
      properties:
        areaId:
          description: ISIS area id.
          type: string
        areaName:
          $ref: '#/components/schemas/IsisAreaName'
        areaRole:
          $ref: '#/components/schemas/IsisAreaType'
        nbrSysId:
          description: ISIS neighbor node system-id.
          type: string
        nbrHostName:
          description: ISIS neighbor host name.
          type: string
    IsisAdjacencyState:
      description: Indicates different ISIS adjacency states.
      type: string
      enum:
        - INIT
        - DOWN
        - UP
    IsisAdjacencyStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        tags:
          $ref: '#/components/schemas/IsisAdjacencyTagsElement'
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/IsisAdjacencyState'
            new:
              $ref: '#/components/schemas/IsisAdjacencyState'
      required:
        - keys
        - state
    IsisAdjacencyStateChangeCallbackElement:
      description: |
        Reports the ISIS adjacency state change event.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/IsisAdjacencyStateChangeEntry'
      example:
        name: IsisAdjacencyStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              name: '1:9'
              ifIndex: 232
            tags:
              areaId: string
              areaName: string
              areaRole: HOME
              nbrHostName: string
              nbrSysId: string
            state:
              old: UP
              new: DOWN
    IsisAdjacencyStateCallbackElement:
      type: object
      properties:
        isisAdjacencyStateChange:
          type: array
          items:
            $ref: '#/components/schemas/IsisAdjacencyStateChangeCallbackElement'
    IsisStatsType:
      type: string
      enum:
        - IsisStats
      example: IsisStats
    IsisStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/IsisStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: IsisStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    IsisKeysElement:
      description: Information to identify the ISIS system statistics.
      type: object
      properties:
        level:
          $ref: '#/components/schemas/IsisCircuitLevel'
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      required:
        - level
        - areaType
    IsisAuthFails:
      description: The number of times authentication has failed.
      type: integer
    IsisIDFieldLenMismatches:
      description: The number of times a mismatched ID length has been received.
      type: integer
    IsisStatsElement:
      type: object
      properties:
        corruptedLSPs:
          description: |
            The number of corrupted in-memory LSPs detected.
          type: integer
        authFails:
          $ref: '#/components/schemas/IsisAuthFails'
        manualAddrDropFromAreas:
          description: |
            The number of times a manual address has been dropped from
            the area.
          type: integer
        attemptToExMaxSeqNums:
          description: |
            The number of times the IS has attempted to exceed the
            maximum sequence number.
          type: integer
        seqNumSkips:
          description: |
            The number of times a sequence number skip has occurred.
          type: integer
        ownLSPPurges:
          description: |
            The number of times a zero-aged copy of the system's own LSP
            is received from some other node.
          type: integer
        idFieldLenMismatches:
          $ref: '#/components/schemas/IsisIDFieldLenMismatches'
        partitionChanges:
          description: |
            The number of partition changes.
          type: integer
        lspDBOverloads:
          description: |
            The number of times the LSP database has become overloaded.
          type: integer
    IsisTagsElement:
      description: Other information to identify the ISIS system statistics.
      type: object
      properties:
        areaName:
          $ref: '#/components/schemas/IsisAreaName'
    IsisStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/IsisKeysElement'
        stats:
          $ref: '#/components/schemas/IsisStatsElement'
        tags:
          $ref: '#/components/schemas/IsisTagsElement'
      required:
        - keys
    IsisStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/IsisStatsEntry'
      example:
        name: IsisStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              level: LEVEL1
              areaType: HOME
            stats:
              corruptedLSPs: 0
              authFails: 0
              manualAddrDropFromAreas: 0
              attemptToExMaxSeqNums: 0
              seqNumSkips: 0
              ownLSPPurges: 0
              idFieldLenMismatches: 0
              partitionChanges: 0
              lspDBOverloads: 0
            tags:
              areaName: string
    IsisStatsGroupCallbackElement:
      type: object
      properties:
        isisStats:
          type: array
          items:
            $ref: '#/components/schemas/IsisStatsCallbackElement'
    IsisIntStatsType:
      type: string
      enum:
        - IsisIntCountersStats
        - IsisIntL1ControlPacketCountersStats
      example: IsisIntCountersStats
    IsisIntStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/IsisIntStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: IsisIntCountersStats
            sampleCount: 6
            samplePeriod: 10
          - type: IsisIntL1ControlPacketCountersStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    IsisCircuitIndex:
      description: The ISIS index of the circuit.
      type: integer
    IsisIntCountersKeysElement:
      description: Information to identify the counters for an interface.
      type: object
      properties:
        circuitIndex:
          $ref: '#/components/schemas/IsisCircuitIndex'
        level:
          $ref: '#/components/schemas/IsisCircuitLevel'
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      required:
        - circuitIndex
        - level
        - areaType
    IsisIntCountersStatsElement:
      type: object
      properties:
        authFails:
          $ref: '#/components/schemas/IsisAuthFails'
        adjChanges:
          description: |
            The number of times an adjacency state change has occurred.
          type: integer
        initFails:
          description: |
            The number of times initialization has failed.
          type: integer
        rejectedAdjs:
          description: |
            The number of times an adjacency has been rejected.
          type: integer
        idFieldLenMismatches:
          $ref: '#/components/schemas/IsisIDFieldLenMismatches'
        maxAreaAddrMismatches:
          description: |
            The number of times a mismatched max area address field has
            been received.
          type: integer
        lanDesISChanges:
          description: |
            The number of times the Designated IS has changed at this level.
          type: integer
    IsisIntCountersTagsElement:
      description: Other information to identify the counters for an interface.
      type: object
      properties:
        interface:
          $ref: '#/components/schemas/IsisCircuitInterfaceName'
        areaName:
          $ref: '#/components/schemas/IsisAreaName'
    IsisIntCountersStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/IsisIntCountersKeysElement'
        stats:
          $ref: '#/components/schemas/IsisIntCountersStatsElement'
        tags:
          $ref: '#/components/schemas/IsisIntCountersTagsElement'
      required:
        - keys
    IsisIntCountersStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/IsisIntCountersStatsEntry'
      example:
        name: IsisIntCountersStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              circuitIndex: 1
              level: LEVEL1
              areaType: HOME
            stats:
              authFails: 0
              adjChanges: 0
              initFails: 0
              rejectedAdjs: 0
              idFieldLenMismatches: 0
              maxAreaAddrMismatches: 0
              lanDesISChanges: 0
            tags:
              interface: string
              areaName: string
    IsisIntL1ControlPacketCountersKeysElement:
      description: Information to identify the control packet counters for an interface.
      type: object
      properties:
        circuitIndex:
          $ref: '#/components/schemas/IsisCircuitIndex'
        level:
          $ref: '#/components/schemas/IsisCircuitLevel'
        direction:
          description: The direction of the PDUs.
          type: string
          enum:
            - Transmitted
            - Received
        areaType:
          $ref: '#/components/schemas/IsisAreaType'
      required:
        - circuitIndex
        - level
        - direction
        - areaType
    IsisIntL1ControlPacketCountersStatsElement:
      description: The ISIS control packet counters.
      type: object
      properties:
        hello:
          description: The number of ISIS Hello PDUs seen in this direction.
          type: integer
        lsp:
          description: The number of ISIS LSPs seen in this direction.
          type: integer
        csnp:
          description: The number of ISIS CSNPs seen in this direction.
          type: integer
        psnp:
          description: The number of ISIS PSNPs seen in this direction.
          type: integer
    IsisIntL1ControlPacketCountersTagsElement:
      description: >-
        Other information to identify the control packet counters for an
        interface.
      type: object
      properties:
        interface:
          $ref: '#/components/schemas/IsisCircuitInterfaceName'
        areaName:
          $ref: '#/components/schemas/IsisAreaName'
    IsisIntL1ControlPacketCountersStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/IsisIntL1ControlPacketCountersKeysElement'
        stats:
          $ref: '#/components/schemas/IsisIntL1ControlPacketCountersStatsElement'
        tags:
          $ref: '#/components/schemas/IsisIntL1ControlPacketCountersTagsElement'
      required:
        - keys
    IsisIntL1ControlPacketCountersStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/IsisIntL1ControlPacketCountersStatsEntry'
      example:
        name: IsisIntL1ControlPacketCountersStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              circuitIndex: 1
              level: LEVEL1
              direction: Transmitted
              areaType: HOME
            stats:
              hello: 0
              lsp: 0
              csnp: 0
              psnp: 0
            tags:
              interface: string
              areaName: string
    IsisIntStatsCallbackElement:
      type: object
      properties:
        isisIntCountersStats:
          type: array
          items:
            $ref: '#/components/schemas/IsisIntCountersStatsCallbackElement'
        isisIntL1ControlPacketCountersStats:
          type: array
          items:
            $ref: >-
              #/components/schemas/IsisIntL1ControlPacketCountersStatsCallbackElement
    LagEventType:
      type: string
      enum:
        - LagMembersEvent
      example: LagMembersEvent
    LagEventSubscriptionRequest:
      description: The request to subscribe to LAG events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/LagEventType'
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: LagMembersEvent
        flushInterval: 1
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
    LagKeysElement:
      type: object
      properties:
        lagId:
          $ref: '#/components/schemas/LagId'
        lagName:
          description: >
            The name of the LAG. This attribute is applicable only to Fabric
            Engine (VOSS).
          type: string
      required:
        - lagId
    LagMemberActionType:
      description: Possible actions that can be done to a port within a LAG.
      type: string
      enum:
        - PORT_ADDED
        - PORT_REMOVED
    LagMembersEventEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/LagKeysElement'
        port:
          $ref: '#/components/schemas/PortName'
        action:
          $ref: '#/components/schemas/LagMemberActionType'
      required:
        - keys
        - port
        - action
    LagMembersEventCallbackElement:
      description: |
        Reports the LAG members event: a port was added to / removed from a LAG.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/LagMembersEventEntry'
      example:
        name: LagMembersEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              lagId: '10'
              lagName: my_lag_name
            port: '1:1'
            action: PORT_ADDED
    LagMembersStateCallbackElement:
      type: object
      properties:
        lagMembersEvent:
          type: array
          items:
            $ref: '#/components/schemas/LagMembersEventCallbackElement'
    LldpStatsType:
      type: string
      enum:
        - LldpNeighborStats
      example: LldpNeighborStats
    LldpStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/LldpStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: LldpNeighborStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    LldpNeighborStatsElement:
      type: object
      properties:
        ageouts:
          description: >
            The number of times the complete set of information advertised by a
            particular

            Device Media Service Access Point(MSAP) has been deleted from LLDP
            neighbors

            stored data because the information timeliness interval has expired.
          type: integer
        deletes:
          description: >
            The number of times the complete set of information advertised by a
            particular

            Device Media Service Access Point(MSAP) has been deleted from LLDP
            neighbors

            stored data.
          type: integer
        drops:
          description: >
            The number of times the complete set of information advertised by a
            particular

            Device Media Service Access Point(MSAP) could not be entered into
            LLDP neighbors

            stored data because of insufficient resources.
          type: integer
        inserts:
          description: >
            The number of times the complete set of information advertised by a
            particular

            Device Media Service Access Point(MSAP) has been inserted into LLDP
            neighbors

            stored data.
          type: integer
        lastChangeTime:
          description: >
            The value of sysUpTime as defined by SystemState schema (described
            in IETF RFC

            3418) at the time a LLDP neighbor is created, modified, or deleted.
          type: integer
    LldpNeighborStatsCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              $ref: '#/components/schemas/LldpNeighborStatsElement'
      example:
        name: LldpNeighborStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          ageouts: 0
          deletes: 0
          drops: 0
          inserts: 0
          lastChangeTime: 0
    LldpStatsCallbackElement:
      type: object
      properties:
        lldpNeighborStats:
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborStatsCallbackElement'
    LldpPortStatsType:
      type: string
      enum:
        - LldpPortStats
      example: LldpPortStats
    LldpPortStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/LldpPortStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: LldpPortStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    LldpPortRxStatsElement:
      type: object
      properties:
        ageouts:
          description: |
            The number of age-outs that occurred on a given port.
            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
        framesDiscarded:
          description: >
            The number of LLDP frames received on the port and then discarded
            for any reason.

            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
        framesErrors:
          description: |
            The number of invalid LLDP frames received on the port.
            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
        framesValid:
          description: |
            The number of valid LLDP frames received on the port.
            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
        tlvsDiscarded:
          description: |
            The number of LLDP TLVs discarded for any reason on the port.
            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
        tlvsUnrecognized:
          description: >
            The number of LLDP TLVs received on the port that are not
            recognized.

            An unrecognized TLV is referred to as the TLV whose type value is in
            the range

            of reserved TLV types (000 1001 - 111 1110) in Table 9.1 of IEEE Std
            802.1AB-2005.

            For details see IEEE 802.1AB-2005 10.5.2.2.
          type: integer
    LldpPortTxStatsElement:
      type: object
      properties:
        frames:
          description: |
            The number of LLDP frames transmitted on the port.
            For details see IEEE 802.1AB-2005 10.5.2.1.
          type: integer
    LldpPortStatsEntry:
      type: object
      description: |
        rx: LLDP reception statistics for a given port.
        tx: LLDP frame transmission statistics for a particular port.
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        rx:
          $ref: '#/components/schemas/LldpPortRxStatsElement'
        tx:
          $ref: '#/components/schemas/LldpPortTxStatsElement'
      required:
        - keys
    LldpNeighborPortStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/LldpPortStatsEntry'
      example:
        name: LldpNeighborPortStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              name: '1:2'
              ifIndex: 193
            rx:
              ageouts: 0
              framesDiscarded: 0
              framesErrors: 0
              framesValid: 0
              tlvsDiscarded: 0
              tlvsUnrecognized: 0
            tx:
              frames: 0
    LldpPortStatsCallbackElement:
      type: object
      properties:
        lldpNeighborPortStats:
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborPortStatsCallbackElement'
    LldpEventType:
      type: string
      enum:
        - LldpNeighborStateChange
      example: LldpNeighborStateChange
    LldpEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/LldpEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: LldpNeighborStateChange
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    LldpNeighborKeysElement:
      description: Information to identify an LLDP neighbor.
      type: object
      allOf:
        - $ref: '#/components/schemas/InterfaceKeysElement'
        - properties:
            timeMark:
              description: TimeFilter value as defined by IETF RFC 2021 section 6.
              type: integer
            index:
              description: >-
                An arbitrary local integer value used to identify a particular
                connection instance, unique only for the indicated remote
                system.
              type: integer
      required:
        - name
        - ifIndex
        - timeMark
        - index
      example:
        name: '1:9'
        ifIndex: 232
        timeMark: 0
        index: 1
    LldpXmedCapability:
      description: >-
        The LLDP MED capabilities. Describes the MED organizationally defined
        set of LLDP TLVs the device is capable of. CAPABILITIES   - Capabilities
        TLVs EXTENDED_PD    - Extended PoE TLVs with PD capabilities
        EXTENDED_PSE   - Extended PoE TLVs with PSE capabilities INVENTORY     
        - Hardware Revision, Firmware Revision, Software Revision, Serial
        Number, Manufacturer Name, Model Name, and Asset ID TLVs LOCATION      
        - Emergency Communications System Location TLVs NETWORK_POLICY - Network
        Policy TLVs
      type: string
      enum:
        - CAPABILITIES
        - EXTENDED_PD
        - EXTENDED_PSE
        - INVENTORY
        - LOCATION
        - NETWORK_POLICY
    LldpNeighborTagsElement:
      description: |
        Information to identify an LLDP neighbor.
        "macSrcAddress" is relevant only if the device capabilities list
        includes TELEPHONE capability.
      type: object
      properties:
        chassisId:
          description: >-
            The type of encoding used to identify the chassis associated with
            the local system as described by IEEE 802.1AB-2005 9.5.2.3.
          type: string
        chassisIdSubtype:
          description: >-
            The type of encoding used to identify the chassis associated with
            the local system as described by IEEE 802.1AB-2005 9.5.2.2.
          type: string
          enum:
            - CHASSIS_COMPONENT
            - INTERFACE_ALIAS
            - INTERFACE_NAME
            - LOCAL
            - PORT_COMPONENT
            - MAC_ADDRESS
            - NETWORK_ADDRESS
        macSrcAddress:
          description: >-
            This is relevant only if the device capabilities list includes
            TELEPHONE capability.
          allOf:
            - $ref: '#/components/schemas/MacAddressNonObject'
        medCapSupported:
          description: >-
            MED organizationally defined set of LLDP TLVs whose transmission is
            possible on the LLDP agent of the remote device connected to this
            port. Each bit in the bitmap corresponds to an LLDP-MED subtype
            associated with a specific TIA TR41.4 MED optional TLV. For details
            see ANSI/TIA-1057, Sections 10.2.2.1.
          type: array
          items:
            $ref: '#/components/schemas/LldpXmedCapability'
        medCapCurrent:
          description: >-
            MED organizationally defined set of LLDP TLVs whose transmission is
            possible on the LLDP agent of the remote device connected to this
            port. Each TLV type corresponds to a specific TIA TR41.4 MED
            optional TLV. For details see ANSI/TIA-1057, Sections 10.2.2.1.
          type: array
          items:
            $ref: '#/components/schemas/LldpXmedCapability'
        portDesc:
          description: >-
            String value used to identify the description of the given port
            associated with the remote system as defined by IEEE 802.1AB-2005
            9.5.5.2.
          type: string
        portId:
          description: >-
            String value used to identify the port component associated with the
            remote system as defined by IEEE 802.1AB-2005 9.5.3.3.
          type: string
        portIdSubtype:
          description: >-
            The type of port identifier encoding used in the associated
            LldpPortId schema as defined by IEEE 802.1AB-2005 9.5.3.2.
          type: string
          enum:
            - AGENT_CIRCUIT_ID
            - INTERFACE_ALIAS
            - INTERFACE_NAME
            - LOCAL
            - PORT_COMPONENT
            - MAC_ADDRESS
            - NETWORK_ADDRESS
            - UNKNOWN
        sysDescription:
          description: >-
            The string value used to identify the system description of the
            remote system as defined by IEEE 802.1AB-2005 9.5.7.2
          type: string
        sysCapSupported:
          description: The list of system capabilities supported on the remote system.
          type: array
          items:
            $ref: '#/components/schemas/LldpSystemCapability'
        sysCapEnabled:
          description: The list of system capabilities enabled on the remote system.
          type: array
          items:
            $ref: '#/components/schemas/LldpSystemCapability'
        sysName:
          description: >-
            The string value used to identify the system name of the remote
            system as defined by IEEE 802.1AB-2005 9.5.6.2.
          type: string
    LldpNeighborState:
      type: string
      enum:
        - DOWN
        - UP
    LldpNeighborStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/LldpNeighborKeysElement'
        tags:
          $ref: '#/components/schemas/LldpNeighborTagsElement'
        reason:
          type: string
          enum:
            - LLDP neighbor added
            - LLDP neighbor deleted
            - LLDP neighbor updated
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/LldpNeighborState'
            new:
              $ref: '#/components/schemas/LldpNeighborState'
      required:
        - keys
        - state
    LldpNeighborStateChangeCallbackElement:
      description: |
        Reports the neighbor state change event
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/LldpNeighborStateChangeEntry'
      example:
        name: LldpNeighborStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              name: '1:9'
              ifIndex: 232
              timeMark: 0
              index: 1
            tags:
              chassisId: string
              chassisIdSubtype: MAC_ADDRESS
              macSrcAddress: '00:E0:4C:68:13:4C'
              medCapSupported:
                - EXTENDED_PD
              medCapCurrent:
                - EXTENDED_PD
              portDesc: >-
                Extreme Networks Virtual Services Platform 7432CQ - 100GbCR4
                Port 1/9
              portId: string
              portIdSubtype: INTERFACE_NAME
              sysDescription: VSP-7432CQ (9.0.0.0_B024) (PRIVATE)
              sysCapSupported:
                - ROUTER
              sysCapEnabled:
                - ROUTER
              sysName: VSP7432-1234
            reason: LLDP neighbor added
            state:
              old: DOWN
              new: UP
    LldpNeighborStateCallbackElement:
      type: object
      properties:
        lldpNeighborStateChange:
          type: array
          items:
            $ref: '#/components/schemas/LldpNeighborStateChangeCallbackElement'
    NodeAliasEventType:
      type: string
      enum:
        - NodeAliasDatabaseUpdatedEvent
    NodeAliasEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/NodeAliasEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: NodeAliasDatabaseUpdatedEvent
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    NodeAliasIpProtocols:
      description: |
        Specifies the IP protocol. Node alias creates additional 
        entries to facilitate the searching based on finer details,
        such as protocol type. For example, when a VRRP frame is 
        received, 2 entries are created - one entry with the protocol
        type IP and another entry with protocol type VRRP.
      type: string
      enum:
        - OSPF
        - BGP
        - VRRP
    NodeAliasUpdatedKeysElement:
      type: object
      properties:
        mac:
          $ref: '#/components/schemas/MacAddressNonObject'
        ip_address:
          $ref: '#/components/schemas/IpAddress'
        port:
          $ref: '#/components/schemas/PortName'
        protocol:
          $ref: '#/components/schemas/NodeAliasProtocols'
        ip_protocol:
          $ref: '#/components/schemas/NodeAliasIpProtocols'
        vlanId:
          $ref: '#/components/schemas/VlanIdNonObject'
    NodeAliasUpdatedEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/NodeAliasUpdatedKeysElement'
        event:
          description: |
            Describes the action on the database entries.
            ENTRY_ADDED - a new entry was added in the database.
            ENTRY_REMOVED - an entry was cleared from the database,
            whether it was cleared or aged out.
          type: string
          enum:
            - ENTRY_ADDED
            - ENTRY_REMOVED
      required:
        - keys
        - event
    NodeAliasUpdatedCallbackElement:
      description: |
        Reports that node alias database was updated
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/NodeAliasUpdatedEntry'
      example:
        name: NodeAliasUpdated
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              mac: '00:04:96:98:65:1C'
              ip: 1.1.1.1
              port: '1:1:1'
              ip_protocol: VRRP
              protocol: IPv4
              vlanId: 1
            event: ENTRY_ADDED
    NodeAliasUpdatedEventCallbackElement:
      type: object
      properties:
        nodeAliasDatabaseUpdated:
          type: array
          items:
            $ref: '#/components/schemas/NodeAliasUpdatedCallbackElement'
    OspfEventType:
      type: string
      enum:
        - OspfNeighborStateChange
    OspfEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/OspfEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: OspfNeighborStateChange
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    OspfAddressLessInterface:
      type: integer
      format: int32
    OspfRouterId:
      oneOf:
        - $ref: '#/components/schemas/Ipv4AddressNonObject'
        - type: integer
          format: int32
    OspfNeighborStateChangeKeysElement:
      type: object
      allOf:
        - type: object
          properties:
            routerId:
              $ref: '#/components/schemas/Ipv4AddressNonObject'
            neighborAddress:
              $ref: '#/components/schemas/Ipv4AddressNonObject'
            neighborAddressLessInterface:
              $ref: '#/components/schemas/OspfAddressLessInterface'
            neighborRouterId:
              $ref: '#/components/schemas/OspfRouterId'
        - $ref: '#/components/schemas/VrName'
    OspfNeighborState:
      type: string
      enum:
        - UNKNOWN
        - DOWN
        - ATTEMPT
        - INIT
        - 2WAY
        - EX_START
        - EXCHANGE
        - LOADING
        - FULL
    OspfNeighborStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/OspfNeighborStateChangeKeysElement'
        reason:
          type: string
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/OspfNeighborState'
            new:
              $ref: '#/components/schemas/OspfNeighborState'
      required:
        - keys
        - state
    OspfNeighborStateChangeCallbackElement:
      description: |
        Reports the neighbor state change event
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OspfNeighborStateChangeEntry'
      example:
        name: OspfNeighborStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              routerId: 10.5.2.1
              neighborAddress: 10.5.2.2
              neighborAddressLessInterface: 1
              neighborRouterId: 10.5.2.2
              vrName: vr-5
            reason: Exchange done
            state:
              old: EXCHANGE
              new: FULL
    OspfStateCallbackElement:
      type: object
      properties:
        ospfNeighborStateChange:
          type: array
          items:
            $ref: '#/components/schemas/OspfNeighborStateChangeCallbackElement'
    SubscriptionConfigurationRequest:
      description: The request to change global subscription configuration.
      type: object
      properties:
        enableStats:
          description: Whether to enable/disable stats globally
          type: boolean
        enableEvents:
          description: Whether to enable/disable events globally
          type: boolean
        accessToken:
          description: |
            Optional Bearer access token. If access token is provided,
            then it will be sent in the header field
            "Authentication-Token: <access_token>" in the callback requests.
          type: string
      example:
        enableStats: true
        enableEvents: true
        accessToken: 33Tt32v0DsJ6Rph013baoStUFgeWouJGN3GIQny5evhlWXiRf8GcvT3uGWEKEPKP
    PlatformStatsType:
      type: string
      enum:
        - CpuStats
        - MemoryStats
        - StorageStats
        - TemperatureStats
        - FanStats
        - PoeStats
        - PsuStats
      example: CpuStats
    PlatformStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/PlatformStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: CpuStats
            sampleCount: 6
            samplePeriod: 10
          - type: MemoryStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    CpuKeysElement:
      description: Information to identify a CPU.
      type: object
      properties:
        core:
          type: integer
      required:
        - core
    Int32Gauge:
      type: object
      required:
        - avg
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        avg:
          type: integer
          format: int32
      example:
        min: 20
        max: 60
        avg: 50
    CpuStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/CpuKeysElement'
        usage:
          $ref: '#/components/schemas/Int32Gauge'
      required:
        - keys
    CpuStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/CpuStatsEntry'
      example:
        name: CpuStats
        device:
          serialnumber: '123234234'
        items:
          - usage:
              min: 20
              max: 60
              avg: 50
            keys:
              core: 0
          - usage:
              min: 10
              max: 40
              avg: 35
            keys:
              core: 1
        ts: 1650477173000
    MemoryStatsEntry:
      type: object
      allOf:
        - properties:
            usage:
              $ref: '#/components/schemas/Int32Gauge'
    MemoryStatsCallbackElement:
      description: >
        Report free memory as % of total memory.

        min/max/avg is calculated from the last "interval" number of samples.

        For example if sampling = 10 sec and interval = 6 (defaults), metrics is
        read from the system

        every 10 sec and min/max/avg is calculated every 6x10 sec from the last
        6 samples.

        Callback payload is an array of report elements.

        Each report element has the same timestamp and set of tags.

        When telegraf needs to send a set of report elements with different
        timestamps

        and/or different tags, it uses one callback POST request and include an
        array

        of report elements.
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/MemoryStatsEntry'
      example:
        name: MemoryStats
        device:
          serialnumber: '123234234'
        items:
          - usage:
              min: 20
              max: 60
              avg: 50
        ts: 1650477173000
    StorageKeysElement:
      description: Information to identify the storage partition.
      type: object
      properties:
        partition:
          description: The partition name
          type: string
          maxLength: 64
        type:
          description: The partition type
          type: string
          maxLength: 10
        permissions:
          description: The partition permissions
          type: string
          enum:
            - READ_ONLY
            - READ_WRITE
      required:
        - partition
        - type
        - permissions
    Int64Gauge:
      type: object
      required:
        - avg
      properties:
        min:
          type: integer
          format: int64
        max:
          type: integer
          format: int64
        avg:
          type: integer
          format: int64
      example:
        min: 20
        max: 60
        avg: 50
    StorageStatsEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/StorageKeysElement'
        available:
          allOf:
            - description: The available space in bytes
            - $ref: '#/components/schemas/Int64Gauge'
        total:
          description: The total space in bytes
          type: integer
          format: int64
        tags:
          description: Labels to identify partition roles
          type: array
          items:
            type: string
            enum:
              - CONFIG
              - LOGS
              - SCRATCH
              - SW_IMAGES
              - VM
          uniqueItems: true
      required:
        - keys
    StorageStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/StorageStatsEntry'
      example:
        name: StorageStats
        device:
          serialnumber: '123234234'
        items:
          - available:
              min: 3114426328
              max: 3124912128
              avg: 3119669228
            total: 4128440320
            tags:
              - CONFIG
            keys:
              partition: string
              type: ext4
              permissions: READ_WRITE
        ts: 1650477173000
    TemperatureStatsEntry:
      type: object
      properties:
        temperature:
          $ref: '#/components/schemas/Int32Gauge'
    TemperatureStatsCallbackElement:
      description: >
        Report min/max/avg temperature for the device. The reported
        temperature(in Celcius) is a 

        normalized value across all temperature sensors.

        min/max/avg is calculated from the last "interval" number of samples.

        For example if sampling = 10 sec and interval = 6 (defaults), metrics is
        read from the system

        every 10 sec and min/max/avg is calculated every 6x10 sec from the last
        6 samples.

        Design reference temperature (like critical, melting etc) are not
        reported by the API.
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TemperatureStatsEntry'
      example:
        name: TemperatureStats
        device:
          serialnumber: '123234234'
        items:
          - temperature:
              min: 40
              max: 50
              avg: 60
        ts: 1650477173000
    FanKeysElement:
      description: Information to identify a fan.
      type: object
      properties:
        tray:
          description: Which fan tray where fan resides
          type: integer
        fan:
          description: Fan number
          type: integer
      required:
        - tray
        - fan
      example:
        tray: 1
        fan: 22
    FanStatsEntry:
      type: object
      description: >-
        rpm: Revolutions Per Minute.

        pwm: The Duty Cycle of Pulse Width Modulation. This value controls the
        rpm.
      properties:
        keys:
          $ref: '#/components/schemas/FanKeysElement'
        rpm:
          $ref: '#/components/schemas/Int32Gauge'
        pwm:
          $ref: '#/components/schemas/Int32Gauge'
      required:
        - keys
    FanStatsCallbackElement:
      description: >
        Report min/max/avg rpm/pwm for each of the device fans.

        Interval is expressed as number of sample intervals.

        min/max/avg is calculated from the last "interval" number of samples.

        For example if sampling = 10 sec and interval = 6 (defaults), metrics is
        read from the system

        every 10 sec and min/max/avg is calculated every 6x10 sec from the last
        6 samples.

        Callback payload is an array of report elements.

        Each report element has the same timestamp and set of tags.

        When telegraf needs to send a set of report elements with different
        timestamps

        and/or different tags, it uses one callback POST request and include an
        array

        of report elements.

        input>

        FanStats, serial=asdfasdf tray=1, fan=4, rpm_min=4120, rpm_max=4130,
        rpm_avg=4125, pwm_min=20, pwm_max=30, pwm_avg=25 123123123
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/FanStatsEntry'
      example:
        name: FanStats
        device:
          serialnumber: '123234234'
        items:
          - rpm:
              min: 4120
              max: 4130
              avg: 4125
            pwm:
              min: 20
              max: 30
              avg: 25
            keys:
              tray: 4
              fan: 22
          - rpm:
              min: 4125
              max: 4135
              avg: 4130
            pwm:
              min: 21
              max: 31
              avg: 26
            keys:
              tray: 4
              fan: 23
        ts: 1650477173000
    PsuKeysElement:
      description: Information to identify a PSU (power supply unit).
      type: object
      properties:
        unit:
          description: PSU unit number
          type: integer
      required:
        - unit
    FloatGauge:
      type: object
      required:
        - avg
      properties:
        min:
          type: number
          format: float
        max:
          type: number
          format: float
        avg:
          type: number
          format: float
      example:
        min: 20
        max: 60
        avg: 50
    PsuStatsEntry:
      type: object
      description: |-
        inputCurrent: The input current draw of the power supply. units: A
        inputVoltage: Input voltage to the power supply. units: V
        outputCurrent: The output current supplied by the power supply. units: A
        outputVoltage: Output voltage supplied by the power supply. units: V
        outputPower: Output power supplied by the power supply. units: Watts
      properties:
        keys:
          $ref: '#/components/schemas/PsuKeysElement'
        capacity:
          description: 'Maximum power capacity of the power supply. units: Watts'
          type: number
          format: float
        inputCurrent:
          $ref: '#/components/schemas/FloatGauge'
        inputVoltage:
          $ref: '#/components/schemas/FloatGauge'
        outputCurrent:
          $ref: '#/components/schemas/FloatGauge'
        outputVoltage:
          $ref: '#/components/schemas/FloatGauge'
        outputPower:
          $ref: '#/components/schemas/FloatGauge'
      required:
        - keys
    PsuStatsCallbackElement:
      description: >
        input>

        PsuStats, serial=asdfasdf, unit=1 capacity=1, inputCurrent =1 ......
        123123123

        PsuStats, serial=asdfasdf, unit=2 capacity=1, inputCurrent =1 ......
        123123123
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PsuStatsEntry'
      example:
        name: PsuStats
        device:
          serialnumber: '123234234'
        items:
          - capacity: 350
            inputCurrent:
              min: 0.87
              max: 0.91
              avg: 0.89
            inputVoltage:
              min: 206.4
              max: 206.6
              avg: 206.5
            outputCurrent:
              min: 0.7
              max: 0.74
              avg: 0.72
            outputVoltage:
              min: 53.18
              max: 53.24
              avg: 53.21
            outputPower:
              min: 50.2
              max: 50.6
              avg: 50.4
            keys:
              unit: 0
              partNumber: Internal PSU-1 1936A-30574 800592-00-14
              revision: '14'
              airFlowDirection: FrontToBack
          - capacity: 350
            inputCurrent:
              min: 0.62
              max: 0.82
              avg: 0.77
            inputVoltage:
              min: 205.2
              max: 206.4
              avg: 205.8
            outputCurrent:
              min: 0.5
              max: 0.54
              avg: 0.52
            outputVoltage:
              min: 53.28
              max: 53.34
              avg: 53.31
            outputPower:
              min: 50.1
              max: 50.5
              avg: 50.3
            keys:
              unit: 1
              partNumber: Internal PSU-1 1936A-30574 800592-00-14
              revision: 14
              airFlowDirection: FrontToBack
        ts: 1650477173000
    PoeStatsEntry:
      type: object
      description: |-
        currentUsed: Current used by the ethernet interface in Amps.
        voltageUsed: Voltage used by the ethernet interface in Volts.
        powerUsed: Power used by the ethernet interface in Watts.
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        currentUsed:
          $ref: '#/components/schemas/FloatGauge'
        voltageUsed:
          $ref: '#/components/schemas/FloatGauge'
        powerUsed:
          $ref: '#/components/schemas/FloatGauge'
        mpsAbsentCount:
          description: |
            This counter is incremented when the PSE state diagram
            transitions directly from the state POWER_ON to the state IDLE.
          type: integer
        invalidSignatureCount:
          description: |
            This counter is incremented when the PSE state diagram
            enters the state SIGNATURE_INVALID.
          type: integer
        powerDeniedCount:
          description: |
            This counter is incremented when the PSE state diagram
            enters the state POWER_DENIED.
          type: integer
        overLoadCount:
          description: |
            This counter is incremented when the PSE state diagram
            enters the state ERROR_DELAY_OVER.
          type: integer
        shortCount:
          description: |
            This counter is incremented when the PSE state diagram
            enters the state ERROR_DELAY_SHORT.
          type: integer
      required:
        - keys
    PoeStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PoeStatsEntry'
      example:
        name: PoeStats
        device:
          serialnumber: '123234234'
        items:
          - currentUsed:
              min: 0.024
              max: 0.102
              avg: 0.052
            voltageUsed:
              min: 53.1
              max: 53.8
              avg: 53.5
            powerUsed:
              min: 12.1
              max: 13.1
              avg: 12.5
            mpsAbsentCount: 4
            invalidSignatureCount: 5
            powerrDeniedCount: 0
            overLoadCount: 0
            shortCount: 0
            keys:
              ifIndex: 11
              name: ge1
          - currentUsed:
              min: 0.124
              max: 0.142
              avg: 0.132
            voltageUsed:
              min: 53.2
              max: 53.7
              avg: 53.4
            powerUsed:
              min: 12.2
              max: 13.2
              avg: 12.6
            mpsAbsentCount: 3
            invalidSignatureCount: 4
            powerrDeniedCount: 1
            overLoadCount: 0
            shortCount: 2
            keys:
              ifIndex: 12
              name: ge2
        ts: 1650477173000
    PlatformStatsCallbackElement:
      type: object
      properties:
        cpuStats:
          type: array
          items:
            $ref: '#/components/schemas/CpuStatsCallbackElement'
        memoryStats:
          type: array
          items:
            $ref: '#/components/schemas/MemoryStatsCallbackElement'
        storageStats:
          type: array
          items:
            $ref: '#/components/schemas/StorageStatsCallbackElement'
        temperatureStats:
          type: array
          items:
            $ref: '#/components/schemas/TemperatureStatsCallbackElement'
        fanStats:
          type: array
          items:
            $ref: '#/components/schemas/FanStatsCallbackElement'
        psuStats:
          type: array
          items:
            $ref: '#/components/schemas/PsuStatsCallbackElement'
        poeStats:
          type: array
          items:
            $ref: '#/components/schemas/PoeStatsCallbackElement'
    PlatformEventType:
      type: string
      enum:
        - FanStateChange
        - PsuStateChange
        - PoeStateChange
        - InterfaceStateChange
        - SshLoginFail
        - RebootEvent
        - UpgradeEvent
        - OpticalModulesStateChange
        - OpticalModulesError
        - StackNodeTransitionEvent
        - ChannelizedPortStateChange
      example: FanStateChange
    PlatformEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/PlatformEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: FanStateChange
          - type: PsuStateChange
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    AirFlowDirection:
      type: string
      enum:
        - FrontToBack
        - BackToFront
        - LeftToRight
        - RightToLeft
    FanTagsElement:
      description: Information to identify a fan.
      type: object
      properties:
        partNumber:
          description: part and serial number of the fan tray
          type: string
        revision:
          description: revision
          type: string
        airFlowDirection:
          $ref: '#/components/schemas/AirFlowDirection'
      example:
        partNumber: 1647G-00129 800751-00-01
        revision: '01'
        airFlowDirection: FrontToBack
    FanState:
      type: string
      enum:
        - Failed
        - Ok
        - NotPresent
    FanStateChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/FanState'
        new:
          $ref: '#/components/schemas/FanState'
      required:
        - old
        - new
    FanStateElement:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/FanKeysElement'
        tags:
          $ref: '#/components/schemas/FanTagsElement'
        state:
          $ref: '#/components/schemas/FanStateChangeElement'
      required:
        - keys
    FanStateCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/FanStateElement'
      example:
        name: FanStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              tray: 1
              fan: 22
            tags:
              partNumber: 1647G-00129 800751-00-01
              revision: '01'
              airFlowDirection: FrontToBack
            state:
              old: Failed
              new: Ok
    PoeStatus:
      description: The operational status of the port PD detection
      type: string
      enum:
        - Disabled
        - Searching
        - DeliveringPower
        - PowerRequired
        - Fault
        - Test
        - OtherFault
    PoeStateStatusChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/PoeStatus'
        new:
          $ref: '#/components/schemas/PoeStatus'
      required:
        - old
        - new
    PoeStatePowerClassChangeElement:
      type: object
      description: 'Power Class negotiated (see  IEEE 802.3-2018, section 2, table 33-9).'
      properties:
        old:
          type: integer
          minimum: 0
          maximum: 8
        new:
          type: integer
          minimum: 0
          maximum: 8
      required:
        - old
        - new
    PoeStatePowerPairsControlAbilityChangeElement:
      description: >-
        Describes the capability of controlling the power pairs functionality to
        switch pins for sourcing power.
      type: object
      properties:
        old:
          type: boolean
        new:
          type: boolean
      required:
        - old
        - new
    PoePortPowerPairs:
      description: Describes or controls the pairs in use.
      type: string
      enum:
        - Signal
        - Spare
    PoeStatePortPowerPairsChangeElement:
      description: Describes or controls the pairs in use.
      type: object
      properties:
        old:
          $ref: '#/components/schemas/PoePortPowerPairs'
        new:
          $ref: '#/components/schemas/PoePortPowerPairs'
      required:
        - old
        - new
    PoeDeviceDetectType:
      description: >-
        This object is used to specify the mechanism used to detect powered
        ethernet devices attached to a powered ethernet port.
      type: string
      enum:
        - BYPASS
        - 802DOT3AF_ONLY
        - NONE
        - LEGACY_CAPACITIVE
        - 802DOT3AF_4POINT
        - 802DOT3AF_4POINT_AND_LEGACY
        - 802DOT3AF_2POINT
        - 802DOT3AF_2POINT_AND_LEGACY
    PoeStateDeviceDetectTypeChangeElement:
      description: >-
        This object is used to specify the mechanism used to detect powered
        ethernet devices attached to a powered ethernet port.
      type: object
      properties:
        old:
          $ref: '#/components/schemas/PoeDeviceDetectType'
        new:
          $ref: '#/components/schemas/PoeDeviceDetectType'
      required:
        - old
        - new
    PoeStateChangeElement:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PoeStateStatusChangeElement'
        powerClass:
          $ref: '#/components/schemas/PoeStatePowerClassChangeElement'
        powerPairsControlAbility:
          $ref: '#/components/schemas/PoeStatePowerPairsControlAbilityChangeElement'
        portPowerPairs:
          $ref: '#/components/schemas/PoeStatePortPowerPairsChangeElement'
        deviceDetectType:
          $ref: '#/components/schemas/PoeStateDeviceDetectTypeChangeElement'
    PoeStateElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/PoeStateChangeElement'
        - properties:
            keys:
              $ref: '#/components/schemas/InterfaceKeysElement'
      required:
        - keys
    PoeStateCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PoeStateElement'
      example:
        name: PoeStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 11
              name: ge1
            status:
              old: Disabled
              new: Searching
            powerClass:
              old: 1
              new: 3
            powerPairsControlAbility:
              old: false
              new: true
            portPowerPairs:
              old: Spare
              new: Signal
            deviceDetectType:
              old: 802DOT3AF_2POINT
              new: 802DOT3AF_ONLY
    PsuTagsElement:
      description: Information to identify a PSU (power supply unit).
      type: object
      properties:
        partNumber:
          description: part and serial number of the PSU
          type: string
        revision:
          description: revision
          type: string
        airFlowDirection:
          $ref: '#/components/schemas/AirFlowDirection'
    PsuState:
      type: string
      enum:
        - Failed
        - Ok
        - NotPresent
        - Unplugged
    PsuStateChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/PsuState'
        new:
          $ref: '#/components/schemas/PsuState'
      required:
        - old
        - new
    PsuStateElement:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/PsuKeysElement'
        tags:
          $ref: '#/components/schemas/PsuTagsElement'
        state:
          $ref: '#/components/schemas/PsuStateChangeElement'
      required:
        - keys
    PsuStateCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PsuStateElement'
      example:
        name: PsuStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              unit: 0
            tags:
              partNumber: Internal PSU-1 1936A-30574 800592-00-14
              revision: '14'
              airFlowDirection: FrontToBack
            state:
              old: Failed
              new: Ok
    InterfaceStatus:
      description: Admin interface status
      type: string
      enum:
        - Down
        - Up
    InterfaceStateStatusChangeElement:
      type: object
      properties:
        old:
          $ref: '#/components/schemas/InterfaceStatus'
        new:
          $ref: '#/components/schemas/InterfaceStatus'
      required:
        - old
        - new
    WiredPortSpeed:
      type: string
      enum:
        - 10M
        - 100M
        - 1G
        - 2_5G
        - 5G
        - 10G
      example: 1G
    InterfaceStateSpeedChangeElement:
      type: object
      description: Wired port speed change
      properties:
        old:
          $ref: '#/components/schemas/WiredPortSpeed'
        new:
          $ref: '#/components/schemas/WiredPortSpeed'
      required:
        - old
        - new
    WiredPortDuplex:
      type: string
      enum:
        - Full
        - Half
        - None
      example: Full
    InterfaceStateDuplexChangeElement:
      type: object
      description: Wired port duplex change
      properties:
        old:
          $ref: '#/components/schemas/WiredPortDuplex'
        new:
          $ref: '#/components/schemas/WiredPortDuplex'
      required:
        - old
        - new
    LldpType:
      description: LLDP TLV type
      type: string
      enum:
        - ChassisId
        - PortId
        - PortDescription
        - SystemName
        - SystemDescription
        - SystemCapabilities
        - ManagementAddress
        - Custom
      example: ChassisId
    LldpElement:
      type: array
      description: Collection of LLDP TLVs
      items:
        type: object
        properties:
          type:
            $ref: '#/components/schemas/LldpType'
          subtype:
            type: string
            description: Custom TLV subtype
          value:
            type: string
            description: LLDP TLV value
      required:
        - type
        - value
    InterfaceStateLldpChangeElement:
      type: object
      description: Wired port change LLDP neighbor
      properties:
        old:
          $ref: '#/components/schemas/LldpElement'
        new:
          $ref: '#/components/schemas/LldpElement'
      required:
        - new
    InterfaceStateChangeElement1:
      type: object
      properties:
        adminStatus:
          $ref: '#/components/schemas/InterfaceStateStatusChangeElement'
        operStatus:
          $ref: '#/components/schemas/InterfaceStateStatusChangeElement'
        speed:
          $ref: '#/components/schemas/InterfaceStateSpeedChangeElement'
        duplex:
          $ref: '#/components/schemas/InterfaceStateDuplexChangeElement'
        lldp:
          $ref: '#/components/schemas/InterfaceStateLldpChangeElement'
      example:
        adminStatus:
          old: Down
          new: Up
        operStatus:
          old: Down
          new: Up
        speed:
          old: 100M
          new: 1G
        duplex:
          old: Half
          new: Full
        lldp:
          old:
            - type: ChassisId
              value: '00:11:88:FE:AD:A8'
            - type: PortId
              value: '13'
            - type: Custom
              subtype: Avaya/Extreme Fabric Attach element Management Vlan
              value: '5'
          new:
            - type: ChassisId
              value: '00:11:88:FE:AD:A8'
            - type: PortId
              value: '14'
            - type: Custom
              subtype: Avaya/Extreme Fabric Attach element Management Vlan
              value: '5'
    InterfaceStateElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/InterfaceStateChangeElement1'
        - properties:
            keys:
              $ref: '#/components/schemas/InterfaceKeysElement'
      required:
        - keys
    InterfaceStateCallbackElement:
      description: >
        Callback payload is an array of report elements.

        Each report element has the same timestamp and set of tags.

        When telegraf needs to send a set of report elements with different
        timestamps

        and/or different tags, it uses one callback POST request and include an
        array

        of report elements.

        Event triggered on change of the admin state or oper state.

        Report the current state of "admin" and "oper" state after the change

        Example

        admin UP -> admin Down

        {admin = Down, oper = Up}

        oper Up -> oper Down

        {admin = Down, oper = Down}
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InterfaceStateElement'
      example:
        name: InterfaceStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 11
              name: ge1
            adminStatus:
              old: Down
              new: Up
            operStatus:
              old: Down
              new: Up
            lldp:
              old:
                - type: ChassisId
                  value: '00:11:88:FE:AD:A8'
                - type: PortId
                  value: '13'
                - type: Custom
                  subtype: Avaya/Extreme Fabric Attach element Management Vlan
                  value: '5'
              new:
                - type: ChassisId
                  value: '00:11:88:FE:AD:A8'
                - type: PortId
                  value: '14'
                - type: Custom
                  subtype: Avaya/Extreme Fabric Attach element Management Vlan
                  value: '5'
    SshLoginFailCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
      example:
        name: SshLoginFail
        device:
          serialnumber: '123234234'
        ts: 1650477173000
    RebootReason:
      type: string
      enum:
        - Upgrade
        - GuiRequest
        - CliRequest
        - PowerFailure
        - SoftwareFailure
        - Unknown
      example: Upgrade
    RebootEventElement:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/RebootReason'
      required:
        - reason
    RebootEventCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/RebootEventElement'
      example:
        name: RebootEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - reason: Upgrade
    UpgradeResult:
      type: string
      enum:
        - Success
        - FailedNoImage
        - FailedBadParameter
        - FailedSameWithCurrentImage
        - FailedSameWithBackupImage
        - FailedAborted
        - FailedEprog
        - FailedEerase
        - FailedEmtd
        - FailedEidx
        - FailedEsize
        - FailedReadHwInfo
        - FailedNotCompatibleImage
        - FailedWrongPlatformTypeImage
        - FailedInvalidCorruptedImage
        - FailedDowngradePrevented
        - FailedUnknownReason
      example: Success
    UpgradeEventElement:
      type: object
      properties:
        from:
          description: Old version
          type: string
        to:
          description: New version
          type: string
        result:
          $ref: '#/components/schemas/UpgradeResult'
      required:
        - to
        - result
    UpgradeEventCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/UpgradeEventElement'
      example:
        name: UpgradeEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - from: 10.2.0.0-029R
            to: 10.2.0.0-030R
            result: Success
    OpticalModulesTagsElement:
      description: Information about the optical module.
      type: object
      properties:
        type:
          description: The module type.
          type: string
        vendor:
          description: The vendor name.
          type: string
    OpticalModulesState:
      description: Optical modules state.
      type: string
      enum:
        - INSERTED
        - REMOVED
    OpticalModulesStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        tags:
          $ref: '#/components/schemas/OpticalModulesTagsElement'
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/OpticalModulesState'
            new:
              $ref: '#/components/schemas/OpticalModulesState'
      required:
        - keys
        - state
    OpticalModulesStateChangeCallbackElement:
      description: Reports the optical modules state change event.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OpticalModulesStateChangeEntry'
      example:
        name: OpticalModulesStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 11
              name: ge1
            tags:
              type: 40GbCR4BoC
              vendor: EXTREME NETWORKS
            state:
              old: REMOVED
              new: INSERTED
    OpticalModulesErrorEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        description:
          description: The description of the error.
          type: string
          maxLength: 255
      required:
        - keys
    OpticalModulesErrorCallbackElement:
      description: Reports the optical modules errors.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OpticalModulesErrorEntry'
      example:
        name: OpticalModulesError
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 11
              name: ge1
            description: string
    StackNodeTransitionReason:
      description: The reason why the stack node change event was generated.
      properties:
        reason:
          type: string
          enum:
            - UNKNOWN
            - MEMBER_ADD
            - MEMBER_REMOVE
            - MEMBER_UPDATE
            - MEMBER_MISMATCH
            - MEMBER_FAIL
    StackNodeTransitionGlobals:
      type: object
      properties:
        global:
          $ref: '#/components/schemas/StackNodeTransitionReason'
    StackNodeKeysElement:
      type: object
      required:
        - serialnumber
      properties:
        serialnumber:
          description: The serial number of the slot in a stack.
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
    StackNodeTagsElement:
      description: Attributes associated with the stack node.
      type: object
      properties:
        slotNumber:
          description: Device Slot Number
          type: integer
          readOnly: true
        baseMacAddress:
          $ref: '#/components/schemas/MacAddressNonObject'
        firmwareVersion:
          description: >-
            The vendor-specific firmware revision For details see ANSI/TIA-1057,
            Section 10.2.6.2.
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        hardwareRev:
          description: Device hardware revision level.
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        modelName:
          description: Device model name
          type: string
          minLength: 0
          maxLength: 32
          readOnly: true
        numPorts:
          description: The total number of ports currently installed in the chassis.
          type: integer
          minimum: 0
          maximum: 255
          readOnly: true
        partNumber:
          description: Device part number or PEC code
          type: string
          minLength: 0
          maxLength: 16
          readOnly: true
        sysBuildTime:
          description: System build time.
          type: string
          readOnly: true
        vims:
          description: >-
            A list containing all VIMs present on the device and their settings.
            If no VIM is inserted or the base system does not support VIMs, the
            list will be empty.
          type: array
          items:
            $ref: '#/components/schemas/VimSettings'
      example:
        slotNumber: 1
        baseMacAddress: '00:96:00:af:09:01'
        firmwareVersion: 32.6.2.67
        hardwareRev: '03'
        modelName: 5520-48W
        numPorts: 60
        partNumber: 800994-00-03
        sysBuildTime: 'Sun 07 Jan 2024 03:48:37 PM UTC'
        vims:
          - operationStatus: UP
            partNumber: 800999-00-03
            serialNumber: 2011G-00295
            type: 5520-VIM-4YE-1
    StackNodeStateChangeElement:
      type: object
      properties:
        nodeState:
          $ref: '#/components/schemas/NodeState'
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
    StackNodeStateElement:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/StackNodeKeysElement'
        tags:
          $ref: '#/components/schemas/StackNodeTagsElement'
        state:
          $ref: '#/components/schemas/StackNodeStateChangeElement'
        sysUpTime:
          description: >-
            The time (in hundredths of a second) since the network management
            portion of the system was last re-initialized.
          type: integer
          readOnly: true
      required:
        - keys
    StackNodeState:
      description: |
        The list of slots present in the stack with their attributes.
      type: array
      items:
        $ref: '#/components/schemas/StackNodeStateElement'
    StackNodeTransitionSlots:
      type: object
      properties:
        slots:
          $ref: '#/components/schemas/StackNodeState'
    StackNodeTransitionEventCallbackElementItem:
      type: object
      anyOf:
        - $ref: '#/components/schemas/StackNodeTransitionGlobals'
        - $ref: '#/components/schemas/StackNodeTransitionSlots'
    StackNodeTransitionEventCallbackElement:
      description: >
        Report stack node state change event. The event will contain an array
        of 

        all the nodes in the stack. The data for each slot includes its serial

        number, slot number and h/w information as described in the yaml. 

        In addition, the serial number of the node that caused the generation

        of this event and the reason for this event are included at the
        beginning

        of the message (the fields "device:serialnumber" and "global:reason").
        The

        reporterSerialnumber is the serial number of the Primary node and the

        chassisId is the stack-mac.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: >-
                  #/components/schemas/StackNodeTransitionEventCallbackElementItem
      example:
        name: StackNodeTransitionEvent
        device:
          serialnumber: 3232ABCD
          reporterSerialnumber: '123234234'
          chassisId: '02:96:00:af:09:01'
        items:
          - global:
              reason: MEMBER_ADD
          - slots:
              - keys:
                  serialnumber: '123234234'
                nodeState: PRIMARY
                operationStatus: OPERATIONAL
                sysUpTime: 252917330
                tags:
                  slotNumber: 1
                  baseMacAddress: '00:96:00:af:09:01'
                  firmwareVersion: 32.6.2.67
                  hardwareRev: '03'
                  modelName: 5520-48W
                  numPorts: 60
                  partNumber: 800994-00-03
                  sysBuildTime: 'Sun 07 Jan 2024 03:48:37 PM UTC'
                  vims:
                    - operationStatus: UP
                      partNumber: 800999-00-03
                      serialNumber: 2011G-00295
                      type: 5520-VIM-4YE-1
              - keys:
                  serialnumber: 3232ABCD
                nodeState: BACKUP
                operationStatus: OPERATIONAL
                sysUpTime: 252913330
                tags:
                  slotNumber: 2
                  baseMacAddress: '00:96:00:be:06:01'
                  firmwareVersion: 32.6.2.67
                  hardwareRev: '03'
                  modelName: 5520-24W
                  numPorts: 36
                  partNumber: 800992-00-04
                  sysBuildTime: 'Sun 07 Jan 2024 03:48:37 PM UTC'
              - keys:
                  serialnumber: '456123123'
                nodeState: STANDBY
                operationStatus: OPERATIONAL
                sysUpTime: 252917300
                tags:
                  slotNumber: 3
                  baseMacAddress: '00:96:00:ab:07:01'
                  firmwareVersion: 32.6.2.67
                  hardwareRev: '03'
                  modelName: 5520-24W
                  numPorts: 36
                  partNumber: 800992-00-04
                  sysBuildTime: 'Sun 07 Jan 2024 03:48:37 PM UTC'
              - keys:
                  serialnumber: '123789123'
                nodeState: FAIL
                operationStatus: MISMATCH
                sysUpTime: 0
                tags:
                  slotNumber: 5
                  baseMacAddress: '00:96:00:bc:03:01'
                  firmwareVersion: 32.6.2.67
                  hardwareRev: '03'
                  modelName: 5520-24W
                  numPorts: 36
                  partNumber: 800992-00-04
                  sysBuildTime: 'Sun 07 Jan 2024 03:48:37 PM UTC'
        ts: 1650477173000
    ChannelizedPortChannelization:
      description: Administratively enable/disable the port channelized mode.
      type: string
      enum:
        - ENABLED
        - DISABLED
    ChannelizedPortStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        channelization:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/ChannelizedPortChannelization'
            new:
              $ref: '#/components/schemas/ChannelizedPortChannelization'
        tags:
          type: object
          properties:
            partition:
              description: >
                Available port partition settings. The options vary  depending
                on platform and port. For Fabric Engine (VOSS) the partition is
                determined based on port's speed and  channelization state. This
                attribute is available only for  ports with speed 40G and 100G
                on Fabric Engine (VOSS).  Values 1X20G, 2X10G, 2X50G, 3X25G,
                3X10G and 3X1G are not  supported on Fabric Engine (VOSS).
              type: string
              enum:
                - 1X100G
                - 1X40G
                - 1X20G
                - 4X10G
                - 4X25G
                - 2X50G
                - 2X10G
                - 3X25G
                - 3X10G
                - 3X1G
                - NONE
              default: 1X100G
      required:
        - keys
        - channelization
    ChannelizedPortStateChangeCallbackElement:
      description: >
        Reports when a port has been channelized or channelization has been
        removed. On Fabric Engine, when channelization is enabled, associated
        port sub-channels  will be added.  On Switch Engine, when channelization
        is enabled, port sub-channels associated  with the configured
        'partition' change from 'not present' to 'present'.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ChannelizedPortStateChangeEntry'
      example:
        name: ChannelizedPortStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 192
              name: '1:1'
            channelization:
              old: DISABLED
              new: ENABLED
            tags:
              partition: 4X25G
    PlatformStateCallbackElement:
      type: object
      properties:
        fanStateChange:
          type: array
          items:
            $ref: '#/components/schemas/FanStateCallbackElement'
        poeStateChange:
          type: array
          items:
            $ref: '#/components/schemas/PoeStateCallbackElement'
        psuStateChange:
          type: array
          items:
            $ref: '#/components/schemas/PsuStateCallbackElement'
        interfaceStateChange:
          type: array
          items:
            $ref: '#/components/schemas/InterfaceStateCallbackElement'
        sshLoginFail:
          type: array
          items:
            $ref: '#/components/schemas/SshLoginFailCallbackElement'
        rebootEvent:
          type: array
          items:
            $ref: '#/components/schemas/RebootEventCallbackElement'
        upgradeEvent:
          type: array
          items:
            $ref: '#/components/schemas/UpgradeEventCallbackElement'
        opticalModulesStateChange:
          type: array
          items:
            $ref: '#/components/schemas/OpticalModulesStateChangeCallbackElement'
        opticalModulesError:
          type: array
          items:
            $ref: '#/components/schemas/OpticalModulesErrorCallbackElement'
        stackNodeTransitionEvent:
          type: array
          items:
            $ref: '#/components/schemas/StackNodeTransitionEventCallbackElement'
        channelizedPortStateChange:
          type: array
          items:
            $ref: '#/components/schemas/ChannelizedPortStateChangeCallbackElement'
    RouteProtectionEventType:
      description: |
        The type of route protection associated with the gateway.
      type: string
      enum:
        - RoutePingProtectGwStateChange
        - RouteBfdProtectGwStateChange
      example: RoutePingProtectGwStateChange
    RouteProtectionEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/RouteProtectionEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: RoutePingProtectGwStateChange
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    RoutePingProtectionEventKey:
      description: Information to identify a gateway.
      type: object
      allOf:
        - $ref: '#/components/schemas/VrName'
        - $ref: '#/components/schemas/GeneralIpAddress'
      required:
        - vrName
        - ipAddressType
        - address
      example:
        vrName: vr-3
        ipAddressType: IPv4
        address: 1.1.1.1
    RouteProtectionEventState:
      description: |
        The route protection state of a gateway.
      type: string
      enum:
        - UNKNOWN
        - DISABLED
        - UP
        - DOWN
      example: UP
    RoutePingProtectGwStateChange:
      type: object
      description: This object represents the protection state of a static route gateway
      properties:
        keys:
          $ref: '#/components/schemas/RoutePingProtectionEventKey'
        state:
          $ref: '#/components/schemas/RouteProtectionEventState'
      required:
        - keys
    RoutePingProtectCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/RoutePingProtectGwStateChange'
      example:
        name: RoutePingProtectGwStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              vrName: vrf-5
              ipAddressType: IPv4
              address: 1.1.1.1
            state: UP
    RouteProtectionEventCallbackElement:
      type: object
      properties:
        RoutePingProtectGwStateChange:
          type: array
          items:
            $ref: '#/components/schemas/RoutePingProtectCallbackElement'
    SlppEventType:
      type: string
      enum:
        - SlppPortDown
        - SlppGuardPortUp
        - SlppGuardPortDown
      example: SlppPortDown
    SlppEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/SlppEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: SlppPortDown
          - type: SlppGuardPortUp
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    SlppPortDownKeysElement:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/InterfaceKeysElement'
        vlan:
          allOf:
            - $ref: '#/components/schemas/VlanId'
            - type: object
              properties:
                name:
                  description: VLAN name associated with the egress interface.
                  type: string
                  minLength: 0
                  maxLength: 64
    SlppPortDownEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/SlppPortDownKeysElement'
        mac:
          type: string
    SlppPortDownCallbackElement:
      description: |
        Reports a port going down due to receiving a SLPP PDU
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SlppPortDownEntry'
      example:
        name: SlppPortDown
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              port:
                name: '1:2'
                ifIndex: 193
              vlan:
                id: 10
                name: VLAN-10
            mac: '40:CC:DD:B1:12'
    SlppGuardPortUpKeysElement:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/InterfaceKeysElement'
    SlppGuardPortUpEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/SlppGuardPortUpKeysElement'
    SlppGuardPortUpCallbackElement:
      description: |
        Reports a port going down due to receiving a SLPP GUARD
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SlppGuardPortUpEntry'
      example:
        name: SlppGuardPortUp
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              port:
                name: '1:2'
                ifIndex: 193
    SlppGuardPortDownKeysElement:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/InterfaceKeysElement'
    SlppGuardPortDownEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/SlppGuardPortDownKeysElement'
        timer:
          type: integer
          format: int32
    SlppGuardPortDownCallbackElement:
      description: |
        Reports a port going down due to receiving a SLPP GUARD
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SlppGuardPortDownEntry'
      example:
        name: SlppGuardPortDown
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              port:
                name: '1:2'
                ifIndex: 193
            timer: 60
    SlppStateCallbackElement:
      type: object
      properties:
        slppPortDown:
          type: array
          items:
            $ref: '#/components/schemas/SlppPortDownCallbackElement'
        slppGuardPortUp:
          type: array
          items:
            $ref: '#/components/schemas/SlppGuardPortUpCallbackElement'
        slppGuardPortDown:
          type: array
          items:
            $ref: '#/components/schemas/SlppGuardPortDownCallbackElement'
    MlagEventType:
      type: string
      enum:
        - MlagPeerStateChange
      example: MlagPeerStateChange
    MlagEventSubscriptionRequest:
      description: The request to subscribe MLAG events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/MlagEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: MlagPeerStateChange
        flushInterval: 1
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
    MlagPeerIstState:
      description: Indicates different SMLT IST states.
      type: string
      enum:
        - DOWN
        - UP
        - DIALECT_NEGOTIATE_IN_PROGRESS
        - MLT_TABLE_SYNC_START
        - MLT_TABLE_SYNC_IN_PROGRESS
        - HA_FAILOVER
        - HA_RECOVERY
        - ERROR
    MlagPeerStateChangeEntry:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/MlagPeerId'
        smltType:
          description: Type of violation.
          type: string
          enum:
            - IST_MASTER
            - IST_SLAVE
        state:
          type: object
          properties:
            old:
              $ref: '#/components/schemas/MlagPeerIstState'
            new:
              $ref: '#/components/schemas/MlagPeerIstState'
      required:
        - state
        - keys
    MlagPeerStateChangeCallbackElement:
      description: |
        Reports the MLAG/SMLT peer state change event.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/MlagPeerStateChangeEntry'
      example:
        name: MlagPeerStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              peerId: Default
            smltType: IST_MASTER
            state:
              old: DOWN
              new: UP
    MlagPeerStateCallbackElement:
      type: object
      properties:
        mlagPeerStateChange:
          type: array
          items:
            $ref: '#/components/schemas/MlagPeerStateChangeCallbackElement'
    WirelessStatsType:
      type: string
      enum:
        - RfStats
        - NetworkStats
        - ClientStats
      example: RfStats
    WirelessStatsSubscriptionRequest:
      description: The request to subscribe device stats.
      type: object
      required:
        - stats
      allOf:
        - properties:
            stats:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/WirelessStatsType'
                  sampleCount:
                    description: Number of sample
                    type: integer
                    format: int32
                    default: 6
                    minimum: 1
                    maximum: 16
                  samplePeriod:
                    description: Sample period in seconds
                    type: integer
                    format: int32
                    default: 10
                    minimum: 1
                    maximum: 60
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsStats'
      example:
        stats:
          - type: RfStats
            sampleCount: 6
            samplePeriod: 10
          - type: NetworkStats
            sampleCount: 6
            samplePeriod: 10
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/stats'
        flushInterval: 30
    PercentGauge:
      type: object
      required:
        - avg
      properties:
        min:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        max:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        avg:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
      example:
        min: 20
        max: 60
        avg: 50
    RfStatsEntry:
      type: object
      description: |-
        channelUtilization: Total channel utilization in percent.
        interferenceUtilization: Total interference airtime in percent.
        txUtilization: Total transmit channel utilization in percent.
        rxUtilization: Total receive channel utilization in percent.
        noise: Noise level in dBm.
        crcErrorRate: Percent of receice packets with CRC error.
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        channelUtilization:
          $ref: '#/components/schemas/PercentGauge'
        interferenceUtilization:
          $ref: '#/components/schemas/PercentGauge'
        txUtilization:
          $ref: '#/components/schemas/PercentGauge'
        rxUtilization:
          $ref: '#/components/schemas/PercentGauge'
        noise:
          $ref: '#/components/schemas/Int32Gauge'
        crcErrorRate:
          $ref: '#/components/schemas/FloatGauge'
      required:
        - keys
    RfStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/RfStatsEntry'
      example:
        name: RfStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - channelUtilization:
              min: 20
              max: 60
              avg: 50
            interferenceUtilization:
              min: 2
              max: 5
              avg: 3
            txUtilization:
              min: 15
              max: 40
              avg: 20
            rxUtilization:
              min: 5
              max: 20
              avg: 8
            noise:
              min: -78
              max: -75
              avg: -76
            crcErrorRate:
              min: 0.2
              max: 0.5
              avg: 0.3
            keys:
              ifIndex: 0
              name: wifi0.1
          - channelUtilization:
              min: 20
              max: 60
              avg: 50
            interferenceUtilization:
              min: 2
              max: 5
              avg: 3
            txUtilization:
              min: 15
              max: 40
              avg: 20
            rxUtilization:
              min: 5
              max: 20
              avg: 8
            noise:
              min: -95
              max: -90
              avg: -92
            crcErrorRate:
              min: 0.1
              max: 0.3
              avg: 0.2
            keys:
              ifIndex: 1
              name: wifi1.1
    NetworkStatsEntry:
      description: |-
        txRate: Radio transmit rate in Mbit/sec.
        rxRate: Radio receive rate in Mbit/sec.
        clientCount: Number of clients, connected to the radio.
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        txPackets:
          description: Counter - Number of transmitted packets.
          type: integer
          format: int64
        txErrors:
          description: Counter - Number of transmitted packets with errors.
          type: integer
          format: int64
        txDropped:
          description: Counter - Number of dropped transmit packets.
          type: integer
          format: int64
        txBytes:
          description: Counter - Number of transmitted bytes.
          type: integer
          format: int64
        txRetryCount:
          description: Counter - Number of transmit retries.
          type: integer
          format: int64
        txRate:
          $ref: '#/components/schemas/FloatGauge'
        rxPackets:
          description: Counter - Number of received packets.
          type: integer
          format: int64
        rxErrors:
          description: Counter - Number of received packets with errors.
          type: integer
          format: int64
        rxDropped:
          description: Counter - Number of dropped receive packets.
          type: integer
          format: int64
        rxBytes:
          description: Counter - Number of received bytes.
          type: integer
          format: int64
        rxRetryCount:
          description: Counter - Number of receive retries.
          type: integer
          format: int64
        rxRate:
          $ref: '#/components/schemas/FloatGauge'
        clientCount:
          $ref: '#/components/schemas/Int64Gauge'
      required:
        - keys
    NetworkStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/NetworkStatsEntry'
      example:
        name: NetworkStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - txPackets: 1000
            txErrors: 0
            txDropped: 0
            txBytes: 100000
            txRetryCount: 2
            txRate:
              min: 11.5
              avg: 100
              max: 240
            rxPackets: 1200
            rxErrors: 0
            rxDropped: 0
            rxBytes: 120000
            rxRetryCount: 0
            rxRate:
              min: 16
              avg: 120
              max: 240
            clientCount:
              min: 0
              avg: 12
              max: 20
            keys:
              ifIndex: 0
              name: wifi0.1
          - txPackets: 2000
            txErrors: 0
            txDropped: 0
            txBytes: 200000
            txRetryCount: 0
            txRate:
              min: 24
              avg: 240
              max: 600
            rxPackets: 2200
            rxErrors: 0
            rxDropped: 0
            rxBytes: 220000
            rxRetryCount: 0
            rxRate:
              min: 36
              avg: 240
              max: 640
            clientCount:
              min: 2
              avg: 18
              max: 22
            keys:
              ifIndex: 1
              name: wifi1.1
    ClientStatsEntry:
      description: |-
        assocTime: Wireless association time in milliseconds.
        authTime: Authentication time in milliseconds.
        dhcpTime: Time to obtain IP address in milliseconds.
        dnsTime: Time to resolve domain names in milliseconds.
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/InterfaceKeysElement'
        assocTime:
          $ref: '#/components/schemas/Int64Gauge'
        authTime:
          $ref: '#/components/schemas/Int64Gauge'
        dhcpTime:
          $ref: '#/components/schemas/Int64Gauge'
        dnsTime:
          $ref: '#/components/schemas/Int64Gauge'
        roamSuccessCount:
          description: Counter - Number of successful roamings.
          type: integer
          format: int64
        assocSuccessCount:
          description: Counter - Number of successfully associated clients.
          type: integer
          format: int64
        authSuccessCount:
          description: Counter - Number of successfully authenticated clients.
          type: integer
          format: int64
        dhcpSuccessCount:
          description: >-
            Counter - Number of clients, successfully obtained IP address via
            DHCP requests.
          type: integer
          format: int64
        dnsClietSuccessCount:
          description: >-
            Counter - Number of successful clients, successfully resolved FQDN
            via DNS.
          type: integer
          format: int64
        dnsRequestSuccessCount:
          description: Counter - Number of successful DNS requests.
          type: integer
          format: int64
        roamFailedCount:
          description: Counter - Number of roaming failures.
          type: integer
          format: int64
        assocFailedCount:
          description: Counter - Number of clients that failed associations.
          type: integer
          format: int64
        authFailedCount:
          description: Counter - Number of clients that failed authentications.
          type: integer
          format: int64
        dhcpFailedCount:
          description: >-
            Counter - Number of clients that failed to obtain IP address via
            DHCP.
          type: integer
          format: int64
        dnsClientFailedCount:
          description: Counter - Number of clients that failed at least one DNS requests.
          type: integer
          format: int64
        dnsRequestFailedCount:
          description: Counter - Number of failed DNS requests.
          type: integer
          format: int64
      required:
        - keys
    ClientStatsCallbackElement:
      type: object
      required:
        - items
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ClientStatsEntry'
      example:
        name: ClientStats
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - assocTime:
              min: 10
              avg: 20
              max: 75
            authTime:
              min: 20
              avg: 30
              max: 100
            dhcpTime:
              min: 100
              avg: 130
              max: 250
            dnsTime:
              min: 200
              avg: 300
              max: 1000
            roamFailedCount: 1
            assocFailedCount: 0
            authFailedCount: 5
            dhcpFailedCount: 0
            dnsFailedCount: 1
            dnsReqFailedCount: 5
            keys:
              ifIndex: 0
              name: wifi0.1
    WirelessStatsCallbackElement:
      type: object
      properties:
        rfStats:
          type: array
          items:
            $ref: '#/components/schemas/RfStatsCallbackElement'
        networkStats:
          type: array
          items:
            $ref: '#/components/schemas/NetworkStatsCallbackElement'
        clientStats:
          type: array
          items:
            $ref: '#/components/schemas/ClientStatsCallbackElement'
    WirelessEventType:
      type: string
      enum:
        - RadioStateChange
        - DfsEvent
        - ClientEvent
      example: RadioStateChange
    WirelessEventSubscriptionRequest:
      description: The request to subscribe device events.
      type: object
      required:
        - events
      allOf:
        - properties:
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/WirelessEventType'
                required:
                  - type
        - $ref: '#/components/schemas/CallbackParamsEvents'
      example:
        events:
          - type: RadioStateChange
          - type: DfsEvent
        callbackUrl: 'https://telemetry.extremecloudiq.com/v0/events'
        flushInterval: 1
    RadioInterfaceStatus:
      type: string
      enum:
        - Down
        - Up
      example: Up
    RadioStateStatusChangeElement:
      type: object
      description: Radio interface status
      properties:
        old:
          $ref: '#/components/schemas/RadioInterfaceStatus'
        new:
          $ref: '#/components/schemas/RadioInterfaceStatus'
      required:
        - old
        - new
    RadioStateChannelChangeElement:
      type: object
      description: Channel frequency in MHz
      properties:
        old:
          type: integer
        new:
          type: integer
      required:
        - old
        - new
    RadioStateChannelWidthChangeElement:
      type: object
      description: Channel width in MHz
      properties:
        old:
          type: integer
        new:
          type: integer
      required:
        - old
        - new
    RadioStatePowerChangeElement:
      type: object
      description: Radio Effective Isotropic Radiated Power (EIRP) in dBm
      properties:
        old:
          type: number
          format: float
        new:
          type: number
          format: float
      required:
        - old
        - new
    RadioStateChangeElement:
      type: object
      properties:
        adminStatus:
          $ref: '#/components/schemas/RadioStateStatusChangeElement'
        operStatus:
          $ref: '#/components/schemas/RadioStateStatusChangeElement'
        channel:
          $ref: '#/components/schemas/RadioStateChannelChangeElement'
        channelWidth:
          $ref: '#/components/schemas/RadioStateChannelWidthChangeElement'
        power:
          $ref: '#/components/schemas/RadioStatePowerChangeElement'
    RadioStateElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/RadioStateChangeElement'
        - properties:
            keys:
              $ref: '#/components/schemas/InterfaceKeysElement'
      required:
        - keys
    RadioStateCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/RadioStateElement'
      example:
        name: RadioStateChange
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              ifIndex: 1
              name: wifi1.1
            adminStatus:
              old: Down
              new: Up
            operStatus:
              old: Down
              new: Up
            channel:
              old: 5180
              new: 5200
            channelWidth:
              old: 20
              new: 40
            power:
              old: 12.5
              new: 16
    DfsEventElement:
      type: object
      properties:
        radarType:
          type: string
          description: Type of detected radar
        radarPulseTrain:
          type: string
          description: Pattern of radar pulse
        channelUtilization:
          description: Total channel utilization in percent.
          type: integer
        interferenceUtilization:
          description: Total interference airtime in percent.
          type: integer
        txUtilization:
          description: Total transmit channel utilization in percent.
          type: integer
        rxUtilization:
          description: Total receive channel utilization in percent.
          type: integer
        clientCount:
          description: 'Number of clients, connected to the radio.'
          type: integer
    DfsEventCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/DfsEventElement'
      example:
        name: DfsEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - radarType: Type1
            radarPulseTrain: PulseTrain1
            channelUtilization: 25
            interferenceUtilization: 2
            txUtilization: 13
            rxUtilization: 10
            clientCount: 20
    ClientKeysElement:
      type: object
      properties:
        mac:
          type: string
          description: Client MAC address
          pattern: '^([0-9A-F]{2}:){5}([0-9A-F]{2})$'
    ClientEventDuplicateIpAddressElement:
      description: Duplicate IP address.
      type: object
      properties:
        ipv4:
          type: string
          format: ipv4
          description: Client IPv4 address
        other:
          type: array
          items:
            type: string
            description: MAC address of client that has the same IPv4 address
            pattern: '^([0-9A-F]{2}:){5}([0-9A-F]{2})$'
    ClientEventAssocFailureElement:
      description: Wireless association failure.
      type: object
      properties:
        statusCode:
          type: integer
          description: Wireless association status code
    ClientEventAuthFailureElement:
      description: Authentication failure.
      type: object
      properties:
        errorCode:
          type: integer
          description: Wireless association error code
    ClientEventDhcpFailureElement:
      description: Failure to obtain IP address via DHCP.
      type: object
      properties:
        lastMsg:
          type: string
          description: 'Last DHCP message, observed between client and DHCP server'
          enum:
            - Discover
            - Offer
            - Request
            - Ack
            - Nack
        serverIpv4:
          type: string
          format: ipv4
          description: IP address of DHCP server
        serverMac:
          type: string
          pattern: '^([0-9A-F]{2}:){5}([0-9A-F]{2})$'
          description: DHCP server MAC address
        clientIpv4:
          type: string
          format: ipv4
          description: IP address requested or offered in the DHCP transaction
    ClientEventElement:
      type: object
      properties:
        keys:
          $ref: '#/components/schemas/ClientKeysElement'
        duplicateIpAddr:
          $ref: '#/components/schemas/ClientEventDuplicateIpAddressElement'
        assocFailure:
          $ref: '#/components/schemas/ClientEventAssocFailureElement'
        authFailure:
          $ref: '#/components/schemas/ClientEventAuthFailureElement'
        dhcpFailure:
          $ref: '#/components/schemas/ClientEventDhcpFailureElement'
      required:
        - keys
    ClientEventCallbackElement:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseDeviceElement'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ClientEventElement'
      example:
        name: ClientEvent
        device:
          serialnumber: '123234234'
        ts: 1650477173000
        items:
          - keys:
              mac: '82:77:87:29:0C:04'
            duplicateIpAddr:
              ipv4: 172.16.222.7
              other:
                - '5A:FE:31:4C:D7:D7'
            assocFailure:
              statusCode: 17
            authFailure:
              errorCode: 2
            dhcpFailure:
              lastMsg: Nack
              serverIpv4: 10.0.0.1
              serverMac: '5A:FE:31:4C:D7:FA'
              clientIpv4: 172.16.0.2
    WirelessStateCallbackElement:
      type: object
      properties:
        radioStateChange:
          type: array
          items:
            $ref: '#/components/schemas/RadioStateCallbackElement'
        dfsEvent:
          type: array
          items:
            $ref: '#/components/schemas/DfsEventCallbackElement'
        clientEvent:
          type: array
          items:
            $ref: '#/components/schemas/ClientEventCallbackElement'
  responses:
    DefaultResponse:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
  parameters:
    port:
      name: port
      in: path
      description: The name of the port.
      required: true
      schema:
        $ref: '#/components/schemas/PortName'
    core_file_name:
      in: path
      name: core_file_name
      description: The name of the core file.
      required: true
      schema:
        description: core file string
        type: string
        minLength: 1
        maxLength: 64
    slot:
      in: path
      name: slot
      description: >-
        The number of the unit in a stack. Fabric Engine does not support stack,
        this attribute will always be 1.
      required: true
      schema:
        description: unit number in a stack
        type: integer
        minimum: 1
        maximum: 8
    continue_on_failure:
      in: query
      name: continue_on_failure
      description: Continue executing commands on failure of previous ones
      required: false
      schema:
        default: false
        type: boolean
    context_id:
      in: path
      name: context_id
      description: >
        context_id to identify a request by.

        This context_id must have been supplied with the original request as
        well
      required: true
      schema:
        description: context_id string
        type: string
        minLength: 1
        maxLength: 64
    host_type:
      name: host_type
      in: path
      description: 'The type of identifier for the server (hostname, IPv4, or IPv6)'
      required: true
      schema:
        type: string
        enum:
          - hostname
          - IPv4
          - IPv6
    general_host:
      name: host
      in: path
      description: The identifier of the server
      required: true
      schema:
        type: string
    vr_name:
      name: vr_name
      in: path
      description: The name of the virtual router
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 32
    vlan_id:
      name: vlan_id
      in: path
      description: The ID of the VLAN.
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 4094
    address:
      name: address
      in: path
      description: The IP address to delete (IPv4 or IPv6 depending on address_type)
      required: true
      schema:
        $ref: '#/components/schemas/IpAddress'
    address_type:
      name: address_type
      in: path
      description: The type of IP address (IPv4 or IPv6)
      required: true
      schema:
        type: string
        enum:
          - IPv4
          - IPv6
    domain_name:
      name: domain_name
      in: path
      description: A DNS domain name
      required: true
      schema:
        type: string
    start:
      name: start
      in: query
      description: The starting index for retrieval
      schema:
        type: integer
        format: int32
        minimum: 0
    count:
      name: count
      in: query
      description: The number of items to process
      schema:
        type: integer
        format: int32
        minimum: 0
    lag_id:
      name: lag_id
      in: query
      description: The ID of the LAG.
      required: false
      schema:
        $ref: '#/components/schemas/LagId'
    port1:
      name: port
      in: query
      description: The name of the port.
      required: false
      schema:
        $ref: '#/components/schemas/PortName'
    vlan_id1:
      name: vlan_id
      in: query
      description: The ID of the VLAN.
      required: false
      schema:
        $ref: '#/components/schemas/VlanIdNonObject'
    vr_name1:
      name: vr_name
      in: query
      description: The name of the virtual router
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 32
    seed_type:
      in: path
      name: seed_type
      description: Seed type of the MLAG peer
      required: true
      schema:
        $ref: '#/components/schemas/MlagSeedType'
    seed_value:
      in: path
      name: seed_value
      description: Seed value of the MLAG peer
      required: true
      schema:
        $ref: '#/components/schemas/MlagSeedValue'
    profile_name:
      in: path
      name: profile_name
      description: The name of the instant-port profile
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 32
    device_name:
      in: path
      name: device_name
      description: Device type name (must be unique within a given profile).
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 32
    action_index:
      in: path
      name: action_index
      description: The index of an action within a device of an instant port profile
      required: true
      schema:
        type: integer
        minimum: 0
    lag_id1:
      in: path
      name: lag_id
      description: LAG config identifier
      required: true
      schema:
        $ref: '#/components/schemas/LagId'
    peer_id:
      in: path
      name: peer_id
      description: MLAG peer identifier
      required: true
      schema:
        type: string
    port2:
      name: port
      in: query
      description: The name of the port.
      required: false
      schema:
        $ref: '#/components/schemas/PortName'
    mac_address:
      name: mac_address
      in: query
      description: The MAC address.
      required: false
      schema:
        $ref: '#/components/schemas/MacAddressNonObject'
    node_alias_protocol:
      name: node_alias_protocol
      in: query
      description: The node-alias protocol type.
      required: false
      schema:
        $ref: '#/components/schemas/NodeAliasProtocols'
    area_id:
      in: path
      name: area_id
      description: The OSPF area ID expressed as an IPv4 address
      required: true
      schema:
        type: string
        format: ipv4
    protocol:
      in: path
      name: protocol
      description: >
        The source protocol for route redistribution. Some

        of the protocols only apply to one of Switch Engine or Fabric Engine

        while others apply to both as indicated in the table below.
        Configuration of

        redistribution from one instance of a protocol to another instance of
        the

        same protocol is currently not supported in this specification.


        | Protocol      | NOS supported |

        |---------------|---------------|

        | DIRECT        | Both          |

        | STATIC        | Both          |

        | OSPF          | Both          |

        | OSPF_INTRA    | Switch Engine |

        | OSPF_INTER    | Both          |

        | OSPF_EXT1     | Both          |

        | OSPF_EXT2     | Both          |

        | RIP           | Both          |

        | BGP           | Both          |

        | IBGP          | Both          |

        | EBGP          | Switch Engine |

        | ISIS          | Both          |

        | ISIS_L1       | Both          |

        | ISIS_L1_EXT   | Switch Engine |

        | ISIS_L2       | Both          |

        | ISIS_L2_EXT   | Switch Engine |

        | HOST_MOBILITY | Switch Engine |

        | DVR           | Fabric Engine |
      required: true
      schema:
        type: string
        enum:
          - DIRECT
          - STATIC
          - OSPF
          - OSPF_INTRA
          - OSPF_INTER
          - OSPF_EXT1
          - OSPF_EXT2
          - RIP
          - BGP
          - IBGP
          - EBGP
          - ISIS
          - ISIS_L1
          - ISIS_L1_EXT
          - ISIS_L2
          - ISIS_L2_EXT
          - HOST_MOBILITY
          - DVR
    role_id:
      in: path
      name: role_id
      description: The index of the policy role
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 63
    mac_address1:
      name: mac_address
      in: path
      description: A colon separated mac address
      required: true
      schema:
        $ref: '#/components/schemas/MacAddressNonObject'
    mac_mask_length:
      name: mac_mask_len
      in: path
      description: The mask length (bits) of the MAC address
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 48
    group_id:
      in: path
      name: group_id
      description: The index of the policy captive portal web redirect group
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 10
    server_id:
      in: path
      name: server_id
      description: >-
        The identifier of the policy captive portal web redirect server within a
        group
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 2
    acl_name:
      in: path
      name: acl_name
      description: The access-list name
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 32
    group_type:
      in: path
      name: group_type
      description: The application signature group type
      required: true
      schema:
        $ref: '#/components/schemas/AppSigGroups'
    custom_name:
      in: path
      name: custom_name
      description: The application signature custom display name
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 50
    secure_profile:
      in: path
      name: secure_profile_name
      description: Secure RADIUS certificate profile identifier
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 16
    host:
      name: host
      in: path
      description: >-
        The identifier which can be an hostname, IPv4 or IPv6 address depending
        on host_type.
      required: true
      schema:
        type: string
    index:
      in: query
      name: index
      description: >
        It specifies the index of the RADIUS server which is intended to be
        updated. (Used only for Switch Engine)
      schema:
        type: integer
    vr_name2:
      in: query
      name: vr_name
      description: >
        It specifies the vrf name for which the RADIUS server is configured.
        (Used only for Switch Engine)
      schema:
        type: string
    server_mode:
      in: path
      name: server_mode
      description: >
        It specifies the use for the configured server.  The server can be used
        for authentication and authorization, accounting or for dynamic client
        authorization.  For Fabric Engine devices only AAA can be set.  For
        Switch Engine devices only AUTH, ACCT can be set.
      required: true
      schema:
        type: string
        enum:
          - AUTH
          - ACCT
          - AAA
    used_by:
      in: path
      name: used_by
      description: >
        Which feature is RADIUS authentication used for. Eg DOT1X, ALL, SNMP,
        WEB, LOGIN, ENDPOINT_TRACKING.  The values of SNMP, WEB,
        ENDPOINT_TRACKING apply only for Fabric Engine(VOSS) devices. Value of
        ALL applies only for Switch Engine(EXOS) devices. Value DOT1X refers to
        Fabric Engine EAPOL and Switch Engine Netlogin. Value LOGIN refers to
        Fabric Engine CLI and Switch Engine Mgmt-access.
      required: true
      schema:
        type: string
        enum:
          - DOT1X
          - ALL
          - LOGIN
          - ENDPOINT_TRACKING
          - SNMP
          - WEB
    primary:
      in: query
      name: primary
      description: >
        It specifies if the RADIUS server which is intended to be updated it's a
        primary server. (Used only for Switch Engine)
      schema:
        type: boolean
    secondary:
      in: query
      name: secondary
      description: >
        It specifies if the RADIUS server which is intended to be updated it's a
        secondary server. (Used only for Switch Engine)
      schema:
        type: boolean
    lag_id2:
      in: path
      name: lag_id
      description: LAG config identifier
      required: true
      schema:
        $ref: '#/components/schemas/LagId'
    isis_area_type:
      in: path
      name: isis_area_type
      description: ISIS area type identifier
      required: true
      schema:
        $ref: '#/components/schemas/IsisAreaType'
    isis_logical_if_id:
      in: path
      name: isis_logical_if_id
      description: ISIS logical interface identifier
      required: true
      schema:
        $ref: '#/components/schemas/IsisLogicalIfId'
    spbm_id:
      in: path
      name: spbm_id
      description: SPBM instance config identifier
      required: true
      schema:
        $ref: '#/components/schemas/SpbmInstanceId'
    isid:
      name: isid
      in: path
      description: The service instance identifier(ISID).
      required: true
      schema:
        $ref: '#/components/schemas/IsidNonObject'
    cvid:
      name: cvid
      in: path
      description: |
        "A value that uniquely identifies the customer vid
        of this SUNI end point. 4095 is not used. 4096 is reserved for
        untagged case"
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 4096
    isid_destination:
      name: isid_destination
      in: path
      description: >
        Specifies an ISID number to represent a local Layer 3 VSN to which

        the ISIS accept policy applies. A value of 0 represents the global
        routing table(GRT).
      required: true
      schema:
        $ref: '#/components/schemas/IsidDestination'
    nickname:
      name: nickname
      in: path
      description: SPBM nickname.
      required: true
      schema:
        type: string
    filter_isid:
      name: filter_isid
      in: path
      description: >
        Specifies an ISID number to represent a local or remote Layer 3 VSN used
        for filtering incoming ISIS routes. 

        A value of 0 represents the global routing table(GRT).
      required: true
      schema:
        $ref: '#/components/schemas/FilterIsid'
    filter_isid_list:
      name: filter_isid_list
      in: path
      description: The ISID list name to which the ISIS accept policy applies
      required: true
      schema:
        $ref: '#/components/schemas/FilterIsidList'
    ipvpn_type:
      name: ipvpn_type
      in: path
      description: The type of IP VPN (IPv4 or IPv6)
      required: true
      schema:
        type: string
        enum:
          - IPv4
          - IPv6
    multicast_snoop_type:
      in: path
      name: multicast_snoop_type
      description: Specifies the type of ISIS L2 multi-area multicast snoop redistribution
      required: true
      schema:
        $ref: '#/components/schemas/IsisL2MultiAreaMulticastSnoopType'
    direction:
      in: path
      name: direction
      description: Specifies the ISIS redistribution configuration direction
      required: true
      schema:
        $ref: '#/components/schemas/IsisRedistDirection'
    isid_source:
      in: path
      name: isid_source
      description: >
        Specifies an ISID number to represent a local Layer 3 VSN to which

        the redistribution applies. A value of 0 represents the global routing
        table(GRT).
      required: true
      schema:
        $ref: '#/components/schemas/IsidSource'
    type:
      in: path
      name: type
      description: Specifies the type of ISIS L3 multi-area redistribution
      required: true
      schema:
        $ref: '#/components/schemas/IsisL3MultiAreaRedistType'
    protocol1:
      in: path
      name: protocol
      description: Specifies the protocol from which the routes are redistributed in ISIS
      required: true
      schema:
        $ref: '#/components/schemas/IsisL3RedistProtocol'
    isid_list:
      name: isid_list
      in: path
      description: Name of L2 ISID list. This list contains ISID instances.
      required: true
      schema:
        $ref: '#/components/schemas/L2IsidList'
    stp_name:
      name: stp_name
      in: path
      description: The name of the STP domain
      required: true
      schema:
        type: string
    if_name:
      name: if_name
      in: path
      description: The name of the thread interface.
      required: true
      schema:
        type: string
    username:
      description: >-
        A user name (minimum and maximum lengths are consistent with VOSS and
        EXOS limits)
      in: path
      name: username
      required: true
      schema:
        $ref: '#/components/schemas/UsernameString'
    prefix_type:
      name: prefix_type
      in: path
      description: The type of IP prefix (IPv4 or IPv6)
      required: true
      schema:
        type: string
        enum:
          - IPv4
          - IPv6
    prefix:
      name: prefix
      in: path
      description: The prefix (IPv4 or IPv6) associated with the static route
      required: true
      schema:
        $ref: '#/components/schemas/IpAddress'
    prefix_len:
      name: prefix_len
      in: path
      description: The prefix length (bits) of the static route
      required: true
      schema:
        type: integer
        minimum: 0
        maximum: 128
    next_hop:
      name: next_hop
      in: path
      description: The next hop address (IPv4 or IPv6) of the static route
      required: true
      schema:
        $ref: '#/components/schemas/IpAddress'
    ip_type:
      name: ip_type
      in: query
      description: Specifies the type of IP address
      required: false
      schema:
        description: Specifies the type of IP address of the routes
        type: string
        enum:
          - IPv4
          - IPv6
    route_vr:
      name: vr_name
      in: query
      description: Name of the VR to return routes for
      schema:
        type: string
    vr_id:
      in: path
      name: vr_id
      description: The VRRP virtual router ID specified in the path
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 255
  securitySchemes:
    basicAuth:
      description: Basic authorization
      scheme: basic
      type: http
    cookieAuth:
      type: apiKey
      name: x-auth-token
      in: cookie
      description: Cookie authorization